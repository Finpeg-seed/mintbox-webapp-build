{"version":3,"file":"static/js/808.6a68a492.chunk.js","mappings":"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","sources":["views/mobileView/components/atoms/DOBFormatter.js","views/mobileView/screens/mintboxpro/MenuScreens/MFAccountDetails.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["function getDDMMYYY(todayTime) {\n  function pad(s) {\n    return s < 10 ? `0${s}` : s;\n  }\n\n  const d = new Date(todayTime);\n  return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\n}\n\nfunction getYYYYMMDD(todayTime) {\n  function pad(s) {\n    return s < 10 ? `0${s}` : s;\n  }\n\n  const d = new Date(todayTime);\n  return [d.getFullYear(), pad(d.getMonth() + 1),pad(d.getDate()) ].join('-');\n}\n\nfunction createDate(days, months, years) {\n  const date = new Date();\n  date.setDate(date.getDate() + days);\n  date.setMonth(date.getMonth() + months);\n  date.setFullYear(date.getFullYear() + years);\n  return date;\n}\n\nexport { getDDMMYYY, createDate, getYYYYMMDD };\n","import React, { useState } from 'react';\nimport cssVar from 'views/mobileView/styles';\nimport db from 'libs/db';\nimport MainHeader from 'views/mobileView/components/molecules/Headers/MainHeader';\nimport { AiOutlineRight } from 'react-icons/ai';\nimport TopPannel from './TopPanel';\nimport { toast } from 'react-toastify';\nimport AdminServices from 'services/api/AdminServices';\nimport { getDDMMYYY } from 'views/mobileView/components/atoms/DOBFormatter';\nimport { baseImgURL } from 'assets/Constant';\n\nexport default function MFAccountDetails(props) {\n    const [clientData, setClientData] = useState({});\n    const [loading, setLoading] = useState();\n\n    React.useEffect(() => {\n        setLoading(true)\n        try {\n            db.get(db.model.user).then(async (user) => {\n                await getClientData(user.userData.id)\n                setLoading(false)\n            })\n        } catch (error) {\n            toast.error(error);\n            setLoading(false)\n        }\n    }, [])\n\n    const getClientData = async (id) => {\n        await db.get(db.model.clientData).then(async (p) => {\n            if (p === null) {\n                let res = await AdminServices.getClient(id).then(res => res);\n                if (res.type === true) {\n                    const a = JSON.parse(res.data);\n                    let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n                    console.log(\"Get Client API :\", aa)\n                    setClientData(aa)\n                    await db.set(db.model.clientData, JSON.stringify(aa))\n                }\n            } else {\n                setClientData(p)\n            }\n        })\n    }\n\n    return (\n        <div className='mainContainer'>\n            <MainHeader header='Profile' navigation={props.history} />\n            <div className='dataContainer px-0'>\n                <TopPannel />\n                <div className='menu-card'>\n                    <img src={baseImgURL+\"menu_user.webp\"} className='menu-card-icon' />\n                    <div className='menu-card-body'>\n                        <div className='bodyTextDark'>Your PAN is {clientData?.Client?.[0].PAN}</div>\n                        <div className='smallTextLight'>\n                            Gender: {clientData?.Client?.[0].Gender === 1 ? \"Male\" : \"Female\"}<br />\n                            Tax status: {clientData?.Client?.[0].TaxStatus}<br />\n                            Date of birth: {getDDMMYYY(clientData?.Client?.[0].DateofBirth)}\n                        </div>\n                    </div>\n                </div>\n                <div className='menu-card'>\n                    <img src={baseImgURL+\"menu_user.webp\"} className='menu-card-icon' />\n                    {\n                        clientData?.Nominees?.length > 0 ?\n                            <div className='menu-card-body'>\n                                <div className='bodyTextDark'>Your nominee is ‘{clientData?.Nominees?.[0].Name}’</div>\n                                <div className='smallTextLight'>\n                                    Relationship with you: {clientData?.Nominees?.[0].Relation}<br />\n                                    Date of birth: {getDDMMYYY(clientData?.Client?.[0].DateofBirth)}\n                                </div>\n                            </div>\n                            :\n                            <div className='menu-card-body'>\n                                <div className='bodyTextDark'>You have not set a nominee</div>\n                            </div>\n                    }\n                </div>\n                <div className='menu-card'>\n                    <img src={baseImgURL+\"menu_user.webp\"} className='menu-card-icon' />\n                    <div className='menu-card-body'>\n                        <div className='bodyTextDark'>Your bank is ‘{clientData?.BankInfo?.[0].BankName}’</div>\n                        <div className='smallTextLight'>\n                            Account number: {clientData?.BankInfo?.[0].AccountNumber}<br />\n                            IFSC: {clientData?.BankInfo?.[0].IFSC}<br />\n                            Bank mandate status: Inactive\n                        </div>\n                        <div className='header3dark secondaryGreen'>\n                            Set up bank mandate <AiOutlineRight size={12} />\n                        </div>\n                    </div>\n                </div>\n                <div style={{ padding: \"4%\" }}>\n                    <div className='header1faint'>Want to correct or update details?</div>\n                    <div className='smallTextLight'>Drop us an email on support@mintbox.ai</div>\n                    <div style={{ marginTop: '4%', border: \"1px solid \" + cssVar.getPropertyValue('--light'), backgroundColor: cssVar.getPropertyValue('--lightest'), borderRadius: \"8px\", padding: \"4%\" }}>\n                        <div className='header1faint secondaryGreen'>Important</div>\n                        <div className='smallTextLight'>Above details are related to only your mutual fund account with mintbox. You can find your demat  account details on your broker’s platform</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["getDDMMYYY","todayTime","pad","s","d","Date","getDate","getMonth","getFullYear","join","MFAccountDetails","props","useState","clientData","setClientData","setLoading","React","db","then","user","getClientData","userData","id","error","toast","p","a","AdminServices","res","type","JSON","parse","data","aa","reduce","f","console","log","stringify","className","MainHeader","header","navigation","history","src","baseImgURL","Client","PAN","Gender","TaxStatus","DateofBirth","Nominees","length","Name","Relation","BankInfo","BankName","AccountNumber","IFSC","size","style","padding","marginTop","border","cssVar","backgroundColor","borderRadius","_arrayLikeToArray","arr","len","i","arr2","Array","_arrayWithHoles","isArray","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","unsupportedIterableToArray","nonIterableRest","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test"],"sourceRoot":""}
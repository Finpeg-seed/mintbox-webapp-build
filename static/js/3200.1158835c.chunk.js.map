{"version":3,"file":"static/js/3200.1158835c.chunk.js","mappings":"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","sources":["services/api/DataServicePY.js","services/api/AdminServicesPY.js","views/mobileView/components/atoms/CurrencyFormat.js","views/mobileView/components/atoms/DataCustomizer.js","views/mobileView/components/atoms/DateFormatter.js","views/mobileView/components/molecules/Cards/PerformanceChart.js","views/mobileView/components/molecules/Headers/MainHeader.js"],"sourcesContent":["import axios from 'axios';\nimport { DataService } from './DataService';\n\nconst MINTBOX_CLIENT_ID = 'Li2L9VO1eawEbsgLrHdpZjhmUdW6N8Cm';\n\nconst API_ENDPOINT = 'https://api.mintbox.ai/py-api';\n\nconst client = axios.create({\n\tbaseURL: API_ENDPOINT,\n\twithCredentials: false\n});\n\nclass DataServicePY {\n\tstatic get(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'GET',\n\t\t\turl: path,\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n\n\tstatic post(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'POST',\n\t\t\turl: path,\n\t\t\tdata: JSON.stringify(data),\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n\n\tstatic postImg(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'multipart/form-data; charset=utf-8;' };\n\n\t\treturn fetch(API_ENDPOINT + path, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: data\n\t\t}).then(r => r.json())\n\t\t\t.then(data => {\n\t\t\t\tif (data.statusCode === 200) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmsg: 'Success',\n\t\t\t\t\t\tdata: data.response,\n\t\t\t\t\t\ttype: true\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t})\n\t}\n\n\tstatic patch(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'PATCH',\n\t\t\turl: path,\n\t\t\tdata: JSON.stringify(data),\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n\n\tstatic put(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'PUT',\n\t\t\turl: path,\n\t\t\tdata: JSON.stringify(data),\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n\n\tstatic delete(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'DELETE',\n\t\t\turl: path,\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n}\n\nconst getAccessToken = async () => {\n\tconst token = await localStorage.getItem('access_token');\n\treturn JSON.stringify({ access_token: token || '' });\n};\n\nconst refreshAccessToken = async () => {\n\tconst res = await DataService.get(`/Auth/getToken?clientId=${MINTBOX_CLIENT_ID}`).then((d) => d);\n\tif (res.type) {\n\t\tawait localStorage.setItem('access_token', res.data.accessToken);\n\t\treturn res.data.accessToken;\n\t}\n\treturn '';\n};\n\nclient.interceptors.request.use(\n\tasync (config) => {\n\t\tconst value = await getAccessToken();\n\t\tconst keys = JSON.parse(value);\n\n\t\tconfig.headers.Authorization = `Bearer ${keys.access_token}`\n\n\t\treturn config;\n\t},\n\t(error) => {\n\t\tPromise.reject(error);\n\t}\n);\n\nclient.interceptors.response.use(\n\t(response) => {\n\t\tif (response.status === 200) {\n\t\t\treturn {\n\t\t\t\tmsg: 'Success',\n\t\t\t\tdata: response.data,\n\t\t\t\ttype: true\n\t\t\t};\n\t\t}\n\t\t// Toast.show({\n\t\t//   text1: 'Error Occured!!',\n\t\t//   text2: 'Try again ...',\n\t\t//   type: 'error'\n\t\t// });\n\t\treturn {\n\t\t\tmsg: response.statusText,\n\t\t\tdata: response.data,\n\t\t\ttype: false\n\t\t};\n\t},\n\n\tasync (error) => {\n\t\tconst { response } = error;\n\t\tconst originalRequest = error.config;\n\n\t\tconsole.log(response)\n\n\t\tif (response) {\n\t\t\t// if (response.status === 401) {\n\t\t\t// \toriginalRequest._retry = true;\n\t\t\t// \tconst access_token = await refreshAccessToken();\n\t\t\t// \tconsole.log('aaac = ', access_token);\n\t\t\t// \taxios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n\t\t\t// \treturn client(originalRequest);\n\t\t\t// } if (response.status === 500) {\n\t\t\t// \toriginalRequest._retry = true;\n\t\t\t// \tconst access_token = await refreshAccessToken();\n\t\t\t// \tconsole.log('aaac = ', access_token);\n\t\t\t// \taxios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n\t\t\t// \treturn client(originalRequest);\n\t\t\t// }\n\t\t\t// Toast.show({\n\t\t\t//   text1: 'Error Occured!!',\n\t\t\t//   text2: 'Try again ...',\n\t\t\t//   type: 'error'\n\t\t\t// });\n\t\t\treturn response;\n\t\t}\n\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport { DataServicePY, API_ENDPOINT };\n","import { DataServicePY } from \"./DataServicePY\";\n\nconst MINTBOX_CLIENT_ID = \"Li2L9VO1eawEbsgLrHdpZjhmUdW6N8Cm\";\n\nexport default {\n\n\tget_goal_scenarios: async (data) => {\n\t\treturn DataServicePY.post('/get_goal_scenarios', data);\n\t},\n\n\tgetGoalCorpus: async (data) => {\n\t\treturn DataServicePY.post('/getGoalTargetCorpus', data);\n\t},\n\n\tgetGoalSIP: async (data) => {\n\t\treturn DataServicePY.post('/getGoalSIP', data);\n\t},\n\n\tgetGoalReturnAndMintbox: async (data) => {\n\t\treturn DataServicePY.post('/getGoalReturnAndMintbox', data);\n\t},\n\n\tgetMintboxChartData: async (id) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getMintboxPerformanceById/${id}`\n\t\t);\n\t},\n\n\tgetETFChartDataBySymbol: async (symbol) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getETFPerformanceBySymbol/${symbol}`\n\t\t);\n\t},\n\n\tgetMFPerformanceById: async (id) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getMFPerformanceById/${id}`\n\t\t);\n\t},\n\n\n\tgetCustomMintboxChartData: async (data) => {\n\t\treturn DataServicePY.post(\n\t\t\t`/core/getCustomMintboxPerformance`,data\n\t\t);\n\t},\n\n\tgetETFTrailingReturns: async (id) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getETFTrailingReturns/${id}`\n\t\t);\n\t},\n\n\tgetETFTrackingError: async (id) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getETFTrackingError/${id}`\n\t\t);\n\t},\n};\n","function kFormatter(val) {\n  if (val >= 10000000) {val = `₹ ${(val / 10000000).toFixed(2)} cr`}\n  else if (val >= 100000) {val = `₹ ${(val / 100000).toFixed(2)} lac`}\n  else if (val >= 1000) {val = `₹ ${(val / 1000).toFixed(2)} k`}\n  else {val = normalFormatter(val)}\n  return val.replace('-', '');\n}\n\nfunction normalFormatter(num,fractionDigits=0) {\n  const a = new Intl.NumberFormat(\"en-IN\", {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: fractionDigits,\n  }).format(num);\n  return `₹ ${a}`;\n}\n\nexport function CurrencyFormat(num=0, type=\"long\",fractionDigits=0) {\n  return type === \"short\" ? kFormatter(Number(num),fractionDigits) : normalFormatter(Number(num),fractionDigits)\n}\n","import { formatDate } from \"./DateFormatter\";\nimport moment from 'moment';\n\nfunction dropdownCustom(data, keys) {\n  for (const [key, value] of Object.entries(data)) {\n    value.id = value[keys[0]] - 1; // Assign new key\n    value.name = value[keys[1]]; // Assign new key\n  }\n\n  return (data);\n}\n\nvar aa = 0\n\nfunction addMonths(date, months) {\n  date.setMonth(date.getMonth() + months);\n  return date;\n}\n\nconst arr = x => Array.from(x);\nconst num = x => Number(x) || 0;\nconst str = x => String(x);\nconst isEmpty = xs => xs.length === 0;\nconst take = n => xs => xs.slice(0,n);\nconst drop = n => xs => xs.slice(n);\nconst reverse = xs => xs.slice(0).reverse();\nconst comp = f => g => x => f (g (x));\nconst not = x => !x;\nconst chunk = n => xs =>\n  isEmpty(xs) ? [] : [take(n)(xs), ...chunk (n) (drop (n) (xs))];\n\n// numToWords :: (Number a, String a) => a -> String\nlet numToWords = n => {\n  \n  let a = [\n    '', 'one', 'two', 'three', 'four',\n    'five', 'six', 'seven', 'eight', 'nine',\n    'ten', 'eleven', 'twelve', 'thirteen', 'fourteen',\n    'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'\n  ];\n  \n  let b = [\n    '', '', 'twenty', 'thirty', 'forty',\n    'fifty', 'sixty', 'seventy', 'eighty', 'ninety'\n  ];\n  \n  let g = [\n    '', 'thousand', 'million', 'billion', 'trillion', 'quadrillion',\n    'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion'\n  ];\n  \n  // this part is really nasty still\n  // it might edit this again later to show how Monoids could fix this up\n  let makeGroup = ([ones,tens,huns]) => {\n    return [\n      num(huns) === 0 ? '' : a[huns] + ' hundred ',\n      num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n      a[tens+ones] || a[ones]\n    ].join('');\n  };\n  \n  let thousand = (group,i) => group === '' ? group : `${group} ${g[i]}`;\n  \n  if (typeof n === 'number')\n    return numToWords(String(n));\n  else if (n === '0')\n    return 'zero';\n  else\n    return comp (chunk(3)) (reverse) (arr(n))\n      .map(makeGroup)\n      .map(thousand)\n      .filter(comp(not)(isEmpty))\n      .reverse()\n      .join(' ');\n};\n\n\nfunction changeObjKey(dataf, keys, newKeys, type, ty) {\n\n  try {\n    if (type === \"type\") {\n      var data = dataf\n      for (const [key, value] of Object.entries(data)) {\n        value[newKeys[0]] = value[keys[0]]; // Assign new key\n        value[newKeys[1]] = new Date(value[keys[1]].toString().replace(\"T00:00:00Z\", \"\")).getTime(); // Assign new key\n        value[\"name\"] = \"Date:-\" + formatDate(value[keys[1]].toString().replace(\"T00:00:00Z\", \"\"))\n      }\n      return data;\n  \n    } if (type === \"normal\") {\n      var data = JSON.parse(JSON.stringify(dataf))\n      for (const [key, value] of Object.entries(data)) {\n        value[newKeys[0]] = value[keys[0]]; // Assign new key\n        value[newKeys[1]] = value[keys[1]]; // Assign new key\n      }\n      return data;\n  \n    } else {\n      var newArr = JSON.parse(dataf.data)\n      for (const [key, value] of Object.entries(newArr)) {\n        var a = String(value[keys[1]]).replace(\" 00:00:00\", \"\").split('-').join('/')\n        var dn = moment(a, 'DD/MM/YYYY')\n        value[newKeys[0]] = Number(value[keys[0]]).toFixed(2) * ty; // Assign new key\n        value[newKeys[1]] = new Date(dn).getTime(); // Assign new key\n        value[\"name\"] = \"Date:-\" + formatDate(value[keys[1]].toString().replace(\" 00:00:00\", \"\"))\n      }\n      return newArr;\n    }\n  } catch (error) {\n    return []\n  }\n\n\n}\n\nexport { dropdownCustom, changeObjKey, addMonths,numToWords };\n\n","function formatDate(d, skip = \"\", seperator = \" \") {\n    var date = \"\";\n    try {\n        date = new Date(d.replace(\" \", \"T\"));\n    } catch (error) {\n        date = new Date(d);\n    }\n\n    if (isNaN(date.getTime())) {\n        return d;\n    }\n    else {\n\n        var month = new Array();\n        month[0] = \"Jan\";\n        month[1] = \"Feb\";\n        month[2] = \"Mar\";\n        month[3] = \"Apr\";\n        month[4] = \"May\";\n        month[5] = \"Jun\";\n        month[6] = \"Jul\";\n        month[7] = \"Aug\";\n        month[8] = \"Sep\";\n        month[9] = \"Oct\";\n        month[10] = \"Nov\";\n        month[11] = \"Dec\";\n\n        let day = date.getDate();\n\n        if (day < 10) {\n            day = \"0\" + day;\n        }\n\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        var strTime = hours + ':' + minutes + ' ' + ampm;\n        // return day + \" \" + month[date.getMonth()] + \" \" + date.getFullYear() + \" - \" + strTime;\n        var finalStr = skip === \"date\" ? month[date.getMonth()] + seperator + date.getFullYear() : day + seperator + month[date.getMonth()] + seperator + date.getFullYear()\n        return finalStr;\n    }\n\n}\n\n\nfunction formatDateddmmyyyy(today) {\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n\n    return dd + '/' + mm + '/' + yyyy;\n}\n\nfunction formatDateyyyymmdd(today) {\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n\n    return yyyy + '-' + mm + '-' + dd;\n}\n\nfunction addMonths(date, months) {\n    date.setMonth(date.getMonth() + months);\n    return date;\n}\nfunction getNextSIPDate(sipDate, freq = 1) {\n    if (freq !== 1) {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), freq)).toISOString())\n    }\n    const date1 = new Date();\n    const date2 = new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 1));\n    const diffTime = Math.abs(date2 - date1);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays < 27) {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 2)).toISOString())\n    } else {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 1)).toISOString())\n    }\n}\n\nexport { formatDate, formatDateddmmyyyy, formatDateyyyymmdd, getNextSIPDate }","import Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official';\nimport React from 'react';\nimport { CurrencyFormat } from 'views/mobileView/components/atoms/CurrencyFormat';\nimport { changeObjKey } from 'views/mobileView/components/atoms/DataCustomizer';\nimport { Chip } from '@material-ui/core';\nimport cssVar from 'views/mobileView/styles';\nimport ActivityLoaderMintbox from '../../atoms/ActivityLoaderMintbox';\nimport AdminServicesPY from 'services/api/AdminServicesPY';\n\nconst PerformanceChart = ({ navigation, type = 3, fundCode, user, etfs, rebalanceFreq = 'Q' }) => {\n    const yrtabs = type === 3 ? [\n        { key: \"A\", name: \"1Y\", value: [\"365D\", 0] },\n        { key: \"b\", name: \"3Y\", value: [\"1095D\", 1] },\n        { key: \"c\", name: \"5Y\", value: [\"1825D\", 2] },\n        { key: \"d\", name: \"10Y\", value: [\"3650D\", 3] },\n        { key: \"dk\", name: \"Live\", value: [\"live\", 4] },\n        { key: \"dm\", name: \"Max\", value: [\"max\", 5] },\n    ] : [\n        { key: \"A\", name: \"1Y\", value: [\"365D\", 0] },\n        { key: \"b\", name: \"3Y\", value: [\"1095D\", 1] },\n        { key: \"c\", name: \"5Y\", value: [\"1825D\", 2] },\n        { key: \"d\", name: \"10Y\", value: [\"3650D\", 3] },\n        { key: \"dm\", name: \"Max\", value: [\"max\", 4] },\n    ]\n\n    const chipset = [\n        { \"key\": \"a\", \"name\": \"₹ 5,000\", value: 5000 },\n        { \"key\": \"b\", \"name\": \"₹ 10,000\", value: 10000 },\n        { \"key\": \"c\", \"name\": \"₹ 50,000\", value: 50000 },\n    ]\n\n    const [noChart, setnoChart] = React.useState(false);\n    const [chartTotalData, setChartTotalData] = React.useState([])\n    const [chartType, setChartType] = React.useState(yrtabs[0])\n    const [chartLoad, setChartLoad] = React.useState(false)\n    const [fundChartData, setFundChartData] = React.useState({})\n    const [chartAmount, setChartAmount] = React.useState(chipset[0])\n    const [tabType, setTabType] = React.useState(0);\n\n\n    const getChartDataTotal = async (etfsFinal) => {\n        try {\n            if (type === 4) {\n                // Custom mintbox\n                var weights = etfs.map((item) => {\n                    return Number(item.allocation) / 100\n                })\n                var etfsFinal = etfs.map((item) => {\n                    return item.Symbol\n                })\n                var data = {\n                    symbols: etfsFinal,\n                    weights: weights,\n                    rebalance_freq: rebalanceFreq\n                }\n                var res1 = await AdminServicesPY.getCustomMintboxChartData(data).then((res) => { return res })\n                if (res1.type) {\n                    setChartTotalData(res1.data)\n                    setFundChartData(res1.data)\n                } else {\n                    setnoChart(true)\n                }\n            } else if (type === 1) {\n                //etfs\n                var res1 = await AdminServicesPY.getETFChartDataBySymbol(fundCode).then((res) => { return res })\n                if (res1.type) {\n                    setChartTotalData(res1.data)\n                    setFundChartData(res1.data)\n                } else {\n                    setnoChart(true)\n                }\n\n            } else if (type === 2) {\n                //mf\n                var res1 = await AdminServicesPY.getMFPerformanceById(Number(fundCode)).then((res) => { return res })\n                if (res1.type) {\n                    setChartTotalData(res1.data)\n                    setFundChartData(res1.data)\n                } else {\n                    setnoChart(true)\n                }\n            } else {\n                //mintboxes\n                var res1 = await AdminServicesPY.getMintboxChartData(fundCode).then((res) => { return res })\n                if (res1.type) {\n                    setChartTotalData(res1.data)\n                    setFundChartData(res1.data)\n                } else {\n                    setnoChart(true)\n                }\n            }\n        } catch (error) {\n            setnoChart(true)\n        }\n    }\n\n    React.useEffect(() => {\n        if (type === 4) {\n            var etfsFinal = etfs.map((item) => {\n                return item.Symbol\n            })\n            getChartDataTotal(etfsFinal)\n        } else {\n            getChartDataTotal()\n        }\n    }, [])\n\n    React.useEffect(() => {\n        setChartLoad(!chartLoad)\n    }, [chartTotalData])\n\n    const keyTitles2 = [\n        { key: \"sip\", title: \"Monthly SIP\" },\n        { key: \"lumpsum\", title: \"Lumpsum\" }\n    ];\n\n    // try {\n    var options = {\n        chart: {\n            backgroundColor: \"transparent\"\n        },\n        title: {\n            text: ''\n        },\n        exporting: {\n            enabled: false\n        },\n        yAxis: {\n            title: {\n                text: ''\n            },\n        },\n        xAxis: [{\n            type: 'datetime',\n            dateTimeLabelFormats: {\n                millisecond: '%H:%M:%S.%L',\n                second: '%H:%M:%S',\n                minute: '%H:%M',\n                hour: '%H:%M',\n                day: '%eth %b',\n                week: '%eth %b',\n                month: '%b \\'%y',\n                year: '%Y'\n            },\n            plotLines: type === 3 && chartType.key !== \"dk\" ? [{\n                color: '#000', // Red\n                value: 1653633000000, // Position, you'll have to translate this to the values on your x axis\n                dashStyle: 'dash',\n                width: 1,\n                label: {\n                    text: \"Inception\", rotation: 0, x: -60,\n                    style: {\n                        color: cssVar.getPropertyValue('--secondaryGreen'),\n                        fontWeight: 'bold'\n                    }\n                }\n            }] : []\n        }\n        ],\n        legend: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                label: {\n                    connectorAllowed: false\n                },\n                marker: {\n                    enabled: false\n                }\n            }\n        },\n        tooltip: {\n            shared: true,\n            valueDecimals: 0,\n            valuePrefix: '₹',\n\n        },\n        credits: {\n            enabled: false\n        },\n        series: [\n            {\n                name: type === 1 ? fundCode : type === 2 ? \"MF\" : \"mintbox\",\n                color: cssVar.getPropertyValue('--secondaryGreen'),\n                data: !fundChartData[tabType ? \"lumpData\" : \"sipData\"] ? [] : changeObjKey(fundChartData[tabType ? \"lumpData\" : \"sipData\"][chartType.value[0]], [type === 1 ? fundCode : type === 2 ? \"MF\" : \"Portfolio\", \"Date\"], [\"y\", \"x\"], \"performanceChart\", chartAmount.value / (chipset[0].value))\n            },\n            {\n                name: \"Benchmark\",\n                color: cssVar.getPropertyValue('--gold'),\n                data: !fundChartData[tabType ? \"lumpData\" : \"sipData\"] ? [] : changeObjKey(fundChartData[tabType ? \"lumpData\" : \"sipData\"][chartType.value[0]], [\"Benchmark\", \"Date\"], [\"y\", \"x\"], \"performanceChart\", chartAmount.value / (chipset[0].value))\n            }\n        ].reverse(),\n        scrollbar: {\n            enabled: false\n        },\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 400\n                },\n            }]\n        },\n\n    };\n    // } catch (error) {\n    //     console.log(error)\n    //     setnoChart(true)\n    // }\n\n    const ContentBeforeChart = () => {\n\n        try {\n            var mintData = JSON.parse(fundChartData[!tabType ? \"sipData\" : \"lumpData\"][chartType.value[0]].data)\n            var benchData = JSON.parse(fundChartData[!tabType ? \"sipData\" : \"lumpData\"][chartType.value[0]].data)\n            var mintXIRR = (JSON.parse(fundChartData[!tabType ? \"sipData\" : \"lumpData\"][chartType.value[0]].xirr)[0][type === 1 ? fundCode : type === 2 ? \"MF\" : \"Portfolio\"] * 100).toFixed(2)\n            var benchXIRR = (JSON.parse(fundChartData[!tabType ? \"sipData\" : \"lumpData\"][chartType.value[0]].xirr)[0].Benchmark * 100).toFixed(2)\n\n            return <>\n                <div style={{ display: \"flex\", margin: \"4%\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='bodyTextLight' style={{ color: cssVar.getPropertyValue(\"--secondaryGreen\") }}>\n                            {type === 1 ? \"ETF\" : type === 2 ? \"Mutual fund\" : \"mintbox\"}\n                        </div>\n                        <div style={{ fontSize: \"16px\", fontWeight: '400', color: cssVar.getPropertyValue('--black') }}>{CurrencyFormat(mintData[mintData.length - 1][type === 1 ? fundCode : type === 2 ? \"MF\" : \"Portfolio\"] * (chartAmount.value / (chipset[0].value)), 'long')}</div>\n                        <div className='header3dark' style={{ color: Number(mintXIRR) >= 0 ? cssVar.getPropertyValue(\"--secondaryGreen\") : cssVar.getPropertyValue(\"--red\") }}>{mintXIRR !== 'X' ? `(${mintXIRR}%)` : \"\"}\n                        </div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='bodyTextLight' style={{ color: cssVar.getPropertyValue(\"--gold\") }}>\n                            Benchmark\n                        </div>\n                        <div style={{ fontSize: \"16px\", fontWeight: '400', color: cssVar.getPropertyValue('--black') }}>{CurrencyFormat(benchData[benchData.length - 1].Benchmark * (chartAmount.value / (chipset[0].value)), 'long')}</div>\n                        <div className='header3dark' style={{ color: Number(benchXIRR) >= 0 ? cssVar.getPropertyValue(\"--secondaryGreen\") : cssVar.getPropertyValue(\"--red\") }}>{benchXIRR !== 'X' ? `(${benchXIRR}%)` : \"\"}</div>\n                    </div>\n                    {tabType === 0 ? <div style={{ flex: 1 }}>\n                        <div className='bodyTextLight' style={{ color: cssVar.getPropertyValue(\"--indianEquity\") }}>\n                            Investment\n                        </div>\n                        <div style={{ fontSize: \"16px\", fontWeight: '400', color: cssVar.getPropertyValue('--black') }}>{CurrencyFormat(benchData[benchData.length - 1].Invst_amt * (chartAmount.value / (chipset[0].value)), 'long')}</div>\n                    </div> : null}\n                </div>\n            </>\n        } catch (error) {\n            return <div></div>\n        }\n    };\n\n\n\n    try {\n        return (\n            noChart ?\n                <div className='bodyTextDark' style={{ margin: \"4%\", textAlign: \"center\" }}>\n                    No chart data available!\n                </div>\n                :\n                <>\n                    <div className='header1dark' style={{ margin: \"4%\" }}>\n                        Performance vs Benchmark\n                    </div>\n                    <div style={{ padding: '0 4%', borderBottom: '1px solid ' + cssVar.getPropertyValue('--light') }}>\n                        {keyTitles2.map((item, e) => {\n                            return <Chip\n                                key={e}\n                                style={{ marginRight: \"8%\" }}\n                                className={tabType === e ? \"specialTab selected\" : \"specialTab\"}\n                                label={item.title}\n                                onClick={() => {\n                                    setTabType(e)\n                                }}\n                            />\n                        })}\n                    </div>\n\n                    <div className=\"hiddden-scrollbar\" style={{ display: 'flex', flexDirection: 'row', padding: \"2% 4%\", marginTop: \"2%\" }}>\n                        {(!tabType ? chipset : chipset).map((item) => {\n                            return (\n                                <Chip\n                                    className={chartAmount.key === item.key ? \"normalChip selected\" : \"normalChip\"}\n                                    key={item.key}\n                                    label={item.name}\n                                    onClick={() => { setChartAmount(item) }}\n                                />\n                            )\n                        })}\n                    </div>\n                    <div className=\"hiddden-scrollbar\" style={{ display: 'flex', flexDirection: 'row', padding: '2% 4%' }}>\n                        {yrtabs.map((item) => {\n                            return (\n                                <Chip\n                                    className={chartType.key === item.key ? \"normalChip selected\" : \"normalChip\"}\n                                    key={item.key}\n                                    label={item.name}\n                                    onClick={() => setChartType(item)}\n                                />\n                            )\n                        })}\n                    </div>\n                    <ContentBeforeChart />\n                    <div style={{ margin: \"4%\" }}>\n                        {\n                            chartLoad ?\n                                <ActivityLoaderMintbox margin='165px' />\n                                :\n                                <>\n                                    <HighchartsReact highcharts={Highcharts} options={options} />\n                                    {\n                                        type === 3 || type === 4?\n                                            <>\n                                                <div className='smallTextLight' style={{ padding: \"2%\" }}>\n                                                    <b>Notes and Disclaimer:</b>\n                                                    <ol style={{ marginBottom: 0, paddingLeft:'16px' }}>\n                                                        <li>Past performance is not an assurance of future performance.</li>\n                                                        <li>Back-tested calculations do take into account an estimate of potential transaction cost incurred. Calculations do not take into account taxation.</li>\n                                                        <li>Actual index data has been used to simulate back-tested performance. To that extent, return numbers are not adjusted for the cost of ETF and tracking error</li>\n                                                        <li>Live performance is based on actual portfolio performance since it went live.</li>\n                                                    </ol>\n                                                </div>\n                                            </>\n                                            :\n                                            <>\n                                                <div className='smallTextLight' style={{ padding: \"2%\" }}>\n                                                    <b>Note: </b>Past performance is not an assurance of future performance. The chart has been shown based on EOD NAVs of the fund/ETF.\n                                                </div>\n                                            </>\n                                    }\n                                </>\n                        }\n                    </div>\n                </>\n        );\n    } catch (error) {\n        return <div className='bodyTextDark' style={{ margin: \"4%\", textAlign: \"center\" }}>\n            No chart data available!\n        </div>\n    }\n};\nexport default PerformanceChart;","import React from 'react';\nimport { AiOutlineDown } from 'react-icons/ai';\nimport { BsBookmark, BsBookmarkFill } from 'react-icons/bs';\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { HiOutlineShare } from 'react-icons/hi';\nimport cssVar from 'views/mobileView/styles';\n\nconst MainHeader = ({\n    header,\n    navigation,\n    screenType,\n    backAction=()=>{navigation.goBack()},\n    right,\n    rightAction = () => {},\n    isWatchlisted = false,\n    onWatchlistIconClick = ()=>{},\n    onShareIconClick = ()=>{},\n    onHeaderClick = ()=>{}\n}) => {\n    \n    const renderRightSide = () => {\n        switch (right) {\n            case 'bookmark-share':\n                return (\n                    <span>  \n                        {\n                            isWatchlisted?\n                            <BsBookmarkFill\n                                className='secondaryGreen'\n                                size={24}\n                                onClick={onWatchlistIconClick}\n                            />\n                            :\n                            <BsBookmark\n                                className='secondaryGreen'\n                                size={24}\n                                onClick={onWatchlistIconClick}\n                            />\n                        }\n                        <HiOutlineShare\n                            className='secondaryGreen'\n                            size={24}\n                            style={{marginLeft:\"20px\"}}\n                            onClick={onShareIconClick}\n                            />\n                    </span>\n                );\n            case 'tip': \n                    return <span className='header3dark secondaryGreen' onClick={()=> rightAction()}>Tip <AiOutlineDown size={10}/></span>\n            default:\n                if(!right){\n                    return <></>\n                } else {\n                    return (\n                        <span className='greenChipHeader' onClick={()=>{ rightAction ()}}>\n                            {right}\n                        </span>\n                    );\n                }\n        }\n    };\n\n    return (\n        <div className=\"mainHeader sticky-top\">\n            {screenType !== 'Home' && (\n                <div style={{marginRight:\"4%\",minWidth:\"8%\"}}>\n                    <FiArrowLeft\n                    color={cssVar.getPropertyValue(\"--secondaryGreen\")}\n                    size={24} onClick={() => backAction()} />\n                </div>\n            )}\n            <div style={{flex:1}}>\n                <span className=\"screenTitle\" onClick={()=>onHeaderClick()}>{header}</span>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                {renderRightSide()}\n            </div>\n        </div>\n    );\n};\n\nexport default MainHeader;"],"names":["API_ENDPOINT","client","axios","baseURL","withCredentials","DataServicePY","path","optional","method","url","headers","data","JSON","stringify","fetch","body","then","r","json","statusCode","msg","response","type","getAccessToken","localStorage","getItem","token","access_token","interceptors","request","use","config","value","keys","parse","Authorization","error","Promise","reject","status","statusText","console","log","get_goal_scenarios","post","getGoalCorpus","getGoalSIP","getGoalReturnAndMintbox","getMintboxChartData","id","get","getETFChartDataBySymbol","symbol","getMFPerformanceById","getCustomMintboxChartData","getETFTrailingReturns","getETFTrackingError","kFormatter","val","toFixed","normalFormatter","replace","num","fractionDigits","a","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","CurrencyFormat","Number","dropdownCustom","Object","entries","name","changeObjKey","dataf","newKeys","ty","Date","toString","getTime","formatDate","newArr","String","split","join","dn","moment","d","skip","seperator","date","isNaN","month","Array","day","getDate","hours","getHours","minutes","getMinutes","ampm","finalStr","getMonth","getFullYear","addMonths","months","setMonth","getNextSIPDate","sipDate","freq","toISOString","date1","date2","diffTime","Math","abs","diffDays","ceil","navigation","fundCode","etfs","user","rebalanceFreq","yrtabs","key","chipset","React","noChart","setnoChart","chartTotalData","setChartTotalData","chartType","setChartType","chartLoad","setChartLoad","fundChartData","setFundChartData","chartAmount","setChartAmount","tabType","setTabType","getChartDataTotal","etfsFinal","weights","map","item","allocation","Symbol","symbols","rebalance_freq","AdminServicesPY","res","res1","options","chart","backgroundColor","title","text","exporting","enabled","yAxis","xAxis","dateTimeLabelFormats","millisecond","second","minute","hour","week","year","plotLines","color","dashStyle","width","label","rotation","x","style","cssVar","fontWeight","legend","plotOptions","series","connectorAllowed","marker","tooltip","shared","valueDecimals","valuePrefix","credits","reverse","scrollbar","responsive","rules","condition","maxWidth","ContentBeforeChart","mintData","benchData","mintXIRR","xirr","benchXIRR","Benchmark","display","margin","flex","className","fontSize","length","Invst_amt","textAlign","padding","borderBottom","e","marginRight","onClick","flexDirection","marginTop","highcharts","Highcharts","marginBottom","paddingLeft","header","screenType","backAction","goBack","right","rightAction","isWatchlisted","onWatchlistIconClick","onShareIconClick","onHeaderClick","minWidth","size","marginLeft","renderRightSide"],"sourceRoot":""}
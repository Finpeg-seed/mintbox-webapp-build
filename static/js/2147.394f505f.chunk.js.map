{"version":3,"file":"static/js/2147.394f505f.chunk.js","mappings":"6qNAIMA,EAAwB,SAAC,GAA4B,IAAD,IAA1BC,KAAAA,OAA0B,MAArB,GAAqB,MAAlBC,OAAAA,OAAkB,MAAX,MAAW,EAElDC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CAChBC,oBAAqB,mBAIzB,OACE,iBAAKC,MAAO,CAAEC,UAAWR,EAAQS,aAAaT,GAA9C,WACE,SAAC,IAAD,CAAQU,QAAST,EACfU,OAAQ,GACRC,MAAO,KAGI,SAATb,GACE,gBAAKQ,MAAO,CAACM,SAAS,OAAQC,WAAW,MAAMN,UAAU,OAAOO,UAAU,UAA1E,iCAEA,4BAMZ,EAAeC,EAAAA,KAAWlB,I,gFCzBpBmB,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,6MAC1BC,GAAgBD,EAAAA,EAAAA,OAAK,kBAAM,mMAC3BE,GAAiBF,EAAAA,EAAAA,OAAK,kBAAM,6MAC5BG,GAAOH,EAAAA,EAAAA,OAAK,kBAAM,6EAClBI,GAAkBJ,EAAAA,EAAAA,OAAK,kBAAM,mMAC7BK,GAAoBL,EAAAA,EAAAA,OAAK,kBAAM,6MAC/BM,GAAeN,EAAAA,EAAAA,OAAK,kBAAM,mMAC1BO,GAAUP,EAAAA,EAAAA,OAAK,kBAAM,gMACrBQ,GAASR,EAAAA,EAAAA,OAAK,kBAAM,wDACpBS,GAAqBT,EAAAA,EAAAA,OAAK,kBAAM,6MAChCU,GAAiBV,EAAAA,EAAAA,OAAK,kBAAM,mMAC5BW,GAAmBX,EAAAA,EAAAA,OAAK,kBAAM,mMAC9BY,GAAWZ,EAAAA,EAAAA,OAAK,kBAAM,uNACtBa,GAAkBb,EAAAA,EAAAA,OAAK,kBAAM,kCAK7Bc,EAAgB,WACpB,OACE,SAAC,EAAAC,OAAD,WAIE,UAAC,EAAAC,SAAD,CAAUC,UAAU,wBAApB,WACE,SAACJ,EAAD,CAAiBK,OAAK,EAACC,KAAI,IAAOC,UAAWjB,KAC7C,SAACU,EAAD,CAAiBK,OAAK,EAACC,KAAI,iBAAoBC,UAAWd,KAC1D,SAACO,EAAD,CAAiBK,OAAK,EAACC,KAAI,kBAAqBC,UAAWnB,KAC3D,SAACY,EAAD,CAAiBK,OAAK,EAACC,KAAI,kBAAqBC,UAAWlB,KAC3D,SAACW,EAAD,CAAiBK,OAAK,EAACC,KAAI,iBAAoBC,UAAWrB,KAC1D,SAACc,EAAD,CAAiBK,OAAK,EAACC,KAAI,uBAA0BC,UAAWf,KAChE,SAACQ,EAAD,CAAiBK,OAAK,EAACC,KAAI,wBAA2BC,UAAWX,KACjE,SAACI,EAAD,CAAiBK,OAAK,EAACC,KAAI,kBAAqBC,UAAWb,KAC3D,SAACM,EAAD,CAAiBK,OAAK,EAACC,KAAI,wBAA2BC,UAAWV,KAEjE,SAACG,EAAD,CAAiBQ,KAAK,EAAOH,OAAK,EAACC,KAAI,yBAA4BC,UAAWhB,KAC9E,SAACS,EAAD,CAAiBQ,KAAK,EAAOH,OAAK,EAACC,KAAI,qBAAwBC,UAAWT,KAC1E,SAACE,EAAD,CAAiBQ,KAAK,EAAOC,WAAY,EAAGJ,OAAK,EAACC,KAAI,aAAgBC,UAAWR,KAEjF,SAAC,KAAD,CAAOO,KAAI,sBAAyBC,UAAWZ,UAQvD,UAAeV,EAAAA,KAAWgB","sources":["views/mobileView/components/atoms/ActivityLoaderMintbox.js","views/mobileView/route/webRoutes.js"],"sourcesContent":["import React from 'react'\nimport Lottie from 'react-lottie';\nimport animationData from 'assets/lottie/MintboxLoader.json'\n\nconst ActivityLoaderMintbox = ({type='',margin='40%'}) => {\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n  return (\n    <div style={{ marginTop: margin, marginBottom:margin }}>\n      <Lottie options={defaultOptions}\n        height={70}\n        width={70} \n        />\n        {\n          type === 'goal'?\n            <div style={{fontSize:'24px', fontWeight:'500',marginTop:'16px',textAlign:'center'}}>Building your plan</div>\n          :\n            <></>\n          }\n    </div>\n  )\n}\n\nexport default React.memo(ActivityLoaderMintbox)","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom/cjs/react-router-dom.min';\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport { lazy, Suspense } from 'react';\n\nconst CreateWealth = lazy(() => import('views/marketing/CreateWealth'));\nconst DesignMintbox = lazy(() => import('views/marketing/DesignMintbox'));\nconst FinancialGoals = lazy(() => import('views/marketing/FinancialGoals'));\nconst Home = lazy(() => import('views/marketing/Home'));\nconst InvestingGenius = lazy(() => import('views/marketing/InvestingGenius'));\nconst LongWealthCreator = lazy(() => import('views/marketing/LongWealthCreator'));\nconst MintboxBlack = lazy(() => import('views/marketing/MintboxBlack'));\nconst Privacy = lazy(() => import('views/marketing/Privacy'));\nconst QRCode = lazy(() => import('views/marketing/QRCode'));\nconst ShortWealthCreator = lazy(() => import('views/marketing/ShortWealthCreator'));\nconst TermConditions = lazy(() => import('views/marketing/TermConditions'));\nconst UnderstandLesson = lazy(() => import('views/marketing/UnderstandLessons'));\nconst AllFunds = lazy(() => import('../../marketing/AllFundsDesktop'));\nconst MarketingRoutes = lazy(() => import('../components/molecules/Routers/MarketingRoutes'));\n\n\n\n\nconst WebHomeLayout = () => {\n  return (\n    <Switch>\n\n      {/* -------- Route is for MarketingScreens -------- */}\n      {/* <Route exact path={`/`} component={HomeSample} /> */}\n      <Suspense fallback={<></>}>\n        <MarketingRoutes exact path={`/`} component={Home} />\n        <MarketingRoutes exact path={`/mintbox-black`} component={MintboxBlack} />\n        <MarketingRoutes exact path={`/design-mintbox`} component={DesignMintbox} />\n        <MarketingRoutes exact path={`/financial-goal`} component={FinancialGoals} />\n        <MarketingRoutes exact path={`/build-mintbox`} component={CreateWealth} />\n        <MarketingRoutes exact path={`/long-wealth-creator`} component={LongWealthCreator} />\n        <MarketingRoutes exact path={`/short-wealth-creator`} component={ShortWealthCreator} />\n        <MarketingRoutes exact path={`/privacy-policy`} component={Privacy} />\n        <MarketingRoutes exact path={`/terms-and-conditions`} component={TermConditions} />\n\n        <MarketingRoutes faq={false} exact path={`/investing-masterclass`} component={InvestingGenius} />\n        <MarketingRoutes faq={false} exact path={`/understand-lesson`} component={UnderstandLesson} />\n        <MarketingRoutes faq={false} headerMode={0} exact path={`/all-funds`} component={AllFunds} />\n\n        <Route path={`/qr-custom/app-link`} component={QRCode} />\n\n      </Suspense>\n\n    </Switch>\n  );\n};\n\nexport default React.memo(WebHomeLayout);\n"],"names":["ActivityLoaderMintbox","type","margin","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","style","marginTop","marginBottom","options","height","width","fontSize","fontWeight","textAlign","React","CreateWealth","lazy","DesignMintbox","FinancialGoals","Home","InvestingGenius","LongWealthCreator","MintboxBlack","Privacy","QRCode","ShortWealthCreator","TermConditions","UnderstandLesson","AllFunds","MarketingRoutes","WebHomeLayout","Switch","Suspense","fallback","exact","path","component","faq","headerMode"],"sourceRoot":""}
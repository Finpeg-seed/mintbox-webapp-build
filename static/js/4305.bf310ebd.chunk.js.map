{"version":3,"file":"static/js/4305.bf310ebd.chunk.js","mappings":"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","sources":["assets/Constant.js","views/mobileView/components/atoms/AMCIcon.js","views/mobileView/components/atoms/MintboxIcon.js","views/mobileView/components/atoms/RiskFunctions.js","views/mobileView/components/atoms/Tabs.js","views/mobileView/screens/mintboxpro/InvestmentFlows/ConfirmAndInvestScreen.js","views/mobileView/screens/mintboxpro/InvestmentFlows/ExecuteOrder.js"],"sourcesContent":["export const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\nexport const amcList = [\n  { Id: 0, Name: \"by AMC\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/mintbox_icons/mintbox_logo.svg' },\n  { Id: 1, Name: \"Aditya Birla Sun Life Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/ABC.jpg' },\n  { Id: 2, Name: \"HDFC Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/HDFC.png' },\n  { Id: 3, Name: \"ICICI Prudential Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/ICICI.png' },\n  { Id: 5, Name: \"SBI Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/SBI.png' },\n  { Id: 6, Name: \"Tata Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Tata.png' },\n  { Id: 7, Name: \"Invesco Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Invesco.png' },\n  { Id: 8, Name: \"Quantum Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Quantum.png' },\n  { Id: 9, Name: \"UTI Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/UTI.png' },\n  { Id: 10, Name: \"IDFC Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/IDFC.png' },\n  { Id: 12, Name: \"DSP Blackrock\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/DSP.png' },\n  { Id: 13, Name: \"Kotak Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Kotak.png' },\n  { Id: 15, Name: \"Mirae Asset Management\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Mirae.png' },\n  { Id: 16, Name: \"Franklin Templeton\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Franklin.png' },\n  { Id: 18, Name: \"Sundaram Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Sundaram.png' },\n  { Id: 20, Name: \"Motilal Oswal Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Motilal.png' },\n  { Id: 22, Name: \"HSBC Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/HSBC.png' },\n  { Id: 23, Name: \"Edelweiss Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Edelweiss.png' },\n  { Id: 24, Name: \"L&T Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/L&T.png' },\n  { Id: 25, Name: \"Axis Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/AXIS.png' },\n  { Id: 26, Name: \"BNP Paribas Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/BNP.png' },\n  { Id: 27, Name: \"IIFL Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/IIFL.png' },\n  { Id: 28, Name: \"Taurus Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Taurus.png' },\n  { Id: 31, Name: \"Baroda Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/BARODA.png' },\n  { Id: 34, Name: \"IDBI Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/IDBI.png' },\n  { Id: 36, Name: \"PPFAS Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/PPFAS.png' },\n  { Id: 37, Name: \"JM Financials Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/JM.png' },\n  { Id: 38, Name: \"LIC Nomura Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/LIC.png' },\n  { Id: 39, Name: \"Canara Robeco Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/CANARA.png' },\n  { Id: 40, Name: \"Principal Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Principal.png' },\n  { Id: 41, Name: \"Indiabull Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Indiabulls.png' },\n  { Id: 42, Name: \"Mahindra Manulife Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Mahindra.png' },\n  { Id: 45, Name: \"Bharti AXA Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/BOI.png' },\n  { Id: 56, Name: \"Nippon India Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Nippon.png' },\n  { Id: 57, Name: \"PGIM India Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/PGIM.png' },\n  { Id: 58, Name: \"Navi Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/NAVI.png' },\n  { Id: 59, Name: \"Shriram Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Shriram.png' },\n  { Id: 60, Name: \"Union KBC Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Union.png' },\n  { Id: 61, Name: \"Yes Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Yes.png' },\n  { Id: 62, Name: \"ITI Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/ITI.png' },\n  { Id: 63, Name: \"Quant Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Quant.png' },\n  { Id: 64, Name: \"Trust Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Trust.png' },\n  { Id: 65, Name: \"LIC Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/LIC.png' },\n  { Id: 66, Name: \"ICICI Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/ICICI.png' },\n  { Id: 67, Name: \"Mirae Asset Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Mirae.png' },\n  { Id: 68, Name: \"Kotak Mahindra Mutual Fund\", imgSource: 'https://d3etfstcuyoos5.cloudfront.net/app-images/amc_icons/Kotak.png' },\n\n]","import React from 'react';\nimport { amcList } from '../../../../assets/Constant';\n\nexport default function AMCIcon({ amcName, type = \"normal\", height, width }) {\n\n    return (\n        <div style={{ alignSelf: \"flex-start\" }}>\n            <img\n                src={(amcList.filter((s) => s.Name === amcName)).length !== 0 ? (amcList.filter((s) => s.Name === amcName))[0].imgSource : amcList[0].imgSource}\n                style={{\n                    height: height,\n                    width: width\n                }}\n            />\n        </div>\n    );\n}","import React from 'react'\nimport cssVar from \"views/mobileView/styles\";\nimport { RiskColor } from './RiskFunctions';\n\nexport default function MintboxIcon({risk,height,width}) {\n  return(\n    <div style={{ display:'flex', border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),padding:`calc(${height}*10/100) 0`, borderRadius: '4px', height, width, backgroundColor: RiskColor(risk)}}>\n        <img src='https://d3etfstcuyoos5.cloudfront.net/app-images/wealth-creators.png' style={{height: `calc(${height}*80/100)`,margin:'auto'}}/>\n    </div>\n  )\n}","import cssVar from \"views/mobileView/styles\"\n\nconst RiskFormat = (riskID) => {\n    switch(riskID){\n        case 1 : return'Super conservative'\n        case 2 : return'Conservative'\n        case 3 : return'Moderate'\n        case 4 : return'Aggressive'\n        case 5 : return'Super aggressive'\n        case 6 : return'Very aggressive'\n        default: return ''\n    }\n}\n\nconst RiskColor = (riskID) => {\n    switch(riskID){\n        case 1 : return cssVar.getPropertyValue('--lowestRisk')\n        case 2 : return cssVar.getPropertyValue('--conservativeRisk')\n        case 3 : return cssVar.getPropertyValue('--moderateRisk')\n        case 4 : return cssVar.getPropertyValue('--secondHeighestRisk')\n        case 5 : return cssVar.getPropertyValue('--highestRisk')\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\n\nconst RiskTextColor = (riskID) => {\n    switch(riskID){\n        case 1 : return '#3395FF'\n        case 2 : return cssVar.getPropertyValue('--darkGreen')\n        case 3 : return cssVar.getPropertyValue('--gold')\n        case 4 : return cssVar.getPropertyValue('--internationalEquity')\n        case 5 : return '#FF5A5F'\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\nexport {RiskFormat,RiskColor,RiskTextColor}","// import { Box, Tab, Tabs } from '@mui/material';\nimport React from 'react';\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport { useSwipeable } from 'react-swipeable'\n\nfunction TabBar({ tabsObject, color, defaultTab = 0}) {\n  const [activeKey, setActiveKey] = React.useState(defaultTab);\n\n  const handlers = useSwipeable({\n    // onSwipedLeft: (e) => handelLeftSwipe(),\n    // onSwipedRight: (e) => handelRightSwipe(),\n    trackMouse: true,\n    trackTouch: true,\n    preventDefaultTouchmoveEvent: true\n  })\n  const handelLeftSwipe = () => {\n    if (activeKey === tabsObject.length - 1) {\n      setActiveKey(0)\n    }\n    else setActiveKey(activeKey + 1)\n  }\n  const handelRightSwipe = () => {\n    if (activeKey === 0) {\n      setActiveKey(tabsObject.length - 1)\n    }\n    else setActiveKey(activeKey - 1)\n  }\n\n  return (\n    <div {...handlers}>\n      {\n        color ?\n          <style type=\"text/css\">\n            {`\n              .nav-tabs.normal-tabs .nav-link.active {\n                color: ${color} !important;\n                border-bottom: 3px solid ${color} !important;\n              }\n            `}\n          </style>\n          :\n          ''\n      }\n      <Tabs activeKey={activeKey} onSelect={(k) => setActiveKey(k * 1)} className='normal-tabs'>\n        {tabsObject.map((t, i) => {\n          return (<Tab key={i} eventKey={i} title={t.title}>{t.view}</Tab>)\n        })}\n      </Tabs >\n    </div>\n  );\n}\nexport default TabBar","import React, { useState } from 'react';\nimport ordinal_suffix_of from 'views/mobileView/components/atoms/ordinal-suffix';\nimport MainHeader from 'views/mobileView/components/molecules/Headers/MainHeader';\nimport cssVar from 'views/mobileView/styles';\nimport Tabs from 'views/mobileView/components/atoms/Tabs';\nimport { Chip } from '@mui/material';\nimport { AiOutlineRight} from 'react-icons/ai';\nimport { FiCalendar } from 'react-icons/fi';\nimport Modal from 'react-bootstrap/Modal';\nimport AdminServices from 'services/api/AdminServices';\nimport db from 'libs/db';\nimport { toast } from \"react-toastify\";\nimport { Backdrop } from '@mui/material';\nimport { CurrencyFormat } from 'views/mobileView/components/atoms/CurrencyFormat';\nimport MintboxIcon from 'views/mobileView/components/atoms/MintboxIcon';\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport executeSmallCaseTransaction from './ExecuteOrder';\nimport CurrencyInput from 'react-currency-input-field';\nimport AMCIcon from 'views/mobileView/components/atoms/AMCIcon';\n\nexport default function ConfirmAndInvestScreen(props) {\n    const FUNDDATA = props.location.state.fundData || {}\n    const SCREENTYPE = props.location.state.type || 3;\n    let MINSIPAMOUNT = FUNDDATA.MinSIPAmount;\n    // if(SCREENTYPE === 1){\n    //     MINSIPAMOUNT = MINSIPAMOUNT > 500 ? MINSIPAMOUNT : 500\n    // }\n    const isDefaultSIP = props.location.state.sip || false;\n\n    const [onetimeAmount, setOnetimeAmount] = React.useState();\n    const [sipAmount, setSipAmount] = React.useState();\n    const [sipDate, setSipDate] = React.useState(Number(new Date().getDate())<28?new Date().getDate():28);\n\n    const [loading, setLoading] = React.useState(false);\n    const [trxnLoading, setTrxnLoading] = React.useState(false);\n    const [showMarketClosedModal, setShowMarketClosedModal] = useState(false);\n    const [showDateModal, setShowDateModal] = useState(false);\n    const [showPortfolioModal, setShowPortfolioModal] = useState(false);\n\n    React.useEffect(async () => {\n        db.get(db.model.user).then(async (user) => {\n            await db.get(db.model.clientData).then(async (p) => {\n                if (p === null) {\n                    let res = await AdminServices.getClient(user.userData.id).then(res => res);\n                    if (res.type === true) {\n                        const a = JSON.parse(res.data);\n                        let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n                        console.log(\"Get Client API :\", aa)\n                        db.set(db.model.clientData, JSON.stringify(aa))\n                        if (SCREENTYPE !== 2 && aa.SmallcaseInfo.length === 0) {\n                            props.history.replace({ pathname: '/link-demat', state: { ClientId: res.Client[0].ClientId, type: SCREENTYPE } })\n                        } else if(SCREENTYPE === 2 && aa.Client[0].IsProfileComplete !== 1){\n                            props.history.replace({ pathname: '/link-demat', state: { type: SCREENTYPE } })\n                        }\n                    }\n                } else {\n                    if (SCREENTYPE !== 2 && p.SmallcaseInfo.length === 0) {\n                        props.history.replace({ pathname: '/link-demat', state: { ClientId: p.Client[0].ClientId, type: SCREENTYPE } })\n                    } else if(SCREENTYPE === 2 && p.Client[0].IsProfileComplete !== 1){\n                        props.history.replace({ pathname: '/link-demat', state: { type: SCREENTYPE } })\n                    }\n                }\n            })\n        })\n\n        if (SCREENTYPE === 3) {\n            if (!FUNDDATA.Constituents) {\n                setLoading(true)\n                let res = await AdminServices.getMintboxConstituentsById(FUNDDATA.MintboxId).then(res => res)\n                if (res.type) {\n                    console.log(\"Get mintbox constituents API\", res.data)\n                    FUNDDATA.Constituents = res.data\n                    setLoading(false)\n                } else {\n                    toast.error(\"Error\")\n                    setLoading(false)\n                }\n            }\n        }\n        console.log(\"fund:\", FUNDDATA)\n        console.log(\"screen type\", SCREENTYPE)\n    }, [])\n\n    const getFundQunatities = async (etfs, constituents, amount) => {\n        var etfsData = await AdminServices.getETFsById(etfs.toString()).then(res => res)\n        console.log(etfsData)\n        if (etfsData.type) {\n            console.log(etfsData)\n            const weight = {};\n            constituents.map((item) => {\n                weight[item.Symbol] = item.CurrentWeightage / 100\n            })\n            const currentNav = {};\n            etfsData.data.map(item => {\n                currentNav[item.Symbol] = item.NAV\n            })\n            var dataFinal = {\n                \"weights\": weight,\n                \"currentNav\": currentNav,\n                \"investment\": amount\n            }\n            console.log(JSON.stringify(dataFinal))\n            var finalDATA = await AdminServices.getETFQuantities(JSON.stringify(dataFinal)).then(res => res)\n            if (finalDATA.type) {\n                var quant = finalDATA.data.Result\n                quant = JSON.parse(quant).data\n                console.log(finalDATA)\n                console.log(quant)\n                return quant\n            } else {\n                setTrxnLoading(false);\n                toast.error('Error')\n            }\n        } else {\n            setTrxnLoading(false);\n            toast.error('Error')\n        }\n\n    }\n\n    const createOrder = async (amount, isSIP) => {\n        console.log(\"crt ordr\", isSIP, amount)\n        setTrxnLoading(true);\n        if (SCREENTYPE === 1) {\n            var constituents = [{\n                \"Symbol\": FUNDDATA.FundCode,\n                \"CurrentWeightage\": 100\n            }]\n            var orderQuant = await getFundQunatities([FUNDDATA.FundCode], constituents, amount)\n            const securities = Object.entries(orderQuant).map((e) => ({ \"ticker\": e[0], \"quantity\": e[1] + \"\", type: \"BUY\" }));\n            console.log(securities)\n            let res = await executeSmallCaseTransaction({\n                navigation: props.history,\n                securities: securities,\n                amount: amount,\n                isSIP: isSIP,\n                isUnitsBased: false,\n                units: 0,\n                sipDate: sipDate,\n                SCREENTYPE: 1,\n                FUNDDATA: FUNDDATA,\n                isInvest: true\n            })\n            console.log(res)\n            if(res === 'market_closed'){\n                setShowMarketClosedModal(true);\n            }\n            setTrxnLoading(false)\n        } else if (SCREENTYPE === 3) {\n            var etfs = FUNDDATA.Constituents.map(etf => etf.Symbol)\n            var orderQuant = await getFundQunatities(etfs, FUNDDATA.Constituents, amount)\n            const securities = Object.entries(orderQuant).map((e) => ({ \"ticker\": e[0], \"quantity\": e[1] + \"\", type: \"BUY\" }));\n            console.log(securities)\n            let res = await executeSmallCaseTransaction({\n                navigation: props.history,\n                securities: securities,\n                amount: amount,\n                isSIP: isSIP,\n                isUnitsBased: false,\n                units: 0,\n                sipDate: sipDate,\n                SCREENTYPE: 3,\n                FUNDDATA: FUNDDATA,\n                isInvest: true\n            })\n            setTrxnLoading(false)\n            console.log(res)\n            if(res === 'market_closed'){\n                setShowMarketClosedModal(true);\n            }\n        } else if (SCREENTYPE === 2) {\n            toast.error(\"MF investments are paused\")\n        }\n    }\n\n    const OneTime = () => {\n        const chipset = [\n            { \"key\": 5000, \"name\": \"+ ₹ 5,000\" },\n            { \"key\": 10000, \"name\": \"+ ₹ 10,000\" },\n            { \"key\": 50000, \"name\": \"+ ₹ 50,000\" }\n        ]\n\n        return (\n            <>\n                <div style={{ padding: '4%' }}>\n                    <div className='header1dark' style={{ paddingTop: '4%' }}>\n                        Investment amount\n                    </div>\n                    <div className='smallTextLight' style={{ paddingTop: '1%', paddingBottom: \"2%\" }}>\n                        Minimum required <span className='smallTextDark'>{CurrencyFormat(MINSIPAMOUNT, 'long', 2)}</span>\n                    </div>\n                    <CurrencyInput\n                        className='normalInput rupee'\n                        id=\"onetimeAmount\"\n                        name=\"onetimeAmount\"\n                        placeholder=\"10,000\"\n                        value={onetimeAmount}\n                        allowDecimals={false}\n                        allowNegativeValue={false}\n                        disableAbbreviations={false}\n                        prefix=' '\n                        onValueChange={(value) => setOnetimeAmount(value)}\n                        intlConfig={{ locale: 'en-IN', currency: 'INR' }}\n                    />\n                    <div style={{ display: 'flex', paddingTop: \"1%\" }}>\n                        {chipset.map((item) => {\n                            return (\n                                <Chip\n                                    className=\"normalChip\"\n                                    key={item.key}\n                                    label={item.name}\n                                    onClick={() => {\n                                        setOnetimeAmount(Number(onetimeAmount || 0) + item.key);\n                                    }}\n                                />\n                            )\n                        })}\n                    </div>\n                </div>\n                {SCREENTYPE !== 2 ?\n                    <div className='bodyTextLight' style={{ position: \"fixed\", bottom: \"70px\", width: \"100%\", padding: \"2% 4%\", borderTop: \"1px solid \" + cssVar.getPropertyValue('--light'), backgroundColor: cssVar.getPropertyValue('--white') }}>\n                        Note: The actual amount invested may be slightly different due to constantly changing prices\n                    </div>\n                    : ''\n                }\n                <div className='footer'>\n                    <button\n                        className='solidButton'\n                        style={{ opacity: Number(onetimeAmount) >= MINSIPAMOUNT ? 1 : 0.4 }}\n                        onClick={() => {\n                            if (Number(onetimeAmount) >= MINSIPAMOUNT) {\n                                createOrder(Number(onetimeAmount), false)\n                            } else {\n                                toast.error(\"Min investment amount is \" + MINSIPAMOUNT)\n                            }\n                        }}\n                    >\n                        Confirm and Invest\n                    </button>\n                </div>\n            </>\n        )\n    }\n\n    const SIP = () => {\n\n        const chipset = [\n            { \"key\": 5000, \"name\": \"₹ 5,000\" },\n            { \"key\": 10000, \"name\": \"₹ 10,000\" },\n            { \"key\": 50000, \"name\": \"₹ 50,000\" }\n        ]\n\n        const DateModal = () => {\n            const [selectedDate, setSelectedDate] = React.useState(sipDate)\n            return (\n                <Modal\n                    className=\"bottom-drawer\"\n                    show={showDateModal}\n                    onHide={() => setShowDateModal(false)}\n                    keyboard={false}\n                >\n                    <Modal.Body>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", paddingTop: \"20px\" }}>\n                            {\n                                [1, 2, 3, 4, 5, 6, 7].map(d => <div key={d} onClick={() => setSelectedDate(d)} style={{ border: \"1px solid #e5e5e5\", borderRadius: '32px', height: \"32px\", width: '32px', textAlign: \"center\", paddingTop: \"2px\", color: d === selectedDate ? \"#ffffff\" : \"#6c6c6c\", background: d === selectedDate ? cssVar.getPropertyValue('--darkGreen') : 'transparent' }}>{d}</div>)\n                            }\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", paddingTop: \"20px\" }}>\n                            {\n                                [8, 9, 10, 11, 12, 13, 14].map(d => <div key={d} onClick={() => setSelectedDate(d)} style={{ border: \"1px solid #e5e5e5\", borderRadius: '32px', height: \"32px\", width: '32px', textAlign: \"center\", paddingTop: \"2px\", color: d === selectedDate ? \"#ffffff\" : \"#6c6c6c\", background: d === selectedDate ? cssVar.getPropertyValue('--darkGreen') : 'transparent' }}>{d}</div>)\n                            }\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", paddingTop: \"20px\" }}>\n                            {\n                                [15, 16, 17, 18, 19, 20, 21].map(d => <div key={d} onClick={() => setSelectedDate(d)} style={{ border: \"1px solid #e5e5e5\", borderRadius: '32px', height: \"32px\", width: '32px', textAlign: \"center\", paddingTop: \"2px\", color: d === selectedDate ? \"#ffffff\" : \"#6c6c6c\", background: d === selectedDate ? cssVar.getPropertyValue('--darkGreen') : 'transparent' }}>{d}</div>)\n                            }\n                        </div>\n                        <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", paddingTop: \"20px\" }}>\n                            {\n                                [22, 23, 24, 25, 26, 27, 28].map(d => <div key={d} onClick={() => setSelectedDate(d)} style={{ border: \"1px solid #e5e5e5\", borderRadius: '32px', height: \"32px\", width: '32px', textAlign: \"center\", paddingTop: \"2px\", color: d === selectedDate ? \"#ffffff\" : \"#6c6c6c\", background: d === selectedDate ? cssVar.getPropertyValue('--darkGreen') : 'transparent' }}>{d}</div>)\n                            }\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button className='outlineButton' onClick={() => setShowDateModal(false)}>\n                            Close\n                        </button>\n                        <button className=\"solidButton\" onClick={() => {\n                            setSipDate(selectedDate);\n                            setShowDateModal(false)\n                        }}>\n                            Confirm\n                        </button>\n                    </Modal.Footer>\n                </Modal>\n            )\n        }\n\n        return (\n            <>\n                <DateModal />\n                <div style={{ margin: '4%' }}>\n                    <div className='header1dark' style={{ paddingTop: '4%' }}>\n                        Monthly SIP amount\n                    </div>\n                    <div className='smallTextLight' style={{ paddingTop: '1%', paddingBottom: \"2%\" }}>\n                        Minimum required <span className='smallTextDark'>{CurrencyFormat(MINSIPAMOUNT, 'long', 2)}</span>\n                    </div>\n                    <CurrencyInput\n                        className='normalInput rupee'\n                        id=\"sipAmount\"\n                        name=\"sipAmount\"\n                        placeholder=\"10,000\"\n                        value={sipAmount}\n                        allowDecimals={false}\n                        allowNegativeValue={false}\n                        disableAbbreviations={false}\n                        prefix=' '\n                        onValueChange={(value) => setSipAmount(value)}\n                        intlConfig={{ locale: 'en-IN', currency: 'INR' }}\n                    />\n                    <div style={{ display: 'flex', paddingTop: '1%' }}>\n                        {chipset.map((item) => {\n                            return (\n                                <Chip\n                                    className={sipAmount === item.key ? \"normalChip selected\" : \"normalChip\"}\n                                    key={item.key}\n                                    label={item.name}\n                                    onClick={() => {\n                                        setSipAmount(item.key);\n                                    }}\n                                />\n                            )\n                        })}\n                    </div>\n                    <div style={{ paddingTop: '42px' }}>\n                        <FiCalendar size={24} className='secondaryGreen' />\n                        <div className='bodyTextLight' style={{ paddingTop: \"2%\", paddingBottom: \"1%\" }}>\n                            <span className='bigHeader' style={{ fontSize: \"20px\" }}>{ordinal_suffix_of(sipDate)}</span> of every month\n                        </div>\n                        <div className='header2dark secondaryGreen' onClick={() => setShowDateModal(true)}>\n                            Change <AiOutlineRight size={12} color=\"#294C88\" style={{ verticalAlign: 'unset' }} />\n                        </div>\n                    </div>\n                    <div style={{ marginTop: \"10%\", padding: '4%', background: cssVar.getPropertyValue('--lightest'), border: \"1px solid \" + cssVar.getPropertyValue('--light'), borderRadius: \"8px\" }}>\n                        <div className='header2dark' style={{ color: cssVar.getPropertyValue('--darkGreen'), paddingBottom: \"1%\" }}>Note</div>\n                        <div className='bodyTextLight'>\n                            First investment will be done today and monthly SIPs will start from {ordinal_suffix_of(sipDate)} of next month\n                        </div>\n                    </div>\n                </div>\n                {SCREENTYPE !== 2 ?\n                    <div className='bodyTextLight' style={{ position: \"fixed\", bottom: \"70px\", width: \"100%\", padding: \"2% 4%\", borderTop: \"1px solid \" + cssVar.getPropertyValue('--light'), backgroundColor: cssVar.getPropertyValue('--white') }}>\n                        Note: The actual amount invested may be slightly different due to constantly changing prices\n                    </div>\n                    : ''\n                }\n                <div className='footer'>\n                    <button\n                        className='solidButton'\n                        style={{ opacity: Number(sipAmount) >= MINSIPAMOUNT ? 1 : 0.4 }}\n                        onClick={() => {\n                            if (Number(sipAmount) >= MINSIPAMOUNT) {\n                                createOrder(Number(sipAmount), true)\n                            } else {\n                                toast.error(\"Min investment amount is \" + MINSIPAMOUNT)\n                            }\n                        }}\n                    >\n                        Confirm and Invest\n                    </button>\n                </div>\n            </>\n        )\n    }\n\n    const keyTitles = [\n        { title: \"One-time investment\", view: OneTime(), show:true },\n        { title: \"Monthly SIP\", view: SIP(),show:!(SCREENTYPE===1 && FUNDDATA.MintboxId) },\n    ];\n\n    // const PortfolioModal = () => {\n    //     return (\n    //         <Modal\n    //             className=\"bottom-drawer\"\n    //             show={showPortfolioModal}\n    //             onHide={() => setShowPortfolioModal(false)}\n    //             keyboard={false}\n    //         >\n    //             <Modal.Body style={{ height: \"70vh\", overflow: \"scroll\" }}>\n    //                 <FundConstituents fundConstituents={FUNDDATA.Constituents} />\n    //             </Modal.Body>\n    //             <Modal.Footer>\n    //                 <button className=\"close\" onClick={() => setShowPortfolioModal(false)}>\n    //                     Close\n    //                 </button>\n    //             </Modal.Footer>\n    //         </Modal>\n    //     )\n    // }\n\n    const MarketClosedModal = () => {\n            return (\n                <Modal\n                    className=\"bottom-drawer\"\n                    show={showMarketClosedModal}\n                    onHide={() => setShowMarketClosedModal(false)}\n                    keyboard={false}\n                >\n                    <Modal.Body>\n                        <div style={{display:'flex',gap:'4%'}}>\n                            <FiCalendar size={20} className='secondaryGreen'/>\n                            <div className=\"bodyTextDark\" style={{flex:1}}>\n                            You cannot place order outside of market hours. We will soon be launching a solution that lets you place post-market orders. Till then, see you when the markets opens!\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button className=\"solidButton\" onClick={() => setShowMarketClosedModal(false)}>\n                            Close\n                        </button>\n                    </Modal.Footer>\n                </Modal>\n            )\n        }\n\n    if (loading) {\n        return (\n            <div style={{ flex: 1 }}>\n                <MainHeader\n                    header=\"Invest\"\n                    navigation={props.history}\n                />\n                <ActivityLoaderMintbox />\n            </div>\n        );\n    }\n    else return (\n        <div className='mainContainer'>\n            <MainHeader\n                navigation={props.history}\n                header=\"Invest\"\n            />\n            <div className=\"dataContainer px-0\" style={{ paddingBottom: '120px' }}>\n                <div style={{ display: 'flex', alignItems: \"center\", gap: '4%', padding: '4%' }}>\n                    {\n                        SCREENTYPE === 3 ?\n                            <MintboxIcon risk={FUNDDATA.RiskLevel} height=\"40px\" width=\"40px\" />\n                            :\n                            <AMCIcon amcName={FUNDDATA.AMCName} height=\"40px\" width=\"40px\" />\n                    }\n                    <div className='header1dark' style={{ flex: 1 }}>\n                        {SCREENTYPE === 1 ? FUNDDATA.ETFName : SCREENTYPE === 2 ? FUNDDATA.SchemeName : FUNDDATA.MintboxName}\n                    </div>\n                    {/* {\n                        SCREENTYPE === 3?\n                        <div style={{ fontSize: \"14px\", fontWeight: \"500\", color: \"#294C88\" }} onClick={() => setShowPortfolioModal(true)}>Show portfolio <AiOutlineDown /></div>\n                        :\n                        <></>\n                    } */}\n                </div>\n                <Tabs tabsObject={keyTitles.filter(k=>k.show)} color={cssVar.getPropertyValue('--darkGreen')} defaultTab={isDefaultSIP ? 1 : 0}/>\n            </div>\n            <Backdrop style={{ color: '#fff', zIndex: 1021 }} open={trxnLoading}>\n                <ActivityLoaderMintbox />\n            </Backdrop>\n            {/* <PortfolioModal/> */}\n            <MarketClosedModal/>\n        </div>\n    );\n}\n","import db from \"libs/db\"\nimport { toast } from \"react-toastify\"\nimport AdminServices from \"services/api/AdminServices\"\nimport { initializeSmallCase } from \"services/smallcase\"\n\nconst saveOrder = async ({ navigation, order, clientId, mintboxId, goalId, fundCode, amount, isSIP, sipDate, isUnitsBased, units, isInvest }) => {\n    // updateSmallCaseAuthId(clientId, order.smallcaseAuthToken, order.broker)\n    let dd = {}\n    if (isInvest) {\n        dd = {\n            \"clientId\": clientId,\n            \"mintboxId\": mintboxId,\n            \"goalId\": Number(goalId),\n            \"transactionType\": 1,\n            \"fromFundCode\": \"\",\n            \"toFundCode\": fundCode + \"\",\n            \"folioNumber\": \"\",\n            \"sipAmount\": isSIP ? Number(amount) : 0,\n            \"units\": 0,\n            \"LumpsumAmount\": isSIP ? 0 : Number(amount),\n            \"sipDate\": isSIP ? sipDate : 0,\n            \"investedAmount\": order.orderBatches[0].buyAmount,\n            \"investmentDate\": order.orderBatches[0].completedDate,\n        }\n    } else {\n        dd = {\n            \"clientId\": clientId,\n            \"mintboxId\": mintboxId,\n            \"goalId\": Number(goalId),\n            \"transactionType\": 2,\n            \"fromFundCode\": \"\",\n            \"toFundCode\": fundCode + \"\",\n            \"folioNumber\": \"\",\n            \"sipAmount\": 0,\n            \"units\": isUnitsBased ? Number(units) : 0,\n            \"lumpsumAmount\": isUnitsBased ? 0 : amount,\n            \"sipDate\": 0,\n            \"investedAmount\": order.orderBatches[0].sellAmount,\n            \"investmentDate\": order.orderBatches[0].completedDate,\n        }\n    }\n    console.log(\"Save trnx log\", dd)\n    const logRes = await AdminServices.saveTransactionLogs(dd).then(res => res)\n    console.log(\"Save Trx log API response\", JSON.stringify(logRes))\n\n    const d = {\n        \"clientId\": clientId,\n        \"mintboxId\": mintboxId,\n        \"goalId\": Number(goalId),\n        \"smallcaseAuthToken\": order.smallcaseAuthToken,\n        \"broker\": order.broker,\n        \"transactionId\": order.transactionId,\n        \"data\": {\n            \"batches\": order.orderBatches\n        }\n    }\n    console.log(\"Save small case order\", JSON.stringify(d))\n    const smallOrderRes = await AdminServices.saveSmallCaseOrder(clientId, JSON.stringify(d)).then(res => res)\n    console.log(\"saveSmallCaseOrder API response\",smallOrderRes)\n    if (smallOrderRes.type) {\n        await db.remove(db.model.portfolio);\n        await db.remove(db.model.portfolioXirr);\n        await db.remove(db.model.portfolioPerformance);\n        await db.remove(db.model.assetAllocation);\n        await db.remove(db.model.transactions)\n        await db.remove(db.model.sip)\n        navigation.push('/portfolio/success');\n    } else {\n        navigation.push('/portfolio/failed')\n    }\n}\n\nexport default async function executeSmallCaseTransaction({ navigation, securities, amount, isSIP, isUnitsBased, units, sipDate, SCREENTYPE, FUNDDATA, isInvest }) {\n    console.log(\"exec smcs trx\", isSIP)\n    const order = {\n        \"intent\": \"TRANSACTION\",\n        \"orderConfig\": {\n            \"type\": \"SECURITIES\",\n            \"securities\": securities\n        }\n    }\n    console.log(\"order\", order)\n    const res = await AdminServices.getSmallcaseTransactionId(order, \"\", FUNDDATA.MintboxId || 0, FUNDDATA.GoalId || 0).then(rs => rs)\n    if (res.type) {\n        console.log(\"Trx id =>>\", res.data.data.transactionId)\n        try {\n            if (window.sc === undefined) {\n                console.log(\"Initializing Smallcase\")\n                await initializeSmallCase();\n            }\n            return await window.sc.triggerTransaction({ transactionId: res.data.data.transactionId })\n                .then(async (a) => {\n                    console.log(a)\n                    if (a.orderBatches[0].status === \"COMPLETED\") {\n                        await db.get(db.model.user).then(async (p) => {\n                            if (SCREENTYPE === 3) {\n                                //mintbox\n                                return await saveOrder({\n                                    navigation,\n                                    order: a,\n                                    clientId: p.userData.id,\n                                    mintboxId: FUNDDATA.MintboxId || 0,\n                                    goalId: FUNDDATA.GoalId || 0,\n                                    fundCode: FUNDDATA.MintboxId,\n                                    amount: amount,\n                                    isSIP: isSIP,\n                                    sipDate: sipDate,\n                                    isUnitsBased: isUnitsBased,\n                                    units: units,\n                                    isInvest: isInvest\n                                })\n                            } else if (SCREENTYPE === 1) {\n                                //etf\n                                return await saveOrder({\n                                    navigation,\n                                    order: a,\n                                    clientId: p.userData.id,\n                                    mintboxId: FUNDDATA.MintboxId || 0,\n                                    goalId: FUNDDATA.GoalId || 0,\n                                    fundCode: FUNDDATA.FundCode,\n                                    amount: amount,\n                                    isSIP: isSIP,\n                                    sipDate: sipDate,\n                                    isUnitsBased: isUnitsBased,\n                                    units: units,\n                                    isInvest: isInvest\n                                })\n                            }\n                        });\n                    }\n                })\n                .catch((p) => {\n                    if(p.toString().includes(\"market_closed\")){\n                        console.log('mkt closed')\n                        return 'market_closed'\n                    } else if(p.message === 'user_cancelled'){\n                        return\n                    } else {\n                        toast.error('Something went wrong! Try again.')\n                    }\n                });\n        } catch (e) {\n            toast.error(\"Something went wrong! Try again.\")\n        }\n    } else {\n        console.log('Error getting Transaction Id');\n    }\n}\n"],"names":["amcList","Id","Name","imgSource","AMCIcon","amcName","height","type","width","style","alignSelf","src","filter","s","length","MintboxIcon","risk","display","border","cssVar","padding","borderRadius","backgroundColor","RiskColor","margin","RiskFormat","riskID","RiskTextColor","tabsObject","color","defaultTab","React","activeKey","setActiveKey","handlers","useSwipeable","trackMouse","trackTouch","preventDefaultTouchmoveEvent","onSelect","k","className","map","t","i","eventKey","title","view","ConfirmAndInvestScreen","props","FUNDDATA","location","state","fundData","SCREENTYPE","MINSIPAMOUNT","MinSIPAmount","isDefaultSIP","sip","onetimeAmount","setOnetimeAmount","sipAmount","setSipAmount","Number","Date","getDate","sipDate","setSipDate","loading","setLoading","trxnLoading","setTrxnLoading","useState","showMarketClosedModal","setShowMarketClosedModal","showDateModal","setShowDateModal","db","then","user","p","a","AdminServices","userData","id","res","JSON","parse","data","aa","reduce","f","console","log","stringify","SmallcaseInfo","history","replace","pathname","ClientId","Client","IsProfileComplete","Constituents","MintboxId","toast","getFundQunatities","etfs","constituents","amount","toString","etfsData","weight","item","Symbol","CurrentWeightage","currentNav","NAV","dataFinal","finalDATA","quant","Result","createOrder","isSIP","FundCode","orderQuant","securities","Object","entries","e","executeSmallCaseTransaction","navigation","isUnitsBased","units","isInvest","etf","keyTitles","paddingTop","paddingBottom","CurrencyFormat","name","placeholder","value","allowDecimals","allowNegativeValue","disableAbbreviations","prefix","onValueChange","intlConfig","locale","currency","label","onClick","key","position","bottom","borderTop","opacity","show","DateModal","selectedDate","setSelectedDate","onHide","keyboard","justifyContent","gap","d","textAlign","background","size","fontSize","ordinal_suffix_of","verticalAlign","marginTop","SIP","MarketClosedModal","flex","header","alignItems","RiskLevel","AMCName","ETFName","SchemeName","MintboxName","zIndex","open","saveOrder","order","clientId","mintboxId","goalId","fundCode","dd","orderBatches","buyAmount","completedDate","sellAmount","logRes","smallcaseAuthToken","broker","transactionId","smallOrderRes","push","GoalId","rs","undefined","window","sc","initializeSmallCase","triggerTransaction","status","catch","includes","message"],"sourceRoot":""}
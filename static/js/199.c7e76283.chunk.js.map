{"version":3,"file":"static/js/199.c7e76283.chunk.js","mappings":"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","sources":["views/mobileView/components/atoms/MintboxIcon.js","views/mobileView/components/atoms/RiskFunctions.js","views/mobileView/components/molecules/Cards/FundConstituents.js","views/mobileView/screens/mintboxpro/PortfolioScreen/MintboxScreen.js","views/mobileView/screens/mintboxpro/PortfolioScreen/cards/FundCard.js","views/mobileView/screens/mintboxpro/PortfolioScreen/cards/SIPs.js"],"sourcesContent":["import { baseImgURL } from 'assets/Constant';\nimport React from 'react'\nimport cssVar from \"views/mobileView/styles\";\nimport { RiskColor } from './RiskFunctions';\n\nfunction MintboxIcon({id,height,width}) {\n  return(\n    // <div style={{ display:'flex', border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),padding:`calc(${height}*10/100) 0`, borderRadius: '4px', height, width, backgroundColor: RiskColor(risk)}}>\n    //     <img src={baseImgURL+'wealth-creators.webp'} style={{height: `calc(${height}*80/100)`,margin:'auto'}}/>\n    // </div>\n    Number(id) > 20?\n    <img src={baseImgURL+`mintbox_boxLogo.webp`} style={{ height, width}}/>\n    :\n    <img src={baseImgURL+`MintboxIcon${id}.webp`} style={{ height, width}}/>\n  )\n}\n\nexport default React.memo(MintboxIcon)","import cssVar from \"views/mobileView/styles\"\n\nconst RiskFormat = (riskID) => {\n    switch(riskID){\n        case 1 : return'Super conservative'\n        case 2 : return'Conservative'\n        case 3 : return'Moderate'\n        case 4 : return'Aggressive'\n        case 5 : return'Super aggressive'\n        case 6 : return'Very aggressive'\n        default: return ''\n    }\n}\n\nconst RiskColor = (riskID) => {\n    switch(riskID){\n        case 1 : return cssVar.getPropertyValue('--lowestRisk')\n        case 2 : return cssVar.getPropertyValue('--conservativeRisk')\n        case 3 : return cssVar.getPropertyValue('--moderateRisk')\n        case 4 : return cssVar.getPropertyValue('--secondHeighestRisk')\n        case 5 : return cssVar.getPropertyValue('--highestRisk')\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\n\nconst RiskTextColor = (riskID) => {\n    switch(riskID){\n        case 1 : return '#3395FF'\n        case 2 : return cssVar.getPropertyValue('--darkGreen')\n        case 3 : return cssVar.getPropertyValue('--gold')\n        case 4 : return cssVar.getPropertyValue('--internationalEquity')\n        case 5 : return '#FF5A5F'\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\nexport {RiskFormat,RiskColor,RiskTextColor}","import React from 'react';\nimport cssVar from 'views/mobileView/styles';\nimport AMCIcon from '../../atoms/AMCIcon';\n\nfunction FundConstituents({ fundConstituents, type=''}) {\n\n  const displayAssetClass = (id) => {\n    const assetClasses = [\n      {\n        name: 'Indian Equity',\n        color: cssVar.getPropertyValue('--indianEquity')\n      },\n      {\n        name: 'Gold',\n        color: cssVar.getPropertyValue('--gold')\n      },\n      {\n        name: 'Foreign Equity',\n        color: cssVar.getPropertyValue('--internationalEquity')\n      },\n      {\n        name: 'Debt',\n        color: cssVar.getPropertyValue('--debt')\n      },\n      {\n        name: 'Cash',\n        color: cssVar.getPropertyValue('--cash')\n      },\n      {\n        name: 'Silver',\n        color: cssVar.getPropertyValue('--silver')\n      }\n    ];\n    if (fundConstituents) {\n      const fundsArray = fundConstituents.filter(fund => fund.AssetClassId === id)\n      const totalAllocation = fundsArray.reduce((total, fund) => Number(fund.CurrentWeightage) + total, 0);\n      const assetClassName = assetClasses[id - 1].name\n      const assetColor = assetClasses[id - 1].color\n\n      if (fundsArray.length === 0) { return <></> }\n      else return (\n        <>\n          {\n            type === 'only-constituents'?\n            <></>\n            :\n          <div className='header1dark' style={{ display: \"flex\",gap:'4%',alignItems:'center',padding: type==='goal-recom'?'3% 0':'5% 0 1% 0',  margin:'0 4%',borderBottom: type === 'goal-recom'? '1px solid '+cssVar.getPropertyValue('--light') : 'none' }}>\n            {\n              type === 'goal-recom'?\n                <div style={{width:'12px',height:'12px',borderRadius:'50%',backgroundColor: assetColor}}></div>\n                :\n                <></>\n            }\n            <div style={{ flex: 1, color: assetColor }} className='header1dark'>{assetClassName}</div>\n            <div style={{ padding: \"0 4%\",color: assetColor }}>{Number(totalAllocation).toFixed(1)}%</div>\n          </div>\n          }\n          {\n            type ==='goal-recom'? \n              <></>\n              :\n              fundsArray.map((fund,i) => {\n                return (\n                  <div key={i} style={{ display: \"flex\", padding: \"3% 4%\",borderBottom:\"1px solid \"+cssVar.getPropertyValue('--light') }}>\n                    <div style={{ flex: 1, display: 'flex', gap: \"4%\" }}>\n                      <AMCIcon amcName={fund.AMCName} height='24px' width='24px' />\n                      <div className='bodyTextDark' style={{ flex: 1 }}>{fund.ETFName}</div>\n                    </div>\n                    <div className='header1dark' style={{ padding: \"0 4%\" }}>{Number(fund.CurrentWeightage).toFixed(1)}%</div>\n                  </div>\n                )\n              })\n          }\n        </>\n      )\n    }\n  }\n  return (\n    <>\n      <div style={{ display: \"flex\" , padding:\"6% 4% 1% 4%\"}}>\n        <div className='bodyTextLight' style={{ flex: 1 }}>Asset class/ETF</div>\n        <div className='bodyTextLight'>Allocation{type==='portfolio'?'':'*'}</div>\n      </div>\n      {displayAssetClass(1)}\n      {displayAssetClass(2)}\n      {displayAssetClass(3)}\n      {displayAssetClass(4)}\n      {displayAssetClass(5)}\n      {displayAssetClass(6)}\n      {\n        type==='portfolio'?\n          <></>\n          :\n          type === 'goal-recom'?\n          <div className='bodyTextLight' style={{ padding: \"4%\" }}>* Allocations are reviewed periodically to\n          maximize the chances of achieving this goal.</div>\n          :\n          <div className='bodyTextLight' style={{ padding: \"4%\" }}>* Allocation will change in the future to adjust portfolio risk as per our proprietary investment logic.</div>\n      }\n    </>\n  )\n}\n\nexport default FundConstituents","import db from 'libs/db';\nimport React from 'react';\nimport { toast } from \"react-toastify\";\nimport AdminServices from 'services/api/AdminServices';\nimport MainHeader from 'views/mobileView/components/molecules/Headers/MainHeader';\nimport cssVar from 'views/mobileView/styles';\nimport Tabs from 'views/mobileView/components/atoms/Tabs';\nimport HomePortfolioCard from \"views/mobileView/components/molecules/Cards/HomePortfolioCard\";\nimport { HiOutlineExternalLink, HiOutlineHome } from 'react-icons/hi';\nimport { IoEllipsisVerticalCircleOutline } from 'react-icons/io5';\nimport FundCard from \"views/mobileView/screens/mintboxpro/PortfolioScreen/cards/FundCard\";\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport MintboxIcon from 'views/mobileView/components/atoms/MintboxIcon';\nimport FundConstituents from 'views/mobileView/components/molecules/Cards/FundConstituents';\nimport TransactionCard from './cards/TransactionCard';\nimport Modal from 'react-bootstrap/Modal';\nimport SIPs from './cards/SIPs';\n\nexport default function MintboxScreen(props) {\n\n  const [loading, setLoading] = React.useState(true);\n  const [showMainModal, setShowMainModal] = React.useState(false)\n\n  const [portfolio, setPortfolio] = React.useState({});\n  const [portfolioPerformance, setPortfolioPerformance] = React.useState({});\n  const [assetAllocation, setAssetAllocation] = React.useState([]);\n  const [portfolioXIRR, setPortfolioXIRR] = React.useState({});\n  const [transactions, setTransactions] = React.useState([]);\n  const [user, setUser] = React.useState({});\n\n  const MINTBOXID = props.location.state.MINTBOXID;\n  // const FUNDDATA = portfolio?.MintboxConsolidated?.find(f => f.MintboxId === MINTBOXID && f.GoalId === 0);\n  const FUNDDATA = props.location.state.FUNDDATA;\n  const CONSTITUENTS = portfolio?.MintboxETF?.filter(f => f.MintboxId === MINTBOXID && f.GoalId === 0 && f.MintboxETFBalance !==0).map((item) => {\n    item.CurrentWeightage = item.MintboxETFBalance * 100 / FUNDDATA.MintboxBalance\n    return item\n})\n  \n  React.useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    setLoading(true)\n    try {\n      db.get(db.model.user).then(async (p) => {\n        setUser(p.userData);\n        await getPortfolio(p.userData.id)\n        await getAssetAllocation(p.userData.id)\n        await getPortfolioXIRR(p.userData.id)\n        await getPortfolioPerformance(p.userData.id)\n        await getTransactions(p.userData.id)\n        // await getMintboxConstituentsById()\n        setLoading(false)\n      })\n    } catch (error) {\n      toast.error(error);\n      setLoading(false)\n    }\n  };\n\n  // const getMintboxConstituentsById = async () => {\n  //   let res = await AdminServices.getMintboxConstituentsById(MINTBOXID).then(res => res)\n  //   if (res.type) {\n  //     console.log(\"Get mintbox constituents API\", res.data)\n  //     setMintboxConstituents(res.data)\n  //   } else {\n  //     toast.error(\"Error\")\n  //   }\n  // }\n\n  const getPortfolio = async (id) => {\n    db.get(db.model.portfolio).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolio(id).then(res => res);\n        if (res.type === true) {\n          const a = await JSON.parse(res.data);\n          let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n          console.log(\"Get portfolio API :\", aa)\n          setPortfolio(aa)\n          await (db.model.portfolio, JSON.stringify(aa))\n        }\n      } else {\n        setPortfolio(p)\n      }\n    })\n  }\n\n  const getPortfolioPerformance = async (id) => {\n    db.get(db.model.portfolioPerformance).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolioPerformance(id).then(res => res);\n        if (res.type === true) {\n          const a = await JSON.parse(res.data);\n          let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n          console.log(\"Get portfolioPerformance API :\", aa)\n          setPortfolioPerformance(aa)\n          await db.set(db.model.portfolioPerformance, JSON.stringify(aa))\n        }\n      } else {\n        setPortfolioPerformance(p)\n      }\n    })\n  }\n\n  const getAssetAllocation = async (id) => {\n    db.get(db.model.assetAllocation).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolioAssetAllocation(id).then(res => res);\n        if (res.type === true) {\n          const aa = res.data;\n          console.log(\"Get portfolio asset allocation API :\", aa)\n          formatAssetAllo(aa)\n          await db.set(db.model.assetAllocation, JSON.stringify(aa))\n        }\n      } else {\n        formatAssetAllo(p)\n      }\n    })\n  }\n  const formatAssetAllo = (aa) => {\n    const assetClasses = [\n      {\n        name: 'Indian Equity',\n        color: cssVar.getPropertyValue('--indianEquity')\n      },\n      {\n        name: 'Gold',\n        color: cssVar.getPropertyValue('--gold')\n      },\n      {\n        name: 'US Equity',\n        color: cssVar.getPropertyValue('--internationalEquity')\n      },\n      {\n        name: 'Debt',\n        color: cssVar.getPropertyValue('--debt')\n      },\n      {\n        name: 'Cash',\n        color: cssVar.getPropertyValue('--cash')\n      },\n      {\n        name: 'Silver',\n        color: cssVar.getPropertyValue('--silver')\n      }\n    ];\n    aa = aa.filter(f => f.MintboxId === MINTBOXID)\n    let percentArr = []\n    const totalAllocation = aa.reduce((total, r) => total + r.AssetBalance, 0)\n    if (aa.length !== 0) {\n      assetClasses.forEach(a => {\n        const subTotal = aa.filter(f => f.AssetClass === a.name).reduce((total, r) => total + r.AssetBalance, 0) * 100 / totalAllocation\n        if (subTotal) {\n          percentArr.push({ ...a, y: Number(subTotal.toFixed(2)) })\n        }\n      })\n    }\n    setAssetAllocation(percentArr)\n  }\n\n  const getPortfolioXIRR = async (id) => {\n    db.get(db.model.portfolioXirr).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolioXIRR(id).then(res => res);\n        if (res.type === true) {\n          const a = await JSON.parse(res.data);\n          const aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n          console.log(\"Get portfolio XIRR API :\", aa)\n          setPortfolioXIRR(aa)\n          await db.set(db.model.portfolioXirr, JSON.stringify(aa))\n        }\n      } else {\n        setPortfolioXIRR(p)\n      }\n    })\n  }\n\n  const getTransactions = async (id) => {\n    db.get(db.model.transactions).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getTransactions(id).then(res => res);\n        if (res.type === true) {\n          const aa = res.data;\n          console.log(\"Get transactions API :\", aa)\n          setTransactions(aa)\n          await db.set(db.model.transactions, JSON.stringify(aa))\n        }\n      } else {\n        setTransactions(p)\n      }\n    })\n  }\n\n  const onPortfolioRefresh = async () => {\n    await db.remove(db.model.portfolio);\n    await db.remove(db.model.portfolioXirr);\n    await db.remove(db.model.portfolioPerformance);\n    await db.remove(db.model.assetAllocation);\n    await db.remove(db.model.transactions)\n    loadData();\n  }\n\n  const Funds = () => {\n    return (\n      <div style={{ marginTop: \"2%\" }}>\n        {portfolio?.MintboxETF?.filter(f => f.MintboxId === MINTBOXID && f.GoalId === 0 && f.MintboxETFBalance !==0)?.map((data) => (\n          <FundCard key={data.FundCode}\n            onClick={() => props.history.push({\n              pathname: '/portfolio/etfScreen',\n              state: { FUNDCODE: data.FundCode, MINTBOXID: MINTBOXID, TYPE: 'MintboxETF', FUNDDATA:data }\n            })}\n            fundName={data.ETFName}\n            AMCName = {data.AMCName}\n            balance={data.MintboxETFBalance}\n            previousBalance={portfolio?.PrevMintboxETF?.find(m => m.MintboxId === MINTBOXID && m.FundCode === data.FundCode)?.PrevMintboxETFBalance}\n            xirr={Object.values(portfolioXIRR?.MintboxETFXIRR || {}).find(m => m.MintboxId === MINTBOXID && m.FundCode === data.FundCode)?.XIRR}\n            type = {1}\n          />\n        ))}\n      </div>\n    )\n  }\n\n  // const AssetAllocation = () => {\n  //   var options = {\n  //     chart: {\n  //       type: 'pie',\n  //       style: {\n  //         fontFamily: 'DMSans-Regular',\n  //         color: '#333',\n  //         fontWeight: 'normal'\n  //       },\n  //       backgroundColor: \"transparent\",\n  //       plotBackgroundColor: null,\n  //       plotBorderWidth: null,\n  //       plotShadow: false,\n  //       height: 220\n  //     },\n  //     title: {\n  //       text: ''\n  //     },\n  //     scrollbar: {\n  //       enabled: false\n  //     },\n  //     exporting: {\n  //       enabled: false\n  //     },\n  //     legend: {\n  //       itemStyle: {\n  //         color: \"#6c6c6c\",\n  //         fontSize: 14,\n  //         fontWeight: 'normal',\n  //         fontFamily: 'DMSans-Regular'\n  //       }\n  //     },\n\n  //     plotOptions: {\n  //       pie: {\n  //         allowPointSelect: true,\n  //         cursor: 'pointer',\n  //         dataLabels: {\n  //           enabled: false\n  //         },\n\n  //         showInLegend: true,\n  //         size: 150,\n  //       }\n  //     },\n  //     credits: {\n  //       enabled: false\n  //     },\n  //     tooltip: {\n  //       valueSuffix: '%'\n  //     },\n  //     legend: {\n  //       enabled: true,\n  //       align: 'right',\n  //       verticalAlign: 'top',\n  //       layout: 'vertical',\n  //       x: -30,\n  //       y: 30,\n  //       itemMarginBottom: 10\n  //     },\n  //     series: [\n  //       {\n  //         data: assetAllocation\n  //       }\n  //     ]\n  //   };\n  //   return (\n  //     <div style={{ margin: \"4%\" }}>\n  //       <HighchartsReact\n  //         highcharts={Highcharts}\n  //         options={options}\n  //       />\n  //       <div style={{ fontSize: '14px', fontWeight: \"400\", color: \"#6c6c6c\", marginTop: '2%' }}>Last reviewed: 1st March, 2022</div>\n  //       <div style={{ fontSize: '14px', fontWeight: \"400\", color: \"#6c6c6c\", marginTop: '2%' }}>Next review: 1st September, 2021</div>\n  //       <div style={{ fontSize: '14px', fontWeight: \"500\", color: \"#294C88\", marginTop: '4%' }}>Understand review and rebalancing <AiOutlineRight size={14} /></div>\n  //     </div>\n  //   )\n  // }\n\n  const Allocation = () => {\n    return <FundConstituents fundConstituents={CONSTITUENTS} type='portfolio' />\n  }\n\n  const Transactions = () => {\n    return (\n      <div style={{ marginTop: \"2%\" }}>\n        {\n          transactions.filter(t => t.FundType === 1 && t.MintboxId === MINTBOXID).reverse().map((trx,i) => {\n            return <TransactionCard trx={trx} i={i} type={3}/>\n          })\n        }\n      </div>\n    )\n  }\n\n  const keyTitles = [\n    { title: 'Funds', view: Funds() },\n    // { title: 'Asset allocation', view: AssetAllocation() },\n    { title: 'Allocation', view: Allocation() },\n    { title: 'SIPs', view: SIPs({navigation:props.history,TYPE:3, FUNDCODE:MINTBOXID, FUNDDATA: FUNDDATA}) },\n    { title: 'Transactions', view: Transactions() }\n  ];\n\n  const MainModal = () => {\n    const [selectedOption, setSelectedOption] = React.useState()\n\n    const onConfirm = () => {\n      switch (selectedOption) {\n        case 'redeem': {\n          props.history.push({\n            pathname: '/portfolio/redeem-mintbox',\n            state: { fundData: FUNDDATA, constituents: CONSTITUENTS }\n          })\n          setShowMainModal(false);\n          break;\n        }\n        case 'sip': {\n          setShowMainModal(false);\n          props.history.push({\n            pathname: '/portfolio/confirm-invest',\n            state: { fundData: FUNDDATA, type: 3, sip: true }\n          })\n          break;\n        }\n        default: setShowMainModal(false)\n      }\n    }\n    return (\n      <Modal\n        className=\"bottom-drawer\"\n        show={showMainModal}\n        onHide={() => setShowMainModal(false)}\n        keyboard={false}\n      >\n        <Modal.Body>\n          <div className=\"radio-item\" style={{ marginTop: \"6%\" }}>\n            <input type=\"radio\" name=\"fund\" onChange={(e) => { setSelectedOption(e.target.value) }} value=\"sip\" id=\"sip\" />\n            <label className=\"bodyTextDark radio-label\" htmlFor=\"sip\">Start a SIP</label>\n          </div>\n          <div className=\"radio-item\" style={{ marginTop: \"6%\" }}>\n            <input type=\"radio\" name=\"fund\" onChange={(e) => { setSelectedOption(e.target.value) }} value=\"redeem\" id=\"redeem\" />\n            <label className=\"bodyTextDark radio-label\" htmlFor=\"redeem\" style={{ color: cssVar.getPropertyValue('--peach') }}>Redeem</label>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"outlineButton\" onClick={() => setShowMainModal(false)}>\n            Close\n          </button>\n          <button className=\"solidButton\" onClick={() => onConfirm()}>\n            Confirm\n          </button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n  if (loading) {\n    return (\n      <ActivityLoaderMintbox />\n    );\n  }\n\n  return (\n    <div className='mainContainer'>\n      <MainHeader\n        navigation={props.history}\n        header=\"mintbox\"\n      />\n      <div className=\"dataContainer px-0\">\n        <div style={{ margin: \"4% 4% 2%\" }}>\n          <div style={{ display: \"flex\", gap: \"4%\" }}>\n            <MintboxIcon id={portfolio.MintboxConsolidated?.find(f => f.MintboxId === MINTBOXID)?.MintboxId} width='40px' height='40px' />\n            <div className='header1dark' style={{ flex: 1 }}>\n              {FUNDDATA?.MintboxName}\n            </div>\n            <HiOutlineExternalLink size={24} className='secondaryGreen' onClick={() => props.history.push(\"/mintbox-detail/\" + MINTBOXID)} style={{alignSelf:'center'}}/>\n          </div>\n        </div>\n        <HomePortfolioCard\n          navigation={props.history}\n          balance={portfolio.MintboxConsolidated?.find(f => f.MintboxId === MINTBOXID && f.GoalId === 0)?.MintboxBalance}\n          previousBalance={portfolio.PrevMintboxConsolidated?.find(f => f.MintboxId === MINTBOXID && f.GoalId === 0)?.PrevMintboxBalance}\n          // xirr={portfolioXIRR.MintboxXIRR[MINTBOXID]?.XIRR}\n          xirr={Object.values(portfolioXIRR?.MintboxXIRR || {}).find(m => m.MintboxId === MINTBOXID && m.GoalId === 0)?.XIRR}\n          onRefresh={() => { onPortfolioRefresh() }}\n          growthChartData={portfolioPerformance?.Mintbox?.filter(f => f.MintboxId === MINTBOXID)?.map(d => [new Date(d[\"NavDateStr\"]).getTime(), d[\"Balance\"]])}\n        />\n        <Tabs tabsObject={keyTitles} color={cssVar.getPropertyValue('--darkGreen')} />\n      </div>\n      <div className='bottom-nav'>\n        <div className='bn-tab' onClick={() => { props.history.push('/dashboard') }}>\n          <HiOutlineHome size={20} className='footerIcon' />\n          <div className='footerText'>Home</div>\n        </div>\n        <div className='bn-tab' style={{ flex: 3 }}>\n          <button\n            className='solidButton'\n            onClick={() => props.history.push({\n              pathname: '/portfolio/confirm-invest',\n              state: {\n                fundData: FUNDDATA,\n                type: 3\n              }\n            })}>\n            Invest more\n          </button>\n        </div>\n        <div className='bn-tab'>\n          <IoEllipsisVerticalCircleOutline\n            size='48'\n            color={cssVar.getPropertyValue('--secondaryGreen')}\n            onClick={() => setShowMainModal(true)} />\n        </div>\n      </div>\n      <MainModal />\n    </div>\n  );\n}\n","import React from 'react';\nimport { CurrencyFormat } from '../../../../components/atoms/CurrencyFormat';\nimport { AiFillCaretDown, AiFillCaretUp,AiOutlineRight } from \"react-icons/ai\";\nimport MintboxIcon from 'views/mobileView/components/atoms/MintboxIcon';\nimport RedGreenText from 'views/mobileView/components/atoms/RedGreenText';\nimport cssVar from 'views/mobileView/styles';\nimport AMCIcon from 'views/mobileView/components/atoms/AMCIcon';\n\nconst FundCard = ({ fundName,mintboxId=1,AMCName, balance=0, previousBalance=0 , xirr=0, goalName = '',onClick, type=3 }) => {\n  \n  let change = 0;\n  let changePercentage = 0;\n  if(previousBalance !== 0 && previousBalance !== ''){\n    change = balance-previousBalance;\n    changePercentage = change*100/previousBalance;\n  }\n  return (\n    <div style={{padding:\"4%\",borderBottom:\"1px solid \"+cssVar.getPropertyValue('--light'),display:\"flex\",gap:\"4%\"}} onClick={()=>onClick()}>\n      {\n        type === 1 || type === 2 ?\n          <AMCIcon amcName={AMCName} height='40px' width='40px' />\n          :\n          <MintboxIcon id={mintboxId} height='40px' width='40px' />\n      }\n      <div style={{flex:\"1\"}}>\n        <div className='header2dark' style={{marginBottom:\"2%\"}}>{fundName}</div>\n        <div className='smallTextLight'>\n          <span>1 Day </span>\n          {\n            change >0?\n              <span style={{color:cssVar.getPropertyValue('--secondaryGreen')}}><AiFillCaretUp size={20} style={{verticalAlign:\"bottom\"}}/> {CurrencyFormat(change,\"long\",2)} ({changePercentage.toFixed(2)}%)</span>\n              :\n            change < 0?\n              <span style={{color:cssVar.getPropertyValue('--red')}}><AiFillCaretDown size={20} style={{verticalAlign:\"bottom\"}}/> {CurrencyFormat(change,\"long\",2)} ({changePercentage.toFixed(2)}%)</span>\n              :\n              <span> {CurrencyFormat(change,\"long\",2)} ({changePercentage}%)</span>\n          }\n        </div>\n        {/* {\n          goalName !== ''?\n          <div className='smallTextLight' style={{marginTop:'2%'}}><HiLink size={14} className=\"secondaryGreen\"/> {goalName}</div>\n          : ''\n        } */}\n      </div>\n      <div>\n        <div className='header2dark' style={{marginBottom:\"4px\"}}>\n          {CurrencyFormat(balance,\"short\")}<AiOutlineRight size={14} className='secondaryGreen' style={{marginLeft:\"4px\"}}/>\n        </div>\n        <div className='bodyTextLight'>\n          <RedGreenText text={xirr.toFixed(2)+'%'} value={xirr}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FundCard;\n","import db from \"libs/db\"\nimport React from \"react\"\nimport Modal from \"react-bootstrap/Modal\"\nimport CurrencyInput from \"react-currency-input-field\"\nimport { AiOutlineDown } from \"react-icons/ai\"\nimport { BsDot } from \"react-icons/bs\"\nimport { toast } from \"react-toastify\"\nimport AdminServices from \"services/api/AdminServices\"\nimport ActivityLoaderMintbox from \"views/mobileView/components/atoms/ActivityLoaderMintbox\"\nimport { CurrencyFormat } from \"views/mobileView/components/atoms/CurrencyFormat\"\nimport ordinal_suffix_of from \"views/mobileView/components/atoms/ordinal-suffix\"\nimport cssVar from \"views/mobileView/styles\"\nimport NotFound from \"./NotFound\"\n\nconst SIPs = ({ navigation, TYPE, FUNDCODE, GOALID = 0, FUNDDATA }) => {\n    const [selectedScheduleItem, setSelectedScheduleOption] = React.useState({})\n\n    const [ORDERS, setORDERS] = React.useState([]);\n\n    const [showModifySipModal, setShowModifySipModal] = React.useState(false)\n    const [showSipAmountModal, setShowSipAmountModal] = React.useState(false)\n    const [showDateModal, setShowDateModal] = React.useState(false);\n    const [showStopSipModal, setShowStopSipModal] = React.useState(false);\n\n    const [loading,setLoading]=React.useState(true);\n    const [minimumAmount,setMinimumAmount] = React.useState(0);\n\n    React.useEffect(async()=>{\n        console.log(FUNDDATA)\n        if(TYPE === 1){\n            setMinimumAmount(FUNDDATA?.NAV > 500? FUNDDATA?.NAV * 1.2 : 500)\n        } else if(TYPE ===3){\n            setMinimumAmount(FUNDDATA?.MinSIPAmount)\n        }\n        await loadData();\n    },[])\n\n    React.useEffect(()=>{\n        if(TYPE === 4){\n            setMinimumAmount(selectedScheduleItem.Amount+1)\n        }\n    },[selectedScheduleItem])\n\n    const loadData = async () => {\n        try {\n            db.get(db.model.user).then(async (p) => {\n                await getPortfolio(p.userData.id)\n            })\n        } catch (error) {\n            toast.error(error);\n            setLoading(false)\n        }\n    };\n\n    const getPortfolio = async (id) => {\n        await db.get(db.model.portfolio).then(async (p) => {\n            if (p === null) {\n                let res = await AdminServices.getPortfolio(id).then(res => res);\n                if (res.type === true) {\n                    const a = await JSON.parse(res.data);\n                    let aa = await a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n                    console.log(\"Get portfolio API :\", aa)\n                    await db.set(db.model.portfolio, JSON.stringify(aa))\n                    if (TYPE === 3) {\n                        setORDERS(aa.ScheduledOrders.filter(s => s.MintboxId === FUNDCODE && s.GoalId === 0))\n                    } else if (TYPE === 4) {\n                        setORDERS(aa.ScheduledOrders.filter(s => s.GoalId === GOALID))\n                    } else {\n                        setORDERS(aa.ScheduledOrders.filter(s => s.ToFundCode === FUNDCODE))\n                    }\n                    setLoading(false)\n                }\n            } else {\n                if (TYPE === 3) {\n                    setORDERS(p.ScheduledOrders.filter(s => s.MintboxId === FUNDCODE && s.GoalId === 0))\n                } else if (TYPE === 4) {\n                    setORDERS(p.ScheduledOrders.filter(s => s.GoalId === GOALID))\n                } else {\n                    setORDERS(p.ScheduledOrders.filter(s => s.ToFundCode === FUNDCODE))\n                }\n                setLoading(false)\n            }\n        })\n    }\n\n    const updateScheduledOrder = async (key, val) => {\n        setLoading(true)\n        const data = {\n            \"uid\": selectedScheduleItem.UID,\n            \"fromFundCode\": selectedScheduleItem.FromFundCode,\n            \"toFundCode\": key === \"toFundCode\" ? val : selectedScheduleItem.ToFundCode,\n            \"amount\": key === \"amount\" ? val : selectedScheduleItem.Amount,\n            \"units\": key === \"units\" ? val : selectedScheduleItem.Units,\n            \"orderDate\": key === \"orderDate\" ? val : selectedScheduleItem.OrderDate,\n            \"isActive\": key === \"isActive\" ? val : selectedScheduleItem.IsActive,\n            \"isDeleted\": key === \"isDeleted\" ? val : selectedScheduleItem.IsDeleted\n        }\n        var res = await AdminServices.updateScheduledOrders(data).then(res => { return res })\n        if (res.type) {\n            toast.success('SIP updated')\n            db.remove(db.model.portfolio)\n            await loadData()\n        } else {\n            toast.error('Something went wrong! Try again.')\n        }\n    }\n\n    const ModifySipModal = () => {\n        const [selectedOption, setSelectedOption] = React.useState()\n\n        const onConfirm = () => {\n            switch (selectedOption) {\n                case 'editAmount': {\n                    setShowModifySipModal(false);\n                    setShowSipAmountModal(true);\n                    break;\n                }\n                case 'editDate': {\n                    setShowModifySipModal(false);\n                    setShowDateModal(true);\n                    break;\n                }\n                case 'pauseSip': {\n                    setShowModifySipModal(false);\n                    updateScheduledOrder(\"isActive\",selectedScheduleItem.IsActive === 1 ? 0 : 1)\n                    break;\n                }\n                case 'stopSip': {\n                    setShowModifySipModal(false);\n                    setShowStopSipModal(true)\n                    break;\n                }\n                default: setShowModifySipModal(false)\n            }\n        }\n        return (\n            <Modal\n                className=\"bottom-drawer\"\n                show={showModifySipModal}\n                onHide={() => setShowModifySipModal(false)}\n                keyboard={false}\n            >\n                <Modal.Body>\n                    {\n                        selectedScheduleItem.IsActive === 1 && selectedScheduleItem.IsDeleted === 0 ?\n                            <>\n                                <div className=\"radio-item\" style={{ marginTop: \"6%\" }}>\n                                    <input type=\"radio\" name=\"fund\" onChange={(e) => { setSelectedOption(e.target.value) }} value=\"editAmount\" id=\"editAmount\" />\n                                    <label className=\"bodyTextDark radio-label\" htmlFor=\"editAmount\">Edit SIP amount</label>\n                                </div>\n                                <div className=\"radio-item\" style={{ marginTop: \"6%\" }}>\n                                    <input type=\"radio\" name=\"fund\" onChange={(e) => { setSelectedOption(e.target.value) }} value=\"editDate\" id=\"editDate\" />\n                                    <label className=\"bodyTextDark radio-label\" htmlFor=\"editDate\">Edit SIP date</label>\n                                </div>\n                            </>\n                            :\n                            <></>\n                    }\n                    {\n                        selectedScheduleItem.IsDeleted === 0 ?\n                            <div className=\"radio-item\" style={{ marginTop: \"6%\" }}>\n                                <input type=\"radio\" name=\"fund\" onChange={(e) => { setSelectedOption(e.target.value) }} value=\"pauseSip\" id=\"pauseSip\" />\n                                <label className=\"bodyTextDark radio-label\" htmlFor=\"pauseSip\">{selectedScheduleItem.IsActive === 1 ? \"Pause SIP\" : \"Resume SIP\"}</label>\n                            </div>\n                            :\n                            <></>\n                    }\n                    <div className=\"radio-item\" style={{ marginTop: \"6%\" }}>\n                        <input type=\"radio\" name=\"fund\" onChange={(e) => { setSelectedOption(e.target.value) }} value=\"stopSip\" id=\"stopSip\" />\n                        <label className=\"bodyTextDark radio-label\" htmlFor=\"stopSip\" style={{ color: selectedScheduleItem.IsDeleted === 0 ? cssVar.getPropertyValue('--peach') : cssVar.getPropertyValue('--secondaryGreen') }}>{selectedScheduleItem.IsDeleted === 0 ? \"Stop SIP\" : \"Restart SIP\"}</label>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"outlineButton\" onClick={() => setShowModifySipModal(false)}>\n                        Close\n                    </button>\n                    <button className=\"solidButton\" onClick={() => onConfirm()}>\n                        Confirm\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    const StopSipModal = () => {\n        return (\n            <Modal\n                className=\"bottom-drawer\"\n                show={showStopSipModal}\n                onHide={() => setShowStopSipModal(false)}\n            >\n                <Modal.Body>\n                    <div className='header1dark'>Are your sure you want to {selectedScheduleItem.IsDeleted === 1 ? \"restart\" : \"stop\"} SIP in {TYPE === 1? FUNDDATA?.ETFName :TYPE===2? FUNDDATA?.SchemeName: FUNDDATA?.MintboxName}?</div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"outlineButton\" onClick={() => setShowStopSipModal(false)}>\n                        Close\n                    </button>\n                    <button className=\"solidButton\"\n                        onClick={() => {\n                            updateScheduledOrder(\"isDeleted\", selectedScheduleItem.IsDeleted === 1 ? 0 : 1)\n                            setShowStopSipModal(false)\n                        }}\n                    >\n                        Confirm\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    const SipAmountModal = () => {\n        const [s, setS] = React.useState()\n        return (\n            <Modal\n                className=\"bottom-drawer\"\n                show={showSipAmountModal}\n                onHide={() => setShowSipAmountModal(false)}\n            >\n                <Modal.Body>\n                    <div className='header1dark'>Edit monthly SIP amount</div>\n                    <div className='smallTextDark' style={{ marginTop: '2%' }}>Current SIP {CurrencyFormat(selectedScheduleItem.Amount)} | Min required {CurrencyFormat(Number(minimumAmount))}</div>\n                    <CurrencyInput\n                        className='normalInput rupee'\n                        id=\"editSip\"\n                        name=\"editSip\"\n                        placeholder='20,000'\n                        value={s}\n                        allowDecimals={false}\n                        allowNegativeValue={false}\n                        disableAbbreviations={false}\n                        prefix=' '\n                        intlConfig={{ locale: 'en-IN', currency: 'INR' }}\n                        onValueChange={(value) => setS(Number(value) || '')}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"outlineButton\" onClick={() => setShowSipAmountModal(false)}>\n                        Close\n                    </button>\n                    <button className=\"solidButton\"\n                        style={{ opacity: s !== '' && Number(s) >= Number(minimumAmount) ? 1 : 0.4 }}\n                        onClick={() => {\n                            if (s !== '' && Number(s) >= Number(minimumAmount)) {\n                                updateScheduledOrder(\"amount\", Number(s))\n                                setShowSipAmountModal(false)\n                            }\n                        }}\n                    >\n                        Confirm\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    const DateModal = () => {\n        const [selectedDate, setSelectedDate] = React.useState(selectedScheduleItem.OrderDate)\n        return (\n            <Modal\n                className=\"bottom-drawer\"\n                show={showDateModal}\n                onHide={() => setShowDateModal(false)}\n                keyboard={false}\n            >\n                <Modal.Body>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", paddingTop: \"20px\" }}>\n                        {\n                            [1, 2, 3, 4, 5, 6, 7].map(d => <div key={d} onClick={() => setSelectedDate(d)} style={{ border: \"1px solid #e5e5e5\", borderRadius: '32px', height: \"32px\", width: '32px', textAlign: \"center\", paddingTop: \"2px\", color: d === selectedDate ? \"#ffffff\" : \"#6c6c6c\", background: d === selectedDate ? cssVar.getPropertyValue('--darkGreen') : 'transparent' }}>{d}</div>)\n                        }\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", paddingTop: \"20px\" }}>\n                        {\n                            [8, 9, 10, 11, 12, 13, 14].map(d => <div key={d} onClick={() => setSelectedDate(d)} style={{ border: \"1px solid #e5e5e5\", borderRadius: '32px', height: \"32px\", width: '32px', textAlign: \"center\", paddingTop: \"2px\", color: d === selectedDate ? \"#ffffff\" : \"#6c6c6c\", background: d === selectedDate ? cssVar.getPropertyValue('--darkGreen') : 'transparent' }}>{d}</div>)\n                        }\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", paddingTop: \"20px\" }}>\n                        {\n                            [15, 16, 17, 18, 19, 20, 21].map(d => <div key={d} onClick={() => setSelectedDate(d)} style={{ border: \"1px solid #e5e5e5\", borderRadius: '32px', height: \"32px\", width: '32px', textAlign: \"center\", paddingTop: \"2px\", color: d === selectedDate ? \"#ffffff\" : \"#6c6c6c\", background: d === selectedDate ? cssVar.getPropertyValue('--darkGreen') : 'transparent' }}>{d}</div>)\n                        }\n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", paddingTop: \"20px\" }}>\n                        {\n                            [22, 23, 24, 25, 26, 27, 28].map(d => <div key={d} onClick={() => setSelectedDate(d)} style={{ border: \"1px solid #e5e5e5\", borderRadius: '32px', height: \"32px\", width: '32px', textAlign: \"center\", paddingTop: \"2px\", color: d === selectedDate ? \"#ffffff\" : \"#6c6c6c\", background: d === selectedDate ? cssVar.getPropertyValue('--darkGreen') : 'transparent' }}>{d}</div>)\n                        }\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className='outlineButton' onClick={() => setShowDateModal(false)}>\n                        Close\n                    </button>\n                    <button className=\"solidButton\" onClick={() => {\n                        if (selectedDate !== selectedScheduleItem.OrderDate) {\n                            updateScheduledOrder(\"orderDate\", selectedDate)\n                        }\n                        setShowDateModal(false)\n                    }}>\n                        Confirm\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    if(loading){\n        return <ActivityLoaderMintbox />\n    }\n    return (\n        <div style={{ marginTop: '2%' }}>\n            {\n                ORDERS?.length === 0 ?\n                    <NotFound text=\"You don't have any active SIPs\" buttonText='Start SIP now' onClick={() => {\n                        if(TYPE === 4){\n                            \n                        } if(TYPE === 1){\n                            navigation.push({\n                                pathname: '/portfolio/confirm-invest',\n                                state: {\n                                    fundData: {...FUNDDATA,MinSIPAmount:FUNDDATA.NAV},\n                                    type: TYPE,\n                                    sip: true\n                                }\n                            })\n                        } else {\n                            navigation.push({\n                                pathname: '/portfolio/confirm-invest',\n                                state: {\n                                    fundData: FUNDDATA,\n                                    type: TYPE,\n                                    sip: true\n                                }\n                            })\n                        }\n                    }} />\n                    :\n                    ORDERS?.map((t, i) => {\n                        return (\n                            <>\n                                <div key={i} style={{ padding: \"4%\", borderBottom: '1px solid ' + cssVar.getPropertyValue('--light') }}>\n                                    <div className='chip-sip' style={{ marginBottom: \"1%\" }}>\n                                        <BsDot size={24} color={t.IsDeleted === 1 ? cssVar.getPropertyValue('--red') : t.IsActive === 0 ? cssVar.getPropertyValue('--gold') : cssVar.getPropertyValue('--secondaryGreen')} style={{ marginLeft: \"-10px\" }} />\n                                        {t.IsDeleted === 1 ? 'Stopped' : t.IsActive === 0 ? 'Paused' : 'Active'}\n                                    </div>\n                                    <div style={{ display: \"flex\", alignItems: \"center\", gap: \"6px\" }}>\n                                        <div style={{ flex: 1 }}>\n                                            <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>\n                                                {ordinal_suffix_of(t.OrderDate)} of every {t.Frequency === 3?'three':t.Frequency===6?'six':t.Frequency===1?'twelve':''} month(s)\n                                            </div>\n                                            <div className='header1dark'>{CurrencyFormat(t.Amount)}</div>\n                                        </div>\n                                        <div className='header2dark secondaryGreen'\n                                            onClick={() => {\n                                                setSelectedScheduleOption(t)\n                                                setShowModifySipModal(true);\n                                            }}>Modify <AiOutlineDown size={12} /></div>\n                                    </div>\n                                </div>\n                            </>\n                        )\n                    })\n            }\n            <ModifySipModal />\n            <DateModal />\n            <SipAmountModal />\n            <StopSipModal />\n        </div>\n    )\n}\n\nexport default SIPs"],"names":["MintboxIcon","id","height","width","Number","src","baseImgURL","style","React","RiskFormat","riskID","RiskTextColor","cssVar","fundConstituents","type","displayAssetClass","assetClasses","name","color","fundsArray","filter","fund","AssetClassId","totalAllocation","reduce","total","CurrentWeightage","assetClassName","assetColor","length","className","display","gap","alignItems","padding","margin","borderBottom","borderRadius","backgroundColor","flex","toFixed","map","i","amcName","AMCName","ETFName","MintboxScreen","props","loading","setLoading","showMainModal","setShowMainModal","portfolio","setPortfolio","portfolioPerformance","setPortfolioPerformance","setAssetAllocation","portfolioXIRR","setPortfolioXIRR","transactions","setTransactions","setUser","MINTBOXID","location","state","FUNDDATA","CONSTITUENTS","MintboxETF","f","MintboxId","GoalId","MintboxETFBalance","item","MintboxBalance","loadData","db","then","p","userData","getPortfolio","getAssetAllocation","getPortfolioXIRR","getPortfolioPerformance","getTransactions","error","toast","a","AdminServices","res","JSON","parse","data","aa","console","log","stringify","formatAssetAllo","percentArr","r","AssetBalance","forEach","subTotal","AssetClass","push","y","onPortfolioRefresh","keyTitles","title","view","marginTop","onClick","history","pathname","FUNDCODE","FundCode","TYPE","fundName","balance","previousBalance","PrevMintboxETF","find","m","PrevMintboxETFBalance","xirr","Object","values","MintboxETFXIRR","XIRR","Funds","SIPs","navigation","t","FundType","reverse","trx","MainModal","selectedOption","setSelectedOption","show","onHide","keyboard","onChange","e","target","value","htmlFor","fundData","constituents","sip","onConfirm","header","MintboxConsolidated","MintboxName","size","alignSelf","PrevMintboxConsolidated","PrevMintboxBalance","MintboxXIRR","onRefresh","growthChartData","Mintbox","d","Date","getTime","tabsObject","mintboxId","goalName","change","changePercentage","marginBottom","verticalAlign","CurrencyFormat","marginLeft","text","GOALID","selectedScheduleItem","setSelectedScheduleOption","ORDERS","setORDERS","showModifySipModal","setShowModifySipModal","showSipAmountModal","setShowSipAmountModal","showDateModal","setShowDateModal","showStopSipModal","setShowStopSipModal","minimumAmount","setMinimumAmount","NAV","MinSIPAmount","Amount","ScheduledOrders","s","ToFundCode","updateScheduledOrder","key","val","UID","FromFundCode","Units","OrderDate","IsActive","IsDeleted","ModifySipModal","StopSipModal","SchemeName","SipAmountModal","setS","placeholder","allowDecimals","allowNegativeValue","disableAbbreviations","prefix","intlConfig","locale","currency","onValueChange","opacity","DateModal","selectedDate","setSelectedDate","justifyContent","paddingTop","border","textAlign","background","buttonText","ordinal_suffix_of","Frequency"],"sourceRoot":""}
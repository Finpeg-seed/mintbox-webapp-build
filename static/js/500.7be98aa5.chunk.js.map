{"version":3,"file":"static/js/500.7be98aa5.chunk.js","mappings":"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","sources":["pages/admin2/dashboard/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport AdminServices from 'services/api/AdminServices';\nimport { Line } from 'react-chartjs-2';\nimport Head from '../layout/head/Head';\nimport Content from '../layout/content/Content';\nimport ActivityLoaderMintbox from 'CustomComponents/ActivityLoaderMintbox';\nimport { CurrencyFormat } from 'CustomComponents/CurrencyFormat';\nimport MintboxIcon from 'CustomComponents/MintboxIcon';\nimport RedGreenText from 'CustomComponents/RedGreenText';\n\nexport default function Dashboard() {\n  const [allMintboxes, setAllMintboxes] = React.useState([]);\n  const [allClients, setAllClients] = React.useState([])\n  const [loading, setLoading] = React.useState(true);\n\n  const startDate = new Date('2022-06-13')\n  const today = new Date();\n  Date.prototype.addDays = function (days) {\n    var date = new Date(this.valueOf());\n    date.setDate(date.getDate() + days);\n    return date;\n  }\n  function getDatesArray(startDate, stopDate) {\n    var dateArray = new Array();\n    var currentDate = startDate;\n    while (currentDate <= stopDate) {\n      dateArray.push(new Date(currentDate));\n      currentDate = currentDate.addDays(1);\n    }\n    return dateArray;\n  }\n  const getMonth = (n) => {\n    if (n === 0) return \"Jan\";\n    if (n === 1) return \"Feb\";\n    if (n === 2) return \"Mar\";\n    if (n === 3) return \"Apr\";\n    if (n === 4) return \"May\";\n    if (n === 5) return \"Jun\";\n    if (n === 6) return \"Jul\";\n    if (n === 7) return \"Aug\";\n    if (n === 8) return \"Sep\";\n    if (n === 9) return \"Oct\";\n    if (n === 1) return \"Nov\";\n    if (n === 1) return \"Dec\";\n  }\n\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: false\n        },\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\",\n          display: false\n        },\n        ticks: {\n          callback: function (val, i) {\n            return i % 10 === 0 ? val.getDate() + \" \" + getMonth(val.getMonth()) : '';\n          }\n        }\n      }]\n    },\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    }\n  }\n  const data = {\n    labels: getDatesArray(startDate, today),\n    datasets: [{\n      label: '# of users',\n      borderColor: [\n        \"#58985F\"\n      ],\n      data: getDatesArray(startDate, today).map((d) => allClients?.filter(client => {\n        let d1 = new Date(client.CreatedOn).getTime()\n        let d2 = new Date(d).getTime()\n        return d1 <= d2\n      }).length),\n      borderWidth: 2,\n      fill: false\n    }],\n\n  };\n  console.log(data)\n\n\n  React.useEffect(() => {\n    getIFAClients(-1)\n    getAllMintbox();\n    setLoading(false)\n  }, []);\n\n  const getIFAClients = async (id) => {\n    let res = await AdminServices.getIFAClients(id).then(res => res);\n    if (res.type === true) {\n      const aa = res.data;\n      setAllClients(aa)\n      console.log(\"GetAllClients API :\", res)\n    }\n  }\n  const getAllMintbox = async () => {\n    try {\n      let res = await AdminServices.getAllMintboxes(0).then((res) => JSON.stringify(res));\n      res = await JSON.parse(res);\n      console.log(\"Get All Mintboxes API: \", res.data)\n      if (res.type === true) {\n        setAllMintboxes(res.data)\n      }\n    } catch (error) {\n    }\n  }\n\n  if (loading) {\n    return (<ActivityLoaderMintbox />)\n  }\n  return (\n    <React.Fragment>\n      <Head title=\"Dashboard\" />\n      <Content>\n        <div className=\"row\">\n          <div className=\"col-sm-4 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5>Investments</h5>\n                <div className=\"row\">\n                  <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                      <h2 className=\"mb-0\">{CurrencyFormat(0)}</h2>\n                      <p className=\"text-primary ml-2 mb-0 font-weight-medium\">+0%</p>\n                    </div>\n                    {/* <h6 className=\"text-muted font-weight-normal\">11.38% Since last month</h6> */}\n                  </div>\n                  <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                    <i className=\"icon-lg mdi mdi-cash-multiple text-primary ml-auto\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-4 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5>Active users</h5>\n                <div className=\"row\">\n                  <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                      <h2 className=\"mb-0\">{allClients?.length}</h2>\n                      <p className=\"text-primary ml-2 mb-0 font-weight-medium\">+{allClients.filter(c => new Date(c.CreatedOn).toDateString() === new Date().toDateString()).length} today</p>\n                    </div>\n                    {/* <h6 className=\"text-muted font-weight-normal\"> 9.61% Since last month</h6> */}\n                  </div>\n                  <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                    <i className=\"icon-lg mdi mdi-account-multiple-plus text-primary ml-auto\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-4 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5>Black users</h5>\n                <div className=\"row\">\n                  <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                      <h2 className=\"mb-0\">{allClients.filter(c => c.IsBlack === 1).length}</h2>\n                      <p className=\"text-primary ml-2 mb-0 font-weight-medium\">+0 today</p>\n                    </div>\n                    {/* <h6 className=\"text-muted font-weight-normal\">2.27% Since last month</h6> */}\n                  </div>\n                  <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                    <i className=\"icon-lg mdi mdi mdi-account-check ml-auto\" style={{ color: 'var(--darkGreen)' }}></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-12 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Number of Users</h4>\n                <Line data={data} options={options} />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-12 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Top Mintboxes</h4>\n                <div className=\"preview-list\">\n                  {\n                    allMintboxes.sort((a, b) => (a.XIRR < b.XIRR) ? 1 : -1).slice(0, 5)?.map((data) => {\n                      return <div className='border-bottom'>\n                        <div className=\"preview-item\">\n                          <div className=\"preview-thumbnail\">\n                            <MintboxIcon id={data.MintboxId} height='40px' width='40px' />\n                          </div>\n                          <div className=\"preview-item-content d-sm-flex flex-grow m-auto\">\n                            <div className=\"flex-grow\">\n                              <h6 className=\"preview-subject\">{data.MintboxName}</h6>\n                              {/* <div className='text-muted'>\n                              description\n                            </div> */}\n                            </div>\n                            <div className=\"mr-auto text-sm-right pt-2 pt-sm-0\">\n                              <div className='text-muted mb-2'>\n                                <RedGreenText text={data.XIRR.toFixed(2) + '%'} value={data.XIRR} />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Content>\n    </ React.Fragment>\n\n  );\n}\n"],"names":["Dashboard","React","allMintboxes","setAllMintboxes","allClients","setAllClients","loading","setLoading","startDate","Date","today","getDatesArray","stopDate","dateArray","Array","currentDate","push","addDays","prototype","days","date","this","valueOf","setDate","getDate","options","scales","yAxes","ticks","beginAtZero","gridLines","color","xAxes","display","callback","val","i","n","getMonth","legend","elements","point","radius","data","labels","datasets","label","borderColor","map","d","filter","client","CreatedOn","getTime","length","borderWidth","fill","console","log","getIFAClients","getAllMintbox","id","AdminServices","then","res","type","aa","JSON","stringify","parse","title","className","CurrencyFormat","c","toDateString","IsBlack","style","sort","a","b","XIRR","slice","MintboxId","height","width","MintboxName","text","toFixed","value"],"sourceRoot":""}
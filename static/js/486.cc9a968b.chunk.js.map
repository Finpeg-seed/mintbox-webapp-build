{"version":3,"file":"static/js/486.cc9a968b.chunk.js","mappings":"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","sources":["pages/admin/assets/styles/components/AdminTabs.js","pages/admin/assets/styles/components/FundCard.js","pages/admin/assets/styles/components/NotFound.js","pages/admin/assets/styles/components/GoalIcon.js","pages/admin/assets/styles/components/TransactionCard.js","pages/admin/app/client/ClientInfo.js","pages/admin/app/client/ClientDetails.js","pages/admin/assets/styles/components/MintboxIcon.js"],"sourcesContent":["import React from 'react';\nimport { Tab, Tabs } from \"react-bootstrap\";\n\nfunction AdminTabs({ tabsObject , type}) {\n  const [activeKey, setActiveKey] = React.useState();\n\n  return (\n    <div className={type==='out'?'outside-tabs-content':'inside-tabs-content'}>\n      <Tabs activeKey={activeKey} onSelect={(k) => setActiveKey(k * 1)} className={type==='out'?'outside-tabs':'inside-tabs'} >\n        {tabsObject.map((t, i) => {\n          return (<Tab key={i} eventKey={i} title={t.title}>{t.view}</Tab>)\n        })}\n      </Tabs >\n    </div>\n  );\n}\nexport default AdminTabs","import React from 'react';\nimport { AiFillCaretDown, AiFillCaretUp, AiOutlineDown, AiOutlineRight, AiOutlineUp } from \"react-icons/ai\";\nimport { CurrencyFormat } from './CurrencyFormat';\nimport MintboxIcon from './MintboxIcon';\nimport RedGreenText from './RedGreenText';\nimport AMCIcon from './AMCIcon';\nimport FundConstituents from './FundConstituents';\nimport ConstituentsTable from './ConstituentsTable';\n\nconst FundCard = ({ fundName, mintboxId = 1, AMCName, balance = 0, previousBalance = 0, xirr = 0, type = 3, mintboxConstituents }) => {\n\n  const [viewConstituents, setViewConstituents] = React.useState(false)\n  let change = 0;\n  let changePercentage = 0;\n  if (previousBalance !== 0 && previousBalance !== '') {\n    change = balance - previousBalance;\n    changePercentage = change * 100 / previousBalance;\n  }\n  // return (\n  //   <>\n  //     <div style={{ padding: \"1%\", borderBottom: \"1px solid var(--border)\" }}>\n  //       <div style={{ display: \"flex\", gap: \"4%\" }}>\n  //         <div className='d-none d-sm-block'>\n  //           {\n  //             type === 1 || type === 2 ?\n  //               <AMCIcon amcName={AMCName} height='40px' width='40px' />\n  //               :\n  //               <MintboxIcon id={mintboxId} height='40px' width='40px' />\n  //           }\n  //         </div>\n  //         <div style={{ flex: \"1\" }}>\n  //           <div style={{ marginBottom: \"4px\" }}>{fundName}</div>\n  //           <div className='text-muted'>\n  //             <span>1 Day </span>\n  //             {\n  //               change > 0 ?\n  //                 <span style={{ color: 'var(--primary)' }}><AiFillCaretUp size={20} style={{ verticalAlign: \"bottom\" }} /> {CurrencyFormat(change, \"long\", 2)} ({changePercentage.toFixed(2)}%)</span>\n  //                 :\n  //                 change < 0 ?\n  //                   <span style={{ color: 'var(--danger)' }}><AiFillCaretDown size={20} style={{ verticalAlign: \"bottom\" }} /> {CurrencyFormat(change, \"long\", 2)} ({changePercentage.toFixed(2)}%)</span>\n  //                   :\n  //                   <span> {CurrencyFormat(change, \"long\", 2)} ({changePercentage}%)</span>\n  //             }\n  //           </div>\n  //         </div>\n  //         <div style={{ textAlign: 'right' }}>\n  //           <div style={{ marginBottom: \"4px\" }}>\n  //             {CurrencyFormat(balance, \"short\")}\n  //           </div>\n  //           <div className='text-muted mb-2'>\n  //             <RedGreenText text={xirr.toFixed(2) + '%'} value={xirr} />\n  //           </div>\n  //           {\n  //             type === 3 ?\n  //               viewConstituents ?\n  //                 <a className='text-muted' onClick={() => setViewConstituents(false)}>\n  //                   Hide Constituents<AiOutlineUp size={14} style={{ marginLeft: \"4px\" }} />\n  //                 </a>\n  //                 :\n  //                 <a className='text-muted' onClick={() => setViewConstituents(true)}>\n  //                   View Constituents<AiOutlineDown size={14} style={{ marginLeft: \"4px\" }} />\n  //                 </a>\n  //               :\n  //               <></>\n  //           }\n  //         </div>\n  //       </div>\n  //       {\n  //         type === 3 && viewConstituents ?\n  //           <div className=\"aligner-wrapper\">\n  //             <ConstituentsTable fundConstituents={mintboxConstituents} />\n  //           </div>\n  //           :\n  //           <></>\n  //       }\n  //     </div>\n  //   </>\n  // );\n  return <div className='border-bottom'>\n    <div className=\"preview-item\">\n      <div className=\"preview-thumbnail\">\n        {\n          type === 1 || type === 2 ?\n            <AMCIcon amcName={AMCName} height='40px' width='40px' />\n            :\n            <MintboxIcon id={mintboxId} height='40px' width='40px' />\n        }\n      </div>\n      <div className=\"preview-item-content d-sm-flex flex-grow\">\n        <div className=\"flex-grow\">\n          <h6 className=\"preview-subject\">{fundName}</h6>\n          <div className='text-muted'>\n            <span>1 Day </span>\n            {\n              change > 0 ?\n                <span style={{ color: 'var(--primary)' }}><AiFillCaretUp size={20} style={{ verticalAlign: \"bottom\" }} /> {CurrencyFormat(change, \"long\", 2)} ({changePercentage.toFixed(2)}%)</span>\n                :\n                change < 0 ?\n                  <span style={{ color: 'var(--danger)' }}><AiFillCaretDown size={20} style={{ verticalAlign: \"bottom\" }} /> {CurrencyFormat(change, \"long\", 2)} ({changePercentage.toFixed(2)}%)</span>\n                  :\n                  <span> {CurrencyFormat(change, \"long\", 2)} ({changePercentage}%)</span>\n            }\n          </div>\n        </div>\n        <div className=\"mr-auto text-sm-right pt-2 pt-sm-0\">\n          <div style={{ marginBottom: \"4px\" }}>\n            {CurrencyFormat(balance, \"short\")}\n          </div>\n          <div className='text-muted mb-2'>\n            <RedGreenText text={xirr.toFixed(2) + '%'} value={xirr} />\n          </div>\n          {\n            type === 3 ?\n              viewConstituents ?\n                <a className='text-muted' onClick={() => setViewConstituents(false)}>\n                  Hide Constituents<AiOutlineUp size={14} style={{ marginLeft: \"4px\" }} />\n                </a>\n                :\n                <a className='text-muted' onClick={() => setViewConstituents(true)}>\n                  View Constituents<AiOutlineDown size={14} style={{ marginLeft: \"4px\" }} />\n                </a>\n              :\n              <></>\n          }\n        </div>\n      </div>\n    </div>\n    {\n      type === 3 && viewConstituents ?\n        <div className=\"aligner-wrapper pb-4\">\n          <ConstituentsTable fundConstituents={mintboxConstituents} />\n        </div>\n        :\n        <></>\n    }\n  </div>\n};\n\nexport default FundCard;\n","import React from 'react'\nconst NotFound = ({ text, buttonText, onClick, type }) => {\n    return (\n        <div style={{ margin: \"10% 15%\", textAlign: 'center' }}>\n            <img style={{ width: '120px', height: \"120px\" }} \n                src={type==='mintbox'?'https://d3etfstcuyoos5.cloudfront.net/app-images/web-icons/no-invest-mintbox.png':type==='goal'?'https://d3etfstcuyoos5.cloudfront.net/app-images/web-icons/no-goal.png':'https://d3etfstcuyoos5.cloudfront.net/app-images/web-icons/no-invest.png'} alt=\"\" />\n            <div className=\"bigHeader\" style={{ marginTop: \"24px\", marginBottom: \"40px\" }}>{text}</div>\n            {/* <button className=\"outlineCardButton\">\n                {buttonText}\n            </button> */}\n        </div>\n    )\n}\n\nexport default NotFound","import React from 'react'\n\nexport default function GoalIcon({type,height,width}) {\n\n    var goals = [\n        {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/svg_icons/retire_goal.svg\",\n            goalType: 1,\n            color: 'var(--secondaryGreen)'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/web-icons/home_goal.svg\",\n            goalType: 5,\n            color: 'var(--secondaryGreen)'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/svg_icons/education_goal.svg\",\n            goalType: 3,\n            color: 'var(--red)'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/svg_icons/marriage_goal.svg\",\n            goalType: 4,\n            color: 'var(--red)'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/svg_icons/buyBike_goal.svg\",\n            goalType: 2,\n            color: '#9F87E8'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/svg_icons/buyCar_goal.svg\",\n            goalType: 6,\n            color: '#9F87E8'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/web-icons/vacation_goal.svg\",\n            goalType: 7,\n            color: 'var(--gold)'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/web-icons/custom_goal.svg\",\n            goalType: 8,\n            color: 'var(--gold)'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/web-icons/custom_goal.svg\",\n            goalType: undefined,\n            color: 'var(--gold)'\n        }, {\n            icon: \"https://d3etfstcuyoos5.cloudfront.net/app-images/web-icons/custom_goal.svg\",\n            goalType: 0,\n            color: 'var(--gold)'\n        }\n    ]\n\n    const goal = goals.find(g=>g.goalType === type)\n  return(\n    <div style={{ display:'flex', border: \"1px solid \" + goal?.color,padding:`calc(${height}*10/100) 0`, borderRadius: '4px', height, width, backgroundColor: goal?.color+'22'}}>\n        <img src={goal?.icon} style={{height: `calc(${height}*80/100)`,margin:'auto'}}/>\n    </div>\n  )\n}","import React from 'react'\nimport AMCIcon from \"./AMCIcon\"\nimport { CurrencyFormat } from \"./CurrencyFormat\"\nimport GoalIcon from './GoalIcon'\n\nconst TransactionCard = ({ trx, i , type}) => {\n    return (\n        <div className=\"preview-item border-bottom\" key={i}>\n            <div className=\"preview-thumbnail\">\n                {\n                    type === 4?\n                    <GoalIcon type={0} height='40px' width='40px' />\n                    :\n                    <AMCIcon amcName={trx.AMCName} height='40px' width='40px' />\n                }\n            </div>\n            <div className=\"preview-item-content d-sm-flex flex-grow\">\n                <div className=\"flex-grow\">\n                    {\n                        type === 4?\n                        <h6 className=\"preview-subject\">{trx.GoalName}</h6>\n                        :\n                        <h6 className=\"preview-subject\">{trx.ETFName}</h6>\n                    }\n                    <div className=\"text-muted mb-2\" style={{fontSize:'0.7rem'}}>{trx.MintboxName}</div>\n                    {\n                        trx.TransactionType === \"Purchase\" ?\n                            <p className=\"text-primary mb-0\">{trx.TransactionType}</p>\n                            :\n                            trx.TransactionType === \"Redemption\" ?\n                                <p className=\"text-danger mb-0\">{trx.TransactionType}</p>\n                                :\n                                <p className=\"text-muted mb-0\">{trx.TransactionType}</p>\n                    }\n                </div>\n                <div className=\"mr-auto text-sm-right pt-2 pt-sm-0\">\n                    <p className=\"text-muted\">{new Date(trx.TradeDate).toDateString()}</p>\n                    <p className=\"text-muted mb-0\" style={{whiteSpace:'nowrap'}}>{CurrencyFormat(trx.Amount)} &nbsp;&nbsp; \n                    {\n                        type===4?\"\":<span>| &nbsp;&nbsp; {trx.Units} Units</span>\n                    }\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TransactionCard","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\n\nconst ClientInfo = (clientData) => {\n    const [isEditPressed, setIsEditPressed] = React.useState(false)\n    const [originalData, setOriginalData] = React.useState({})\n    const [newData, setNewData] = React.useState({})\n\n    React.useEffect(() => {\n        const type = clientData?.Client?.[0]?.TaxStatus === \"Individual\" ? '0' : clientData?.Client?.[0]?.TaxStatus === \"Minor\" ? '1' : clientData?.Client?.[0]?.TaxStatus === \"Nri\" ? '2' : '';\n        var d = {\n            IsProfileComplete: clientData?.Client?.[0]?.IsProfileComplete || '',\n            clientId: clientData?.Client?.[0]?.ClientId,\n            pan: type === '1' ? '' : clientData?.Client?.[0]?.PAN,\n            taxStatus: type,\n            displayName: clientData?.Client?.[0]?.DisplayName || '',\n            clientName: clientData?.Client?.[0]?.ClientName || '',\n            gender: clientData?.Client?.[0]?.Gender || '',\n            dateOfBirth: clientData?.Client?.[0]?.DateofBirth ? new Date(clientData?.Client?.[0]?.DateofBirth) : null,\n            mobileNumber: type === '2' ? clientData?.Client?.[0]?.MobileNumber : '',\n            // kycStatus: type === '1' ? userProfile.GuardianPan.kycRegistered : userProfile.panData.kycRegistered,\n            guardianPAN: type === '1' ? clientData?.Client?.[0]?.GuardianPAN : '',\n            guardianName: type === '1' ? clientData?.Client?.[0]?.GuardianName : '',\n            guardianDOB: clientData?.Client?.[0]?.GuardianDOB ? new Date(clientData?.Client?.[0]?.GuardianDOB) : null,\n            panFileId: clientData?.Client?.[0]?.PANFileId,\n            signFileId: clientData?.Client?.[0]?.BankFileId,\n            // address\n            address1: clientData?.Addresses?.[0]?.Address1 || '',\n            address2: clientData?.Addresses?.[0]?.Address2 || '',\n            pincode: clientData?.Addresses?.[0]?.Pincode || '',\n            city: clientData?.Addresses?.[0]?.City || '',\n            state: clientData?.Addresses?.[0]?.State || '',\n            countryId: clientData?.Addresses?.[0]?.CountryId || '',\n            // Fatcas\n            annualIncomeSlab: clientData?.Fatcas?.[0]?.AnnualIncome,\n            sourceofWealth: clientData?.Fatcas?.[0]?.SourceofWealth,\n            occupation: clientData?.Fatcas?.[0]?.OccupationId,\n            politicalExposure: clientData?.Fatcas?.[0]?.PoliticalExposure,\n            isTaxResident: clientData?.Fatcas?.[0]?.TaxResident,\n            // nominee\n            nomineeName: clientData?.Nominees?.[0]?.Name,\n            nomineeRelation: clientData?.Nominees?.[0]?.Relation,\n            nomineeDOB: clientData?.Nominees?.[0]?.DateofBirth ? new Date(clientData?.Nominees?.[0]?.DateofBirth) : null,\n            nomineeGuardianName: clientData?.Nominees?.[0]?.GuardianName,\n            // bank\n            bankId: clientData?.BankInfo?.[0]?.BankId,\n            bankName: clientData?.BankInfo?.[0]?.BankName,\n            accountType: clientData?.BankInfo?.[0]?.AccountType,\n            accountNumber: clientData?.BankInfo?.[0]?.AccountNumber,\n            ifsc: clientData?.BankInfo?.[0]?.IFSC,\n            bankFileId: clientData?.Client?.[0]?.BankFileId,\n        }\n        setOriginalData(d)\n        setNewData(d)\n    }, [clientData])\n\n    React.useEffect(() => {\n        console.log(newData)\n    }, [newData])\n    const editData = (key, value) => {\n        setNewData({ ...newData, [key]: value })\n    }\n    return (\n        <>\n            <div className=\"col-12 grid-margin\">\n                <div className=\"card\" style={{border:'none'}}>\n                    <div className=\"card-body\">\n                        {/* <h4 className=\"card-title\">Horizontal Two column</h4> */}\n                        {/* <div style={{ textAlign: 'right' }}>\n                            {isEditPressed ?\n                                <button type=\"button\" className=\"btn btn-danger btn-icon-text mr-2\" onClick={() => { setIsEditPressed(!isEditPressed); setNewData(originalData) }}>\n                                    Cancel <i className=\"mdi mdi-window-close btn-icon-append\"></i>\n                                </button>\n                                :\n                                <button type=\"button\" className=\"btn btn-warning btn-icon-text mr-2\" onClick={() => setIsEditPressed(!isEditPressed)}>\n                                    Edit <i className=\"mdi mdi-file-check btn-icon-append\"></i>\n                                </button>\n                            }\n                            <button type=\"button\" className=\"btn btn-primary btn-icon-text\" onClick={() => setIsEditPressed(false)}>\n                                <i className=\"mdi mdi-file-check btn-icon-prepend\"></i>\n                                Save\n                            </button>\n                        </div> */}\n                        <form className=\"form-sample\">\n                            <p className=\"card-description\"> Personal info </p>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">PAN</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.pan} disabled={!isEditPressed || newData.IsProfileComplete === 1}\n                                                onChange={(e) => editData(\"pan\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Tax status</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.taxStatus} disabled={!isEditPressed || newData.IsProfileComplete === 1}\n                                                onChange={(e) => editData(\"taxStatus\", e.target.value)}>\n                                                <option value={\"\"} hidden></option>\n                                                <option value={'0'}>Individual</option>\n                                                <option value={'1'}>Minor</option>\n                                                <option value={'2'}>NRI</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Display Name</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.displayName} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"displayName\", e.target.value)}\n                                            />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Full Name</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.clientName} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"clientName\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Gender</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.gender} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"gender\", e.target.value)}>\n                                                <option value={\"\"} hidden></option>\n                                                <option value={1}>Male</option>\n                                                <option value={2}>Female</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Date of Birth</label>\n                                        <div className=\"col-sm-9\">\n                                            <DatePicker className=\"form-control w-100\" disabled={!isEditPressed}\n                                                selected={newData?.dateOfBirth}\n                                                onChange={(e) => editData(\"dateOfBirth\", e.target.value)}\n                                            />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            {\n                                newData.taxStatus === '2' ?\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <Form.Group className=\"row\">\n                                                <label className=\"text-muted col-sm-3 col-form-label\">Phone</label>\n                                                <div className=\"col-sm-9\">\n                                                    <Form.Control type=\"text\" value={newData?.mobileNumber} disabled={!isEditPressed}\n                                                        onChange={(e) => editData(\"mobileNumber\", e.target.value)} />\n                                                </div>\n                                            </Form.Group>\n                                        </div>\n                                    </div>\n                                    : \n                                    <></>\n                            }\n                            {\n                                newData.taxStatus === '1' ?\n                                    <>\n                                        <p className=\"card-description\"> Guardian </p>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-6\">\n                                                <Form.Group className=\"row\">\n                                                    <label className=\"text-muted col-sm-3 col-form-label\">Pan</label>\n                                                    <div className=\"col-sm-9\">\n                                                        <Form.Control type=\"text\" value={newData?.guardianPAN} disabled={!isEditPressed}\n                                                            onChange={(e) => editData(\"guardianPAN\", e.target.value)} />\n                                                    </div>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-md-6\">\n                                                <Form.Group className=\"row\">\n                                                    <label className=\"text-muted col-sm-3 col-form-label\">Name</label>\n                                                    <div className=\"col-sm-9\">\n                                                        <Form.Control type=\"text\" value={newData?.guardianName} disabled={!isEditPressed}\n                                                            onChange={(e) => editData(\"guardianName\", e.target.value)} />\n                                                    </div>\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-6\">\n                                                <Form.Group className=\"row\">\n                                                    <label className=\"text-muted col-sm-3 col-form-label\">Date of Birth</label>\n                                                    <div className=\"col-sm-9\">\n                                                        <DatePicker className=\"form-control w-100\" disabled={!isEditPressed}\n                                                            selected={newData?.guardianDOB}\n                                                            onChange={(e) => editData(\"guardianDOB\", e.target.value)}\n                                                        />\n                                                    </div>\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n                                    </>\n                                    \n                                    : \n                                    <></>\n                            }\n                            <p className=\"card-description\"> Address </p>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Address 1</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.address1} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"address1\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Address 2</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.address2} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"address2\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Pincode</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.pincode} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"pincode\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">City</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.city} disabled={!isEditPressed || newData.taxStatus === '0' || newData.taxStatus === '1'}\n                                                onChange={(e) => editData(\"city\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">State</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.state}  disabled={!isEditPressed || newData.taxStatus === '0' || newData.taxStatus === '1'}\n                                                onChange={(e) => editData(\"state\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Country</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.countryId}  disabled={!isEditPressed || newData.taxStatus === '0' || newData.taxStatus === '1'}\n                                                onChange={(e) => editData(\"countryId\", e.target.value)} >\n                                                <option value={\"\"} hidden></option>\n                                                <option value={106}>India</option>\n                                                <option value={1}>America</option>\n                                                <option value={2}>Italy</option>\n                                                <option value={3}>Russia</option>\n                                                <option value={4}>Britain</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            <p className=\"card-description\"> Fatcas </p>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Annual income</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.annualIncomeSlab} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"annualIncomeSlab\", e.target.value)}>\n                                                <option value={\"\"} hidden></option>\n                                                <option value={1} hidden={newData.taxStatus==='2'}>Savings</option>\n                                                <option value={2} hidden={newData.taxStatus==='2'}>Current</option>\n                                                <option value={3} hidden={newData.taxStatus==='0' || newData.taxStatus==='1'}>NRE</option>\n                                                <option value={4} hidden={newData.taxStatus==='0' || newData.taxStatus==='1'}>NRO</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Source of wealth</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.sourceofWealth} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"sourceofWealth\", e.target.value)}>\n                                                <option value={\"\"} hidden></option>\n                                                <option value={1} hidden={newData.taxStatus==='2'}>Savings</option>\n                                                <option value={2} hidden={newData.taxStatus==='2'}>Current</option>\n                                                <option value={3} hidden={newData.taxStatus==='0' || newData.taxStatus==='1'}>NRE</option>\n                                                <option value={4} hidden={newData.taxStatus==='0' || newData.taxStatus==='1'}>NRO</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Occupation</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.sourceofWealth} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"sourceofWealth\", e.target.value)}>\n                                                <option value={\"\"} hidden></option>\n                                                <option value={1} hidden={newData.taxStatus==='2'}>Savings</option>\n                                                <option value={2} hidden={newData.taxStatus==='2'}>Current</option>\n                                                <option value={3} hidden={newData.taxStatus==='0' || newData.taxStatus==='1'}>NRE</option>\n                                                <option value={4} hidden={newData.taxStatus==='0' || newData.taxStatus==='1'}>NRO</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                {/* <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">IFSC</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.ifsc} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"ifsc\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div> */}\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Are you a politically exposed person?</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.politicalExposure} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"politicalExposure\", e.target.value)}>\n                                                <option value={\"\"} hidden></option>\n                                                <option value={'Y'}>Yes</option>\n                                                <option value={'N'}>No</option>\n                                                <option value={'R'}>No, but i am related to a politicaly exposed person</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Are you a tax resident of any other country than India?</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.isTaxResident} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"isTaxResident\", e.target.value)}>\n                                                <option value={\"\"} hidden></option>\n                                                <option value={1}>Yes</option>\n                                                <option value={0}>No</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            <p className=\"card-description\"> Nominee details </p>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Nominee name</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.nomineeName} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"nomineeName\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Relation with you</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.nomineeRelation} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"nomineeRelation\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Date of birth</label>\n                                        <div className=\"col-sm-9\">\n                                            <DatePicker className=\"form-control w-100\" disabled={!isEditPressed}\n                                                selected={newData?.nomineeDOB}\n                                                onChange={(e) => editData(\"nomineeDOB\", e.target.value)}\n                                            />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                {/* <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Legal guardian name</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.guardianName} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"guardianName\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div> */}\n                            </div>\n                            <p className=\"card-description\"> Bank Info </p>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Account no.</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.accountNumber} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"accountNumber\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Account type</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\" value={newData?.accountType} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"accountType\", e.target.value)}>\n                                                <option value={\"\"} hidden></option>\n                                                <option value={1} hidden={newData.taxStatus==='2'}>Savings</option>\n                                                <option value={2} hidden={newData.taxStatus==='2'}>Current</option>\n                                                <option value={3} hidden={newData.taxStatus==='0' || newData.taxStatus==='1'}>NRE</option>\n                                                <option value={4} hidden={newData.taxStatus==='0' || newData.taxStatus==='1'}>NRO</option>\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">Bank name</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.bankName} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"bankName\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"text-muted col-sm-3 col-form-label\">IFSC</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={newData?.ifsc} disabled={!isEditPressed}\n                                                onChange={(e) => editData(\"ifsc\", e.target.value)} />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ClientInfo;","import React from \"react\";\nimport Highcharts from 'highcharts'\nimport HighchartsReact from \"highcharts-react-official\";\nimport { CurrencyFormat } from \"pages/admin/assets/styles/components/CurrencyFormat\";\nimport AdminServices from \"services/api/AdminServices\";\nimport AdminTabs from \"pages/admin/assets/styles/components/AdminTabs\";\nimport FundCard from \"pages/admin/assets/styles/components/FundCard\";\nimport NotFound from \"pages/admin/assets/styles/components/NotFound\";\nimport GoalIcon from \"pages/admin/assets/styles/components/GoalIcon\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { AiOutlineRight } from \"react-icons/ai\";\nimport TransactionCard from \"pages/admin/assets/styles/components/TransactionCard\";\nimport ordinal_suffix_of from \"pages/admin/assets/styles/components/Ordinal-suffix\";\nimport { toast } from \"react-toastify\";\nimport ClientInfo from \"./ClientInfo\";\nimport CacheService from \"services/api/CacheService\";\n\nexport default function ClientDetails(props) {\n\n    const [clientData, setClientData] = React.useState({})\n    const [portfolio, setPortfolio] = React.useState({});\n    const [portfolioPerformance, setPortfolioPerformance] = React.useState({});\n    const [assetAllocation, setAssetAllocation] = React.useState([]);\n    const [portfolioXIRR, setPortfolioXIRR] = React.useState({});\n    const [transactions, setTransactions] = React.useState([]);\n\n    const [loading, setLoading] = React.useState(true);\n    const [downloadingTransactionReport, setDownloadingTransactionReport] = React.useState(false);\n    const [downloadingPortfolioReport, setDownloadingPortfolioReport] = React.useState(false);\n\n    const CLIENT_ID = props.match.params.id\n\n    React.useEffect(() => {\n        loadData(CLIENT_ID);\n    }, []);\n\n    const loadData = async (id) => {\n        await CacheService.getClientData(id).then(res => setClientData(res))\n        await getPortfolio(id)\n        await getPortfolioXIRR(id)\n        await getPortfolioPerformance(id)\n        await getPortfolioAssetAllocation(id)\n        setLoading(false)\n        await getTransactions(id)\n    };\n    const getPortfolio = async (id) => {\n        let res = await AdminServices.getPortfolio(id).then(res => res);\n        if (res.type === true) {\n            const a = await JSON.parse(res.data);\n            let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n            console.log(\"Get portfolio API :\", aa)\n            setPortfolio(aa)\n        }\n    }\n\n    const getPortfolioXIRR = async (id) => {\n        let res = await AdminServices.getPortfolioXIRR(id).then(res => res);\n        if (res.type === true) {\n            const a = await JSON.parse(res.data);\n            const aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n            console.log(\"Get portfolio XIRR API :\", aa)\n            setPortfolioXIRR(aa)\n        }\n    }\n\n    const getPortfolioPerformance = async (id) => {\n        let res = await AdminServices.getPortfolioPerformance(id).then(res => res);\n        if (res.type === true) {\n            const a = await JSON.parse(res.data);\n            let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n            console.log(\"Get portfolioPerformance API :\", aa)\n            setPortfolioPerformance(aa)\n        }\n    }\n\n    const getPortfolioAssetAllocation = async (id) => {\n        let res = await AdminServices.getPortfolioAssetAllocation(id).then(res => res);\n        if (res.type === true) {\n            const aa = res.data;\n            console.log(\"Get portfolio asset allocation API :\", aa)\n            formatAssetAllo(aa)\n        }\n    }\n    const formatAssetAllo = (aa) => {\n        const assetClasses = [\n            {\n                name: 'Indian Equity',\n                color: 'var(--indianEquity)'\n            },\n            {\n                name: 'Gold',\n                color: 'var(--gold)'\n            },\n            {\n                name: 'US Equity',\n                color: 'var(--internationalEquity)'\n            },\n            {\n                name: 'Debt',\n                color: 'var(--debt)'\n            },\n            {\n                name: 'Cash',\n                color: 'var(--cash)'\n            },\n            {\n                name: 'Silver',\n                color: 'var(--silver)'\n            }\n        ];\n        let percentArr = []\n        const totalAllocation = aa.reduce((total, r) => total + r.AssetBalance, 0)\n        if (aa.length !== 0) {\n            assetClasses.forEach(a => {\n                const subTotal = aa.filter(f => f.AssetClass === a.name).reduce((total, r) => total + r.AssetBalance, 0) * 100 / totalAllocation\n                if (subTotal) {\n                    percentArr.push({ ...a, y: Number(subTotal.toFixed(2)) })\n                }\n            })\n        }\n        setAssetAllocation(percentArr)\n    }\n\n    const getTransactions = async (id) => {\n        let res = await AdminServices.getTransactions(id).then(res => res);\n        if (res.type === true) {\n            const aa = res.data;\n            console.log(\"Get transactions API :\", aa)\n            setTransactions(aa)\n        }\n    }\n\n    const getDayChange = (currentBalance, previousBalance) => {\n        let change = 0;\n        let changePercentage = 0;\n        if (previousBalance) {\n            change = currentBalance - previousBalance;\n            changePercentage = change * 100 / previousBalance;\n        }\n        return ([change.toFixed(1), changePercentage.toFixed(1)])\n    }\n\n    const onClickPortfolioReport = async () => {\n        if (downloadingPortfolioReport) {\n            return\n        }\n        setDownloadingPortfolioReport(true);\n        const res = await AdminServices.getPortfolioReport(CLIENT_ID).then(res => res)\n        console.log(res)\n        if (res.type) {\n            window.open(res.data.Report_URL)\n            setDownloadingPortfolioReport(false)\n        } else {\n            toast.error('Report not found')\n            setDownloadingPortfolioReport(false)\n        }\n    }\n\n    const onClickTransactionReport = async () => {\n        if (downloadingTransactionReport) {\n            return\n        }\n        setDownloadingTransactionReport(true);\n        const res = await AdminServices.getTransactionReport(CLIENT_ID).then(res => res)\n        console.log(res)\n        if (res.type) {\n            window.open(res.data.Report_URL)\n            setDownloadingTransactionReport(false)\n        } else {\n            toast.error('Report not found')\n            setDownloadingTransactionReport(false)\n        }\n    }\n\n    const Portfolio = () => {\n\n        const yourMintboxes = () => {\n            return (\n                <div className=\"preview-list\">\n                    {\n                        portfolio.MintboxConsolidated?.some(m => m.GoalId === 0 && m.MintboxBalance !== 0) ?\n                            portfolio.MintboxConsolidated?.filter(m => m.GoalId === 0 && m.MintboxBalance !== 0)?.map((data) => {\n                                const mintboxConstituents = portfolio?.MintboxETF?.filter(f => f.MintboxId === data.MintboxId && f.GoalId === 0 && f.MintboxETFBalance !== 0).map((item) => {\n                                    item.CurrentWeightage = item.MintboxETFBalance * 100 / data.MintboxBalance\n                                    return item\n                                })\n                                return <FundCard key={data.MintboxId}\n                                    onClick={() => props.history.push({\n                                        pathname: '/admin/portfolio/mintboxScreen',\n                                        state: { MINTBOXID: data.MintboxId, FUNDDATA: data }\n                                    })}\n                                    fundName={data.MintboxName}\n                                    mintboxId={data.MintboxId}\n                                    balance={data.MintboxBalance}\n                                    previousBalance={portfolio?.PrevMintboxConsolidated?.find(m => m.MintboxId === data.MintboxId)?.PrevMintboxBalance}\n                                    xirr={Object.values(portfolioXIRR?.MintboxXIRR || {}).find(m => m.MintboxId === data.MintboxId)?.XIRR}\n                                    goalName={data.GoalName}\n                                    mintboxConstituents={mintboxConstituents}\n                                />\n                            })\n                            :\n                            <NotFound type='mintbox' text=\"You don't have any investments in mintboxes\" buttonText='Invest in mintboxes' onClick={() => { props.history.push({ pathname: \"/admin/list\", state: { type: 3 } }) }} />}\n                </div>\n            )\n        }\n\n        const etf = () => {\n            return (\n                <div className=\"preview-list\">\n                    {\n                        portfolio.ETFConsolidated?.some(e => e.ETFBalance !== 0) ?\n                            portfolio.ETFConsolidated?.filter(f => f.ETFBalance !== 0)?.map((data) => (\n                                <FundCard key={data.FundCode}\n                                    onClick={() => props.history.push({\n                                        pathname: '/admin/portfolio/etfScreen',\n                                        state: { FUNDCODE: data.FundCode, MINTBOXID: 0, TYPE: 'ETFConsolidated', FUNDDATA: data }\n                                    })}\n                                    fundName={data.ETFName}\n                                    AMCName={data.AMCName}\n                                    balance={data.ETFBalance}\n                                    previousBalance={portfolio?.PrevETFConsolidated?.find(m => m.FundCode === data.FundCode)?.PrevETFBalance}\n                                    xirr={Object.values(portfolioXIRR?.ETFXIRR || {}).find(m => m.FundCode === data.FundCode)?.XIRR}\n                                    type={1}\n                                />\n                            ))\n                            :\n                            <NotFound text=\"No investments in ETFs\" buttonText='Invest in ETFs' onClick={() => { props.history.push({ pathname: \"/admin/list\", state: { type: 1 } }) }} />\n                    }\n                </div>\n            )\n        }\n\n        const funds = () => {\n            return (\n                <div className=\"preview-list\">\n                    {\n                        portfolio.FundsConsolidated?.some(f => f.MFBalance !== 0) ?\n                            portfolio.FundsConsolidated?.filter(f => f.MFBalance !== 0)?.map((data) => (\n                                <FundCard key={data.FundCode}\n                                    onClick={() => props.history.push({\n                                        pathname: '/admin/portfolio/fundScreen',\n                                        state: { FUNDCODE: data.FundCode, FOLIO: data.FolioNumber, FUNDDATA: data }\n                                    })}\n                                    fundName={data.SchemeName}\n                                    AMCName={data.AMCName}\n                                    balance={data.MFBalance}\n                                    previousBalance={portfolio?.PrevFundsConsolidated?.find(m => m.FundCode === data.FundCode)?.PrevMFBalance}\n                                    xirr={Object.values(portfolioXIRR?.MFXIRR || {}).find(m => m.FundCode === data.FundCode)?.XIRR}\n                                    type={2}\n                                />\n                            ))\n                            :\n                            <NotFound text=\"No investments in mutual funds\" buttonText='Invest in mutual funds' onClick={() => { props.history.push({ pathname: \"/admin/list\", state: { type: 2 } }) }} />\n                    }\n                </div>\n            );\n        }\n\n        const goals = () => {\n            return (\n                <div className=\"preview-list\" style={{ marginTop: \"2%\" }}>\n                    {\n                        portfolio.MintboxConsolidated?.some(m => m.GoalId !== 0 && m.MintboxBalance !== 0) ?\n                            portfolio.MintboxConsolidated?.filter(m => m.GoalId !== 0 && m.MintboxBalance !== 0).map((goal, i) => {\n                                const percentComplete = Number(goal.MintboxBalance * 100 / goal.GoalTargetCorpus)\n                                return (\n                                    <div key={i} style={{ padding: \"4%\", borderBottom: \"1px solid var(--border)\", display: \"flex\", gap: \"4%\" }} onClick={() => { props.history.push({ pathname: '/admin/portfolio/goalScreen', state: { GOALID: goal.GoalId, MINTBOXID: goal.MintboxId, GOALDATA: goal } }) }}>\n                                        {/* <MintboxIcon risk={goal.RiskLevel} width='40px' height='40px' /> */}\n                                        <GoalIcon type={goal.GoalType} width='40px' height='40px' />\n                                        <div style={{ flex: 1 }}>\n                                            <div className=\"header2dark\" style={{ display: 'flex', gap: \"4%\" }}>\n                                                <div style={{ flex: 1 }}>{goal.GoalName}</div>\n                                                <div>{CurrencyFormat(goal.MintboxBalance)} <AiOutlineRight size={14} className='secondaryGreen' style={{ marginLeft: '4px' }} /></div>\n                                            </div>\n                                            <ProgressBar now={percentComplete} label={<span>&nbsp;&nbsp;{percentComplete.toFixed(0)}% complete</span>}\n                                                className=\"progress-bar-goals\" style={{ margin: \"3% 0\" }} />\n                                            <div className=\"smallTextLight\" style={{ display: 'flex', gap: \"4%\" }}>\n                                                <div style={{ flex: 1 }}>Due {new Date(goal.GoalTargetDate).toLocaleDateString('en-us', { year: \"numeric\", month: \"short\" })}</div>\n                                                <div>Target: {CurrencyFormat(goal.GoalTargetCorpus, 'short')}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            })\n                            :\n                            <NotFound type=\"goal\" text=\"No active goal investments\" buttonText='Create a Goal' onClick={() => { props.history.push('/admin/Goals') }} />\n                    }\n                </div>\n            );\n        }\n\n        const growth = () => {\n            const options = {\n                chart: {\n                    backgroundColor: 'transparent'\n                },\n                boost: {\n                    useGPUTranslations: true,\n                    seriesThreshold: 5\n                },\n\n                title: {\n                    text: ''\n                },\n                exporting: {\n                    enabled: false\n                },\n                responsive: {\n                    rules: [{\n                        condition: {\n                            maxHeight: 100\n                        }\n                    }]\n                },\n                yAxis: {\n                    title: {\n                        text: ''\n                    },\n                    // min: Math.min.apply(Math, growthChartData.map(o => o[1])),\n                    startOnTick: true\n                    // visible: false\n                },\n\n                xAxis: [{\n                    type: 'datetime',\n                    dateTimeLabelFormats: {\n                        millisecond: '%H:%M:%S.%L',\n                        second: '%H:%M:%S',\n                        minute: '%H:%M',\n                        hour: '%H:%M',\n                        day: '%eth %b',\n                        week: '%eth %b',\n                        month: '%b \\'%y',\n                        year: '%Y'\n                    },\n\n                    labels: {\n                        step: 2\n                    },\n                    crosshair: {\n                        width: 1,\n                        color: 'grey'\n                    },\n                    // endOnTick: true,\n\n                    //  categories: [''],\n                    // visible: false\n                }\n                ],\n\n                legend: {\n                    enabled: false\n                },\n\n                plotOptions: {\n                    series: {\n                        label: {\n                            connectorAllowed: false\n                        },\n                    }\n                },\n                plotOptions: {\n                    series: {\n                        turboThreshold: 51000,//larger threshold or set to 0 to disable\n                        marker: {\n                            enabled: false\n                        }\n                    }\n\n                },\n                tooltip: {\n                    shared: true\n                },\n                credits: {\n                    enabled: false\n                },\n                scrollbar: {\n                    enabled: false\n                },\n                series: [{\n                    name: 'Balance',\n                    color: 'var(--darkGreen)',\n                    data: portfolioPerformance?.Portfolio?.map(d => [new Date(d[\"NavDateStr\"]).getTime(), d[\"Balance\"]])\n                }],\n                responsive: {\n                    rules: [{\n                        condition: {\n                            maxWidth: 400\n                        },\n                    }]\n                }\n            };\n            return (\n                <div style={{ padding: \"4%\" }}>\n                    <HighchartsReact\n                        highcharts={Highcharts}\n                        options={options}\n                    />\n\n                </div>)\n        }\n        const keyTitles = [\n            { title: \"Mintboxes\", view: yourMintboxes() },\n            { title: \"ETFs\", view: etf() },\n            { title: \"Mutual Funds\", view: funds() },\n            { title: \"Goals\", view: goals() },\n            { title: \"Growth\", view: growth() },\n        ];\n\n        return <AdminTabs tabsObject={keyTitles} />\n    }\n\n    const Asset = () => {\n        var options = {\n            chart: {\n                type: 'pie',\n                style: {\n                    fontFamily: 'DMSans-Regular',\n                    fontWeight: 'normal'\n                },\n                backgroundColor: \"transparent\",\n                plotBackgroundColor: null,\n                plotBorderWidth: null,\n                plotShadow: false,\n                height: 170\n            },\n            title: {\n                text: ''\n            },\n            scrollbar: {\n                enabled: false\n            },\n            exporting: {\n                enabled: false\n            },\n            legend: {\n                itemStyle: {\n                    color: '#ffffff',\n                    fontSize: 14,\n                    fontWeight: 'normal',\n                    fontFamily: 'DMSans-Regular'\n                }\n            },\n\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: false\n                    },\n\n                    showInLegend: true,\n                    size: 150,\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            tooltip: {\n                valueSuffix: '%'\n            },\n            legend: {\n                enabled: true,\n                align: 'right',\n                verticalAlign: 'top',\n                layout: 'vertical',\n                y: 30,\n                itemMarginBottom: 10\n            },\n            series: [\n                {\n                    data: assetAllocation\n                }\n            ]\n        };\n        return (\n            <div>\n                <HighchartsReact\n                    highcharts={Highcharts}\n                    options={options}\n                />\n            </div>)\n    }\n\n    const Transactions = () => {\n        const trx = (type) => {\n            return (\n                <div className=\"preview-list\">\n                    {\n                        type === 1 ?\n                            transactions.filter(t => t.FundType === 1 && t.MintboxId === 0).length ?\n                                transactions.filter(t => t.FundType === 1 && t.MintboxId === 0).reverse().map((trx, i) => {\n                                    return <TransactionCard trx={trx} i={i} type={1} key={i} />\n                                })\n                                :\n                                <NotFound text=\"No transactions\" />\n                            :\n                            type === 2 ?\n                                transactions.filter(t => t.FundType === 2).length ?\n                                    transactions.filter(t => t.FundType === 2).reverse().map((trx, i) => {\n                                        return <TransactionCard trx={trx} i={i} type={2} key={i} />\n                                    })\n                                    :\n                                    <NotFound text=\"No transactions\" />\n                                :\n                                type === 3 ?\n                                    transactions.filter(t => t.FundType === 1 && t.MintboxId !== 0).length ?\n                                        transactions.filter(t => t.FundType === 1 && t.MintboxId !== 0).reverse().map((trx, i) => {\n                                            return <TransactionCard trx={trx} i={i} type={1} />\n                                        })\n                                        :\n                                        <NotFound text=\"No transactions\" />\n                                    :\n                                    type === 4 ?\n                                        transactions.filter(t => t.GoalId !== 0).length ?\n                                            transactions.filter(t => t.GoalId !== 0).reverse().map((trx, i) => {\n                                                return <TransactionCard trx={trx} i={i} type={4} key={i} />\n                                            })\n                                            :\n                                            <NotFound text=\"No transactions\" type=\"goal\" />\n                                        :\n                                        <></>\n                    }\n                </div>\n            )\n        }\n        const keyTitles = [\n            { title: \"Mintboxes\", view: trx(3) },\n            { title: \"ETFs\", view: trx(1) },\n            { title: \"Mutual Funds\", view: trx(2) },\n            { title: \"Goals\", view: trx(4) }\n        ];\n\n        return <AdminTabs tabsObject={keyTitles} />\n    }\n\n    const ScheduledOrders = () => {\n\n        // const SIPs = (TYPE) => {\n        //     const [selectedScheduleItem, setSelectedScheduleOption] = React.useState({})\n\n        //     const [ORDERS, setORDERS] = React.useState([]);\n\n        //     React.useEffect(()=>{\n        //       if (TYPE === 3) {\n        //         setORDERS(portfolio.ScheduledOrders.filter(s => s.MintboxId !== 0 && s.GoalId === 0))\n        //       } else if (TYPE === 4) {\n        //           setORDERS(portfolio.ScheduledOrders.filter(s => s.GoalId !==))\n        //       } else {\n        //           setORDERS(portfolio.ScheduledOrders.filter(s => s.ToFundCode !== FUNDCODE))\n        //       }\n        //     },[])\n        //     return (\n        //         <div style={{ marginTop: '2%' }}>\n        //             {\n        //                 ORDERS?.length === 0 ?\n        //                     <NotFound text=\"You don't have any active SIPs\" buttonText='Start SIP now' />\n        //                     :\n        //                     ORDERS?.map((t, i) => {\n        //                         return (\n        //                             <>\n        //                                 <div key={i} style={{ padding: \"4%\", borderBottom: '1px solid ' + cssVar.getPropertyValue('--light') }}>\n        //                                     <div className='chip-sip' style={{ marginBottom: \"1%\" }}>\n        //                                         <BsDot size={24} color={t.IsDeleted === 1 ? cssVar.getPropertyValue('--red') : t.IsActive === 0 ? cssVar.getPropertyValue('--gold') : cssVar.getPropertyValue('--secondaryGreen')} style={{ marginLeft: \"-10px\" }} />\n        //                                         {t.IsDeleted === 1 ? 'Stopped' : t.IsActive === 0 ? 'Paused' : 'Active'}\n        //                                     </div>\n        //                                     <div style={{ display: \"flex\", alignItems: \"center\", gap: \"6px\" }}>\n        //                                         <div style={{ flex: 1 }}>\n        //                                             <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>\n        //                                                 {ordinal_suffix_of(t.OrderDate)} of every {t.Frequency === 3?'three':t.Frequency===6?'six':t.Frequency===1?'twelve':''} month(s)\n        //                                             </div>\n        //                                             <div className='header1dark'>{CurrencyFormat(t.Amount)}</div>\n        //                                         </div>\n        //                                         <div className='header2dark secondaryGreen'\n        //                                             onClick={() => {\n        //                                                 setSelectedScheduleOption(t)\n        //                                                 setShowModifySipModal(true);\n        //                                             }}>Modify <AiOutlineDown size={12} /></div>\n        //                                     </div>\n        //                                 </div>\n        //                             </>\n        //                         )\n        //                     })\n        //             }\n        //         </div>\n        //     )\n        // }\n\n        // const keyTitles = [\n        //   { title: \"Mintboxes\", view: SIPs(3) },\n        //   { title: \"ETFs\", view: SIPs(1) },\n        //   { title: \"Mutual Funds\", view: SIPs(2) },\n        //   { title: \"Goals\", view: SIPs(4) }\n        // ];\n\n        // return <AdminTabs tabsObject={keyTitles} />\n    }\n\n\n\n    const keyTitles = [\n        { title: \"Portfolio\", view: Portfolio() },\n        { title: \"Transactions\", view: Transactions() },\n        { title: \"Scheduled orders\", view: ScheduledOrders() },\n        { title: \"Client Info\", view: ClientInfo(clientData) },\n    ];\n\n\n    if (loading) {\n        return <div class=\"circle-loader\" style={{ marginTop: '30%' }} role=\"status\"></div>\n    }\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-9\">\n                                    <div className=\"d-flex align-items-center align-self-start\">\n                                        <h3 className=\"mb-0\">{CurrencyFormat(portfolio?.PortfolioConsolidated?.[0]?.PortfolioBalance)}</h3>\n                                        {/* <p className=\"text-success ml-2 mb-0 font-weight-medium\">+3.5%</p> */}\n                                    </div>\n                                </div>\n                                <div className=\"col-3\">\n                                    <div className=\"icon icon-box-success \">\n                                        <span className=\"mdi mdi-briefcase icon-item\"></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <h6 className=\"text-muted font-weight-normal\">Portfolio balance</h6>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-9\">\n                                    <div className=\"d-flex align-items-center align-self-start\">\n                                        <h3 className=\"mb-0\">{getDayChange(portfolio?.PortfolioConsolidated?.[0]?.PortfolioBalance, portfolio?.PrevPortfolioConsolidated?.[0]?.PrevPortfolioBalance)[0]}</h3>\n                                        {\n                                            getDayChange(portfolio?.PortfolioConsolidated?.[0]?.PortfolioBalance, portfolio?.PrevPortfolioConsolidated?.[0]?.PrevPortfolioBalance)[0] >= 0 ?\n                                                <p className=\"text-success ml-2 mb-0 font-weight-medium\">{getDayChange(portfolio?.PortfolioConsolidated?.[0]?.PortfolioBalance, portfolio?.PrevPortfolioConsolidated?.[0]?.PrevPortfolioBalance)[1]}%</p>\n                                                :\n                                                <p className=\"text-danger ml-2 mb-0 font-weight-medium\">{getDayChange(portfolio?.PortfolioConsolidated?.[0]?.PortfolioBalance, portfolio?.PrevPortfolioConsolidated?.[0]?.PrevPortfolioBalance)[1]}%</p>\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"col-3\">\n                                    {\n                                        getDayChange(portfolio?.PortfolioConsolidated?.[0]?.PortfolioBalance, portfolio?.PrevPortfolioConsolidated?.[0]?.PrevPortfolioBalance)[0] >= 0 ?\n                                            <div className=\"icon icon-box-success\">\n                                                <span className=\"mdi mdi-arrow-top-right icon-item\"></span>\n                                            </div>\n                                            :\n                                            <div className=\"icon icon-box-danger\">\n                                                <span className=\"mdi mdi-arrow-bottom-left icon-item\"></span>\n                                            </div>\n                                    }\n                                </div>\n                            </div>\n                            <h6 className=\"text-muted font-weight-normal\">Day change</h6>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-9\">\n                                    <div className=\"d-flex align-items-center align-self-start\">\n                                        <h3 className=\"mb-0\">{portfolioXIRR?.PortfolioXIRR?.XIRR}%</h3>\n                                        {/* <p className=\"text-success ml-2 mb-0 font-weight-medium\">+11%</p> */}\n                                    </div>\n                                </div>\n                                <div className=\"col-3\">\n                                    {\n                                        portfolioXIRR?.PortfolioXIRR?.XIRR >= 0 ?\n                                            <div className=\"icon icon-box-success\">\n                                                <span className=\"mdi mdi-arrow-top-right icon-item\"></span>\n                                            </div>\n                                            :\n                                            <div className=\"icon icon-box-danger\">\n                                                <span className=\"mdi mdi-arrow-bottom-left icon-item\"></span>\n                                            </div>\n                                    }\n                                </div>\n                            </div>\n                            <h6 className=\"text-muted font-weight-normal\">Annualized returns</h6>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-9\">\n                                    <div className=\"d-flex align-items-center align-self-start\">\n                                        <h3 className=\"mb-0\">MB{clientData?.Client?.[0]?.ClientId}</h3>\n                                        {/* <p className=\"text-danger ml-2 mb-0 font-weight-medium\">-2.4%</p> */}\n                                    </div>\n                                </div>\n                                <div className=\"col-3\">\n                                    <div className=\"icon icon-box-success\">\n                                        <span className=\"mdi mdi-account icon-item\"></span>\n                                    </div>\n                                </div>\n                            </div>\n                            <h6 className=\"text-muted font-weight-normal\">Client Id</h6>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n                            <h4 className=\"card-title\">Portfolio Allocation</h4>\n                            <div className=\"aligner-wrapper\">\n                                <Asset />\n                            </div>\n                            <div className=\"d-flex\" style={{ flexWrap: 'wrap', gap: '8px' }}>\n                                <div className=\"bg-gray-dark d-flex py-3 px-4 px-md-3 px-xl-4 rounded mt-3 flex-grow\"\n                                    style={{ flex: 1, gap: '8px', minWidth: '220px' }}>\n                                    {\n                                        downloadingPortfolioReport ?\n                                            <div class=\"circle-loader\" role=\"status\" style={{ height: '20px', width: '20px', margin: 'auto' }}></div>\n                                            :\n                                            <>\n                                                <div className=\"flex-grow\" onClick={() => onClickPortfolioReport()}>\n                                                    <h6 className=\"mb-1\" style={{ whiteSpace: 'nowrap' }}>Portfolio report</h6>\n                                                    <p className=\"text-muted mb-0\">Download</p>\n                                                </div>\n                                                <div className=\"align-self-center text-right\">\n                                                    <div className=\"icon icon-box-success\">\n                                                        <span className=\"mdi mdi-cloud-download icon-item\"></span>\n                                                    </div>\n                                                </div>\n                                            </>\n                                    }\n                                </div>\n                                <div className=\"bg-gray-dark d-flex py-3 px-4 px-md-3 px-xl-4 rounded mt-3 flex-grow\"\n                                    style={{ flex: 1, gap: '8px', minWidth: '220px' }}>\n                                    {\n                                        downloadingTransactionReport ?\n                                            <div class=\"circle-loader\" role=\"status\" style={{ height: '20px', width: '20px', margin: 'auto' }}></div>\n                                            :\n                                            <>\n                                                <div className=\"flex-grow\" onClick={() => onClickTransactionReport()}>\n                                                    <h6 className=\"mb-1\" style={{ whiteSpace: 'nowrap' }}>Transaction report</h6>\n                                                    <p className=\"text-muted mb-0\">Download</p>\n                                                </div>\n                                                <div className=\"align-self-center text-right\">\n                                                    <div className=\"icon icon-box-success\">\n                                                        <span className=\"mdi mdi-cloud-download icon-item\"></span>\n                                                    </div>\n                                                </div>\n                                            </>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"d-flex flex-row justify-content-between\">\n                                <h4 className=\"card-title mb-1\">User Details</h4>\n                                {/* <p className=\"text-muted mb-1\">Your data status</p> */}\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"preview-list\">\n                                        <div className=\"preview-item border-bottom\">\n                                            <div className=\"preview-thumbnail\">\n                                                <div className=\"preview-icon bg-secondary\">\n                                                    <i className=\"mdi mdi-account-card-details\"></i>\n                                                </div>\n                                            </div>\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\n                                                <div className=\"flex-grow\">\n                                                    <h6 className=\"preview-subject\">{clientData?.Client?.[0]?.DisplayName}</h6>\n                                                    <p className=\"text-muted mb-0\">Display name</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"preview-item border-bottom\">\n                                            <div className=\"preview-thumbnail\">\n                                                <div className=\"preview-icon bg-info\">\n                                                    <i className=\"mdi mdi-cellphone\"></i>\n                                                </div>\n                                            </div>\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\n                                                <div className=\"flex-grow\">\n                                                    <h6 className=\"preview-subject\">{clientData?.Client?.[0]?.MobileNumber}</h6>\n                                                    <p className=\"text-muted mb-0\">Mobile number</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"preview-item border-bottom\">\n                                            <div className=\"preview-thumbnail\">\n                                                <div className=\"preview-icon bg-danger\">\n                                                    <i className=\"mdi mdi-email-open\"></i>\n                                                </div>\n                                            </div>\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\n                                                <div className=\"flex-grow\">\n                                                    <h6 className=\"preview-subject\">{clientData?.Client?.[0]?.Email}</h6>\n                                                    <p className=\"text-muted mb-0\">Email</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/* <div className=\"preview-item border-bottom\">\n                                            <div className=\"preview-thumbnail\">\n                                                <div className=\"preview-icon bg-warning\">\n                                                    <i className=\"mdi mdi-format-text\"></i>\n                                                </div>\n                                            </div>\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\n                                                <div className=\"flex-grow\">\n                                                    <h6 className=\"preview-subject\">{clientData?.Client?.[0]?.TaxStatus}</h6>\n                                                    <p className=\"text-muted mb-0\">Tax status</p>\n                                                </div>\n                                            </div>\n                                        </div> */}\n                                        <div className=\"preview-item border-bottom\">\n                                            <div className=\"preview-thumbnail\">\n                                                <div className=\"preview-icon bg-success\">\n                                                    <i className=\"mdi mdi-account-switch\"></i>\n                                                </div>\n                                            </div>\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\n                                                <div className=\"flex-grow\">\n                                                    <h6 className=\"preview-subject\">{clientData?.SmallcaseInfo?.[0]?.Broker}</h6>\n                                                    <p className=\"text-muted mb-0\">Broker</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/* <div className=\"preview-item\">\n                                            <div className=\"preview-thumbnail\">\n                                                <div className=\"preview-icon bg-warning\">\n                                                    <i className=\"mdi mdi-account-check\"></i>\n                                                </div>\n                                            </div>\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\n                                                <div className=\"flex-grow\">\n                                                    <h6 className=\"preview-subject\">Anurag</h6>\n                                                    <p className=\"text-muted mb-0\">IFA</p>\n                                                </div>\n                                            </div>\n                                        </div> */}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <AdminTabs tabsObject={keyTitles} type=\"out\" />\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction MintboxIcon({id,height,width}) {\n  return(\n    Number(id) > 20?\n    <img src={`https://d3etfstcuyoos5.cloudfront.net/app-images/imgs/mintbox_boxLogo.webp`} style={{ height, width}}/>\n    :\n    <img src={`https://d3etfstcuyoos5.cloudfront.net/app-images/imgs/MintboxIcon${id}.webp`} style={{ height, width}}/>\n  )\n}\n\nexport default React.memo(MintboxIcon)"],"names":["tabsObject","type","React","activeKey","setActiveKey","className","Tabs","onSelect","k","map","t","i","Tab","eventKey","title","view","fundName","mintboxId","AMCName","balance","previousBalance","xirr","mintboxConstituents","viewConstituents","setViewConstituents","change","changePercentage","AMCIcon","amcName","height","width","MintboxIcon","id","style","color","size","verticalAlign","CurrencyFormat","toFixed","marginBottom","RedGreenText","text","value","onClick","marginLeft","ConstituentsTable","fundConstituents","buttonText","margin","textAlign","src","alt","marginTop","GoalIcon","goal","icon","goalType","undefined","find","g","display","border","padding","borderRadius","backgroundColor","trx","GoalName","ETFName","fontSize","MintboxName","TransactionType","Date","TradeDate","toDateString","whiteSpace","Amount","Units","clientData","isEditPressed","setOriginalData","newData","setNewData","Client","TaxStatus","d","IsProfileComplete","clientId","ClientId","pan","PAN","taxStatus","displayName","DisplayName","clientName","ClientName","gender","Gender","dateOfBirth","DateofBirth","mobileNumber","MobileNumber","guardianPAN","GuardianPAN","guardianName","GuardianName","guardianDOB","GuardianDOB","panFileId","PANFileId","signFileId","BankFileId","address1","Addresses","Address1","address2","Address2","pincode","Pincode","city","City","state","State","countryId","CountryId","annualIncomeSlab","Fatcas","AnnualIncome","sourceofWealth","SourceofWealth","occupation","OccupationId","politicalExposure","PoliticalExposure","isTaxResident","TaxResident","nomineeName","Nominees","Name","nomineeRelation","Relation","nomineeDOB","nomineeGuardianName","bankId","BankInfo","BankId","bankName","BankName","accountType","AccountType","accountNumber","AccountNumber","ifsc","IFSC","bankFileId","console","log","editData","key","Form","disabled","onChange","e","target","hidden","selected","ClientDetails","props","setClientData","portfolio","setPortfolio","portfolioPerformance","setPortfolioPerformance","assetAllocation","setAssetAllocation","portfolioXIRR","setPortfolioXIRR","transactions","setTransactions","loading","setLoading","downloadingTransactionReport","setDownloadingTransactionReport","downloadingPortfolioReport","setDownloadingPortfolioReport","CLIENT_ID","match","params","loadData","CacheService","then","res","getPortfolio","getPortfolioXIRR","getPortfolioPerformance","getPortfolioAssetAllocation","getTransactions","a","AdminServices","JSON","parse","data","aa","reduce","f","formatAssetAllo","percentArr","totalAllocation","total","r","AssetBalance","length","name","forEach","subTotal","filter","AssetClass","push","y","Number","getDayChange","currentBalance","onClickPortfolioReport","window","open","Report_URL","toast","onClickTransactionReport","Asset","options","chart","fontFamily","fontWeight","plotBackgroundColor","plotBorderWidth","plotShadow","scrollbar","enabled","exporting","legend","itemStyle","plotOptions","pie","allowPointSelect","cursor","dataLabels","showInLegend","credits","tooltip","valueSuffix","align","layout","itemMarginBottom","highcharts","Highcharts","keyTitles","MintboxConsolidated","some","m","GoalId","MintboxBalance","MintboxETF","MintboxId","MintboxETFBalance","item","CurrentWeightage","history","pathname","MINTBOXID","FUNDDATA","PrevMintboxConsolidated","PrevMintboxBalance","Object","values","MintboxXIRR","XIRR","goalName","yourMintboxes","ETFConsolidated","ETFBalance","FUNDCODE","FundCode","TYPE","PrevETFConsolidated","PrevETFBalance","ETFXIRR","etf","FundsConsolidated","MFBalance","FOLIO","FolioNumber","SchemeName","PrevFundsConsolidated","PrevMFBalance","MFXIRR","funds","percentComplete","GoalTargetCorpus","borderBottom","gap","GOALID","GOALDATA","GoalType","flex","ProgressBar","now","label","GoalTargetDate","toLocaleDateString","year","month","goals","boost","useGPUTranslations","seriesThreshold","responsive","rules","condition","maxHeight","yAxis","startOnTick","xAxis","dateTimeLabelFormats","millisecond","second","minute","hour","day","week","labels","step","crosshair","series","connectorAllowed","turboThreshold","marker","shared","Portfolio","getTime","maxWidth","growth","FundType","reverse","Transactions","ScheduledOrders","ClientInfo","class","role","PortfolioConsolidated","PortfolioBalance","PrevPortfolioConsolidated","PrevPortfolioBalance","PortfolioXIRR","flexDirection","justifyContent","flexWrap","minWidth","Email","SmallcaseInfo","Broker"],"sourceRoot":""}
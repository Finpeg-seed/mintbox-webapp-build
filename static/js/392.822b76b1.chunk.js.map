{"version":3,"file":"static/js/392.822b76b1.chunk.js","mappings":"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","sources":["pages/admin/app/shared/components/DateFormatter.js","pages/admin/app/shared/components/DataCustomizer.js","pages/admin/app/automation/Automation.js"],"sourcesContent":["function formatDate(d, skip = \"\", seperator = \" \") {\n    var date = \"\";\n    try {\n        date = new Date(d.replace(\" \", \"T\"));\n    } catch (error) {\n        date = new Date(d);\n    }\n\n    if (isNaN(date.getTime())) {\n        return d;\n    }\n    else {\n\n        var month = new Array();\n        month[0] = \"Jan\";\n        month[1] = \"Feb\";\n        month[2] = \"Mar\";\n        month[3] = \"Apr\";\n        month[4] = \"May\";\n        month[5] = \"Jun\";\n        month[6] = \"Jul\";\n        month[7] = \"Aug\";\n        month[8] = \"Sep\";\n        month[9] = \"Oct\";\n        month[10] = \"Nov\";\n        month[11] = \"Dec\";\n\n        let day = date.getDate();\n\n        if (day < 10) {\n            day = \"0\" + day;\n        }\n\n        var finalStr = skip === \"date\" ? month[date.getMonth()] + seperator + date.getFullYear() : day + seperator + month[date.getMonth()] + seperator + date.getFullYear()\n        return finalStr;\n    }\n\n}\n\nfunction convertAnyDatetoDDMMYYYY(d, type = \"\") {\n    var month = new Array();\n    month[0] = \"Jan\";\n    month[1] = \"Feb\";\n    month[2] = \"Mar\";\n    month[3] = \"Apr\";\n    month[4] = \"May\";\n    month[5] = \"Jun\";\n    month[6] = \"Jul\";\n    month[7] = \"Aug\";\n    month[8] = \"Sep\";\n    month[9] = \"Oct\";\n    month[10] = \"Nov\";\n    month[11] = \"Dec\";\n\n\n\n    if (type === \"monStr\") {\n        var mon = \"\"\n        for (let i = 0; i < d.length; i++) {\n            if (d[i].match(/[a-zA-Z]/)) {\n                mon += d[i];\n            }\n        }\n        var monN = month.indexOf(mon) + 1\n        d = d.replace(mon, monN.toString().length === 1 ? 0 + monN.toString() : monN.toString()).replaceAll(\" \", \"-\")\n        return d\n    } else if (type === \"yyyymmdd\") {\n        var today = new Date(d)\n        const yyyy = today.getFullYear();\n        let mm = today.getMonth() + 1; // Months start at 0!\n        let dd = today.getDate();\n\n        if (dd < 10) dd = '0' + dd;\n        if (mm < 10) mm = '0' + mm;\n\n        return yyyy + '-' + mm + '-' + dd;\n    } else {\n        var today = new Date(d)\n        const yyyy = today.getFullYear();\n        let mm = today.getMonth() + 1; // Months start at 0!\n        let dd = today.getDate();\n\n        if (dd < 10) dd = '0' + dd;\n        if (mm < 10) mm = '0' + mm;\n\n        return dd + '-' + mm + '-' + yyyy;\n\n    }\n\n\n}\n\n\nfunction formatDateddmmyyyy(today) {\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n\n    return dd + '/' + mm + '/' + yyyy;\n}\n\nfunction formatDateyyyymmdd(today) {\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n\n    return yyyy + '-' + mm + '-' + dd;\n}\n\nfunction addMonths(date, months) {\n    var a = date\n    a.setMonth(a.getMonth() + months);\n    return a;\n}\n\nfunction addWeek(date, week) {\n    var a = date\n    a.setDate(a.getDate() + (week * 7));\n    return a;\n}\n\nfunction getNextSIPDate(sipDate, freq = 1) {\n    if (freq !== 1) {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), freq)).toISOString())\n    }\n    const date1 = new Date();\n    const date2 = new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 1));\n    const diffTime = Math.abs(date2 - date1);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays < 27) {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 2)).toISOString())\n    } else {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 1)).toISOString())\n    }\n}\n\nfunction monthDiff(d1, d2) {\n    var months;\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\n    months -= d1.getMonth();\n    months += d2.getMonth();\n    return months <= 0 ? 0 : months;\n}\n\nexport { formatDate, formatDateddmmyyyy, formatDateyyyymmdd, getNextSIPDate, convertAnyDatetoDDMMYYYY,monthDiff,addMonths ,addWeek}","function changeObjKey(dataf, keys, newKeys) {\n  var data = JSON.parse(JSON.stringify(dataf))\n  for (const [key, value] of Object.entries(data)) {\n    keys.map((a, i) => {\n      if (value[keys[i]] !== undefined) {\n        value[newKeys[i]] = value[keys[i]];\n      }\n      // Assign new key\n    })\n  }\n  return data;\n}\n\nfunction removeUnwantedKeyVal(dataf, keys) {\n  var data = JSON.parse(JSON.stringify(dataf))\n  data.forEach(function (v) {\n    var keysF = Object.keys(v)\n    keysF.map((key) => {\n      if (!keys.includes(key)) {\n        delete v[key]\n      }\n    })\n  });\n  return data;\n}\n\nexport { changeObjKey, removeUnwantedKeyVal };\n\n","import React from 'react';\nimport axios from 'axios';\nimport { addMonths, addWeek, convertAnyDatetoDDMMYYYY, formatDate, formatDateddmmyyyy, formatDateyyyymmdd, monthDiff } from '../shared/components/DateFormatter';\nimport { Form } from 'react-bootstrap';\nimport { changeObjKey, removeUnwantedKeyVal } from '../shared/components/DataCustomizer';\nimport AdminServicesPY from 'services/api/AdminServicesPY';\nimport AdminServices from 'services/api/AdminServices';\nimport { toast } from 'react-toastify';\n\n\nexport default function Automation({ navigation, props }) {\n    const [start_value, setStartValue] = React.useState(null);\n    const [end_value, setEndValue] = React.useState(null);\n    const [vr_start_value, setVRStartValue] = React.useState(null);\n    const [vr_end_value, setVREndValue] = React.useState(null);\n    const [vrTable, setvrTable] = React.useState(-1);\n\n    const [benchDate, setbenchDate] = React.useState(null);\n    const [benchId, setbenchId] = React.useState(null);\n    const [benchPrice, setbenchPrice] = React.useState(0);\n\n\n    var allbenchmarks = [\n        {\n            \"UID\": 54,\n            \"BenchmarkName\": \"BSE Sensex 100\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"BSE100\"\n        },\n        {\n            \"UID\": 34,\n            \"BenchmarkName\": \"BSE SENSEX Index TRI\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"SENSEX\"\n        },\n        {\n            \"UID\": 13,\n            \"BenchmarkName\": \"BSE Sensex Next 50 TRI\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"SPBSN5IP\"\n        },\n        {\n            \"UID\": 39,\n            \"BenchmarkName\": \"Domestic Price of Gold\",\n            \"Origin\": \"\",\n            \"Ticker\": \"\"\n        },\n        {\n            \"UID\": 50,\n            \"BenchmarkName\": \"Domestic Price of Silver\",\n            \"Origin\": \"\",\n            \"Ticker\": \"\"\n        },\n        {\n            \"UID\": 26,\n            \"BenchmarkName\": \"Hang Seng HSI GR USD\",\n            \"Origin\": \"PY\",\n            \"Ticker\": \"\"\n        },\n        {\n            \"UID\": 2,\n            \"BenchmarkName\": \"Hang Seng TECH Total Return Index\",\n            \"Origin\": \"PY\",\n            \"Ticker\": \"\"\n        },\n        {\n            \"UID\": 37,\n            \"BenchmarkName\": \"Nasdaq 100 TRI\",\n            \"Origin\": \"PY\",\n            \"Ticker\": \"\"\n        },\n        {\n            \"UID\": 20,\n            \"BenchmarkName\": \"Nasdaq Q-50 Total Return Index\",\n            \"Origin\": \"PY\",\n            \"Ticker\": \"\"\n        },\n        {\n            \"UID\": 52,\n            \"BenchmarkName\": \"Nifty 10 yr Benchmark G-Sec Index\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty GS 10Yr\"\n        },\n        {\n            \"UID\": 30,\n            \"BenchmarkName\": \"Nifty 100 Low Volatility 30 Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY100 LOW VOLATILITY 30\"\n        },\n        {\n            \"UID\": 24,\n            \"BenchmarkName\": \"Nifty 100 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY 100\"\n        },\n        {\n            \"UID\": 8,\n            \"BenchmarkName\": \"Nifty 200 Momentum 30 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY200 MOMENTUM 30\"\n        },\n        {\n            \"UID\": 23,\n            \"BenchmarkName\": \"Nifty 200 Quality 30 Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY200 QUALITY 30\"\n        },\n        {\n            \"UID\": 41,\n            \"BenchmarkName\": \"Nifty 5 yr Benchmark G-Sec Index\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"NIFTY 5YR BENCHMARK G-SEC INDEX\"\n        },\n        {\n            \"UID\": 25,\n            \"BenchmarkName\": \"NIFTY 50 Equal Weight Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY50 EQUAL WEIGHT\"\n        },\n        {\n            \"UID\": 7,\n            \"BenchmarkName\": \"Nifty 50 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY 50\"\n        },\n        {\n            \"UID\": 48,\n            \"BenchmarkName\": \"NIFTY 8-13 yr G-Sec Index\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty GS 8 13Yr\"\n        },\n        {\n            \"UID\": 40,\n            \"BenchmarkName\": \"Nifty AAA Bond Plus SDL Apr 2026 50:50 Index\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty AAA Bond Plus SDL Apr 2026 50:50 Index\"\n        },\n        {\n            \"UID\": 11,\n            \"BenchmarkName\": \"NIFTY Alpha 50 Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY ALPHA 50\"\n        },\n        {\n            \"UID\": 15,\n            \"BenchmarkName\": \"Nifty Alpha Low-Volatility 30 Index TRI\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"NIFTY ALPHALOWVOL\"\n        },\n        {\n            \"UID\": 17,\n            \"BenchmarkName\": \"Nifty Auto Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY AUTO\"\n        },\n        {\n            \"UID\": 31,\n            \"BenchmarkName\": \"Nifty Bank TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY BANK\"\n        },\n        {\n            \"UID\": 42,\n            \"BenchmarkName\": \"Nifty BHARAT Bond Index - April 2023\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty BHARAT Bond Index - April 2023\"\n        },\n        {\n            \"UID\": 49,\n            \"BenchmarkName\": \"Nifty BHARAT Bond Index - April 2025\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty BHARAT Bond Index - April 2025\"\n        },\n        {\n            \"UID\": 46,\n            \"BenchmarkName\": \"Nifty BHARAT Bond Index - April 2030\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty BHARAT Bond Index - April 2030\"\n        },\n        {\n            \"UID\": 51,\n            \"BenchmarkName\": \"Nifty BHARAT Bond Index - April 2031\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty BHARAT Bond Index - April 2031\"\n        },\n        {\n            \"UID\": 53,\n            \"BenchmarkName\": \"Nifty BHARAT Bond Index - April 2032\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"NIFTY BHARAT BOND INDEX - APRIL 2032\"\n        },\n        {\n            \"UID\": 57,\n            \"BenchmarkName\": \"Nifty CPSE Bond Plus SDL Sep 2024 50:50 Index\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty CPSE Bond Plus SDL Sep 2024 50:50 Index\"\n        },\n        {\n            \"UID\": 61,\n            \"BenchmarkName\": \"Nifty CPSE Bond Plus SDL Sep 2026\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"Nifty CPSE Bond Plus SDL Sep 2026 50:50 Index\"\n        },\n        {\n            \"UID\": 38,\n            \"BenchmarkName\": \"Nifty CPSE TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY CPSE\"\n        },\n        {\n            \"UID\": 55,\n            \"BenchmarkName\": \"NIFTY Div Opps 50 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY DIVIDEND OPPORTUNITIES 50\"\n        },\n        {\n            \"UID\": 33,\n            \"BenchmarkName\": \"Nifty Financial Services Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY FINANCIAL SERVICES\"\n        },\n        {\n            \"UID\": 43,\n            \"BenchmarkName\": \"Nifty FMCG Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY FMCG\"\n        },\n        {\n            \"UID\": 36,\n            \"BenchmarkName\": \"Nifty Healthcare Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY HEALTHCARE\"\n        },\n        {\n            \"UID\": 27,\n            \"BenchmarkName\": \"NIFTY India Consumption Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY INDIA CONSUMPTION\"\n        },\n        {\n            \"UID\": 60,\n            \"BenchmarkName\": \"Nifty India Digital TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY INDIA DIGITAL\"\n        },\n        {\n            \"UID\": 29,\n            \"BenchmarkName\": \"Nifty India Manufacturing Total Return Index\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY INDIA MANUFACTURING\"\n        },\n        {\n            \"UID\": 21,\n            \"BenchmarkName\": \"Nifty Infra TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY INFRASTRUCTURE\"\n        },\n        {\n            \"UID\": 1,\n            \"BenchmarkName\": \"Nifty IT Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY IT\"\n        },\n        {\n            \"UID\": 12,\n            \"BenchmarkName\": \"Nifty Midcap 100 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY MIDCAP 100\"\n        },\n        {\n            \"UID\": 19,\n            \"BenchmarkName\": \"Nifty Midcap 150 Quality 50 Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY MIDCAP150 QUALITY 50\"\n        },\n        {\n            \"UID\": 9,\n            \"BenchmarkName\": \"Nifty Midcap 150 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY MIDCAP 150\"\n        },\n        {\n            \"UID\": 56,\n            \"BenchmarkName\": \"NIFTY Midcap 50 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY MIDCAP 50\"\n        },\n        {\n            \"UID\": 14,\n            \"BenchmarkName\": \"Nifty Next 50 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY NEXT 50\"\n        },\n        {\n            \"UID\": 58,\n            \"BenchmarkName\": \"Nifty Pharma TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY PHARMA\"\n        },\n        {\n            \"UID\": 28,\n            \"BenchmarkName\": \"Nifty Private Bank Index TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY PRIVATE BANK\"\n        },\n        {\n            \"UID\": 4,\n            \"BenchmarkName\": \"Nifty PSU Bank TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY PSU BANK\"\n        },\n        {\n            \"UID\": 22,\n            \"BenchmarkName\": \"NIFTY100 ESG SECTOR LEADERS TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY100 ESG SECTOR LEADERS\"\n        },\n        {\n            \"UID\": 44,\n            \"BenchmarkName\": \"Nifty1D rate index\",\n            \"Origin\": \"NSE-Bond\",\n            \"Ticker\": \"NIFTY 1D RATE INDEX\"\n        },\n        {\n            \"UID\": 10,\n            \"BenchmarkName\": \"Nifty50 Value 20 TRI\",\n            \"Origin\": \"NSE\",\n            \"Ticker\": \"NIFTY50 VALUE 20\"\n        },\n        {\n            \"UID\": 3,\n            \"BenchmarkName\": \"NYSE FANG+ Total Return Index\",\n            \"Origin\": \"PY\",\n            \"Ticker\": \"\"\n        },\n        {\n            \"UID\": 5,\n            \"BenchmarkName\": \"S&P 500 Top 50 Total Return Index\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"SPBSS5IP\"\n        },\n        {\n            \"UID\": 32,\n            \"BenchmarkName\": \"S&P BSE 500 index TRI\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"BSE500\"\n        },\n        {\n            \"UID\": 35,\n            \"BenchmarkName\": \"S&P BSE BHARAT 22 Index TRI\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"SPBSB2IP\"\n        },\n        {\n            \"UID\": 45,\n            \"BenchmarkName\": \"S&P BSE Liquid Rate Index\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"SPICBLOT\"\n        },\n        {\n            \"UID\": 59,\n            \"BenchmarkName\": \"S&P BSE Low Volatility TRI\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"SPBSLVIP\"\n        },\n        {\n            \"UID\": 18,\n            \"BenchmarkName\": \"S&P BSE Midcap Select Index TRI\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"SPBMDSIP\"\n        },\n        {\n            \"UID\": 6,\n            \"BenchmarkName\": \"Shariah TRI\",\n            \"Origin\": \"BSE\",\n            \"Ticker\": \"SPBSE5S\"\n        }\n    ]\n\n\n    var vrtables = [\n        \"nav\",\n        \"amc_aum\",\n        \"avg_aum\",\n        \"benchmark_returns_annual\",\n        \"benchmark_returns_monthly\",\n        \"benchmark_returns_quarterly\",\n        \"benchmark_returns_weekly\",\n        \"cat_avg_return_latest\",\n        \"fund_aum\",\n        \"fund_holdings_debtstated_latest\",\n        \"fund_holdings_sectorwise_imputed_latest\",\n        \"schemes_rollingreturns\",\n        \"fund_return_latest\",\n        \"fund_returns_annual\",\n        \"fund_returns_monthly\",\n        \"fund_returns_quarterly\",\n        \"fund_returns_weekly\",\n        \"fund_sip_returns\",\n        \"amc_external_codes\",\n        \"colour_code\",\n        \"companies\",\n        \"countries\",\n        \"credit_rating_score\",\n        \"deleted_logs\",\n        \"entity_auditor\",\n        \"entity_custodian\",\n        \"entity_groups\",\n        \"entity_transfer_agent\",\n        \"event_list\",\n        \"frequency\",\n        \"fund_categories\",\n        \"fund_daily_update\",\n        \"fund_dividends\",\n        \"fund_events\",\n        \"fund_jn_index\",\n        \"fund_load_age\",\n        \"fund_load_cdsc_latest\",\n        \"fund_rights\",\n        \"fund_split\",\n        \"fund_status\",\n        \"fund_type\",\n        \"holdings_averagecreditrating\",\n        \"instrument\",\n        \"rta_codes\",\n        \"sebi_categories\",\n        \"sector\",\n        \"segregated_fund_mapping\",\n        \"segregated_scheme_mapping\",\n        \"transaction_status_master\",\n        \"amcs\",\n        \"category_cutoff_timings\",\n        \"composition\",\n        \"fund_expense\",\n        \"fund_holdings_maturity_latest\",\n        \"fund_holdings_rating\",\n        \"fund_load_latest\",\n        \"fund_manager_latest\",\n        \"fund_plans\",\n        \"fund_rank_latest\",\n        \"holdings_detailed\",\n        \"indices\",\n        \"industry\",\n        \"person\",\n        \"schemes_sebicategory\",\n        \"schemewise_taxation\",\n        \"sip_swp_stp_details\",\n        \"stats_variables\",\n        \"subplan_isin\",\n        \"subplans\",\n        \"turnover\"\n    ]\n\n    const toCsv = function (table) {\n        // Query all rows\n        var doc = new DOMParser().parseFromString(table, \"text/xml\");\n\n        const rows = doc.querySelectorAll('tr');\n\n        return [].slice\n            .call(rows)\n            .map(function (row) {\n                // Query all cells\n                const cells = row.querySelectorAll('th,td');\n                return [].slice\n                    .call(cells)\n                    .map(function (cell) {\n                        return cell.textContent;\n                    })\n                    .join(',');\n            })\n            .join('\\n');\n    };\n\n    const download = function (text, fileName) {\n        const link = document.createElement('a');\n        link.setAttribute('href', `data:text/csv;charset=utf-8,${encodeURIComponent(text)}`);\n        link.setAttribute('download', fileName);\n\n        link.style.display = 'none';\n        document.body.appendChild(link);\n\n        link.click();\n\n        document.body.removeChild(link);\n        console.log(fileName)\n    };\n\n    const getETDATAfromNSE = async () => {\n\n        var etfs = [\"NETFDIVOPP\", \"UTISXN50\", \"IDBIGOLD\", \"MOM100\", \"AXISTECETF\", \"HEALTHY\", \"TECH\", \"CPSEETF\", \"SBIETFIT\", \"ICICINV20\", \"ICICIPHARM\", \"NETFNV20\", \"AXISCETF\", \"HNGSNGBEES\", \"NETFMID150\", \"ICICICONSU\", \"ICICIB22\", \"NETFIT\", \"NETFNIF100\", \"AXISGOLD\", \"KOTAKIT\", \"NETFLTGILT\", \"KOTAKNV20\", \"HDFCNIFETF\", \"IVZINGOLD\", \"SBIETFQLTY\", \"NETFCONSUM\", \"NETFPHARMA\", \"ICICIMCAP\", \"MAMFGETF\", \"ICICITECH\", \"ICICI500\", \"UTINIFTETF\", \"SETFNN50\", \"KOTAKGOLD\", \"UTINEXT50\", \"GOLDSHARE\", \"KOTAKNIFTY\", \"ICICINIFTY\", \"KOTAKPSUBK\", \"KOTAKALPHA\", \"NETFAUTO\", \"EBBETF0425\", \"ICICINXT50\", \"ABSLNN50ET\", \"SETFGOLD\", \"MANXT50\", \"EBBETF0431\", \"SHARIABEES\", \"GOLDBEES\", \"ICICIGOLD\", \"NIFTYBEES\", \"IDFNIFTYET\", \"QGOLDHALF\", \"SETFNIF50\", \"SBIETFCON\", \"DSPN50ETF\", \"DSPQ50ETF\", \"MAN50ETF\", \"EBBETF0423\", \"INFRABEES\", \"NETFSILVER\", \"HDFCMFGETF\", \"MAFANG\", \"ICICIM150\", \"BBETF0432\", \"ICICINF100\", \"ICICIFMCG\", \"NETFSDL26\", \"ICICILOVOL\", \"LICNFNHGP\", \"LIQUIDBEES\", \"ICICILIQ\", \"SETF10GILT\", \"LIQUIDETF\", \"MOM50\", \"ICICISILVE\", \"NCPSESDL24\", \"HDFCSENETF\", \"EBBETF0430\", \"BSLNIFTY\", \"PSUBNKBEES\", \"MOGSEC\", \"JUNIORBEES\", \"NETFGILT5Y\", \"DSPNEWETF\", \"MOMOMENTUM\", \"LICNETFSEN\", \"QNIFTY\", \"ICICIALPLV\", \"SILVER\", \"NETF\", \"MAESGETF\", \"LICNETFGSC\", \"LICNETFN50\", \"AXISBPSETF\", \"BSLSENETFG\", \"AXISNIFTY\", \"ICICIBANKN\", \"ICICISENSX\", \"MASPTOP50\", \"EBANK\", \"BSLGOLDETF\", \"ABSLBANETF\", \"ICICIAUTO\", \"KOTAKBKETF\", \"AXISBNKETF\", \"MAFSETF\", \"BANKBEES\", \"HBANKETF\", \"UTISENSETF\", \"SETFNIFBK\", \"MONQ50\", \"ICICIBANKP\", \"IBMFNIFTY\", \"IVZINNIFTY\", \"AXISHCETF\", \"NPBET\", \"UTIBANKETF\", \"SBIETFPB\", \"MAHKTECH\", \"MON100\"]\n\n        try {\n            const promises = etfs.map(async (etf, index) => {\n                new Promise(resolve =>\n                    setTimeout(() => {\n                        var config = {\n                            method: 'get',\n                            url: `https://www1.nseindia.com/live_market/dynaContent/live_watch/get_quote/getHistoricalData.jsp?symbol=${etf}&series=EQ&fromDate=${formatDate(start_value, \"\", \"-\")}&toDate=${formatDate(end_value, \"\", \"-\")}&hiddDwnld=false&datePeriod=`\n                        };\n\n                        axios(config)\n                            .then(function (response) {\n                                var tableData = JSON.stringify(response.data)\n                                tableData = tableData.substring(tableData.indexOf(\"<table>\"), tableData.lastIndexOf(\"</table>\") + 8).replace(/\\s/g, \"\").replaceAll(',', \"\");\n                                download(toCsv(tableData), etf + \".csv\")\n                            })\n                            .catch(function (error) {\n                                console.log(error);\n                            });\n\n                        resolve()\n                    }, 1000 * etfs.length - 1000 * index)\n                )\n            })\n            Promise.all(promises).then(() => console.log('done'))\n\n        } catch (error) {\n            console.log(\"SELECT A DATE\")\n        }\n\n\n\n\n\n\n\n    }\n\n\n    function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\n        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\n        var CSV = 'sep=,' + '\\r\\n\\n';\n        if (ShowLabel) {\n            var row = \"\";\n            for (var index in arrData[0]) {\n                row += index + ',';\n            }\n            row = row.slice(0, -1);\n            CSV += row + '\\r\\n';\n        }\n\n        for (var i = 0; i < arrData.length; i++) {\n            var row = \"\";\n            for (var index in arrData[i]) {\n                row += '\"' + arrData[i][index] + '\",';\n            }\n\n            row.slice(0, row.length - 1);\n            CSV += row + '\\r\\n';\n        }\n\n        if (CSV == '') {\n            alert(\"Invalid data\");\n            return;\n        }\n\n        var fileName = \"\";\n        fileName += ReportTitle.replace(/ /g, \"_\");\n\n        var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);\n\n        var link = document.createElement(\"a\");\n        link.href = uri;\n\n        link.style = \"visibility:hidden\";\n        link.download = fileName + \".csv\";\n\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n\n    const getIndexDATAfromNSE = async () => {\n\n        var etfs = [\"Nifty 50\", \"Nifty IT\", \"Nifty Next 50\", \"Nifty50 USD\", \"Nifty Bank\", \"NIFTY MIDCAP 100\", \"Nifty 500\", \"Nifty 100\", \"Nifty Midcap 50\", \"Nifty Realty\", \"Nifty Infra\", \"INDIA VIX\", \"Nifty Energy\", \"Nifty FMCG\", \"Nifty MNC\", \"Nifty Pharma\", \"Nifty PSE\", \"Nifty PSU Bank\", \"Nifty Serv Sector\", \"NIFTY SMLCAP 100\", \"Nifty 200\", \"Nifty Auto\", \"Nifty Media\", \"Nifty Metal\", \"Nifty Div Opps 50\", \"Nifty Commodities\", \"Nifty Consumption\", \"Nifty Fin Service\", \"Nifty50 Div Point\", \"Nifty100 Liq 15\", \"Nifty CPSE\", \"Nifty GrowSect 15\", \"Nifty50 TR 2x Lev\", \"Nifty50 PR 2x Lev\", \"Nifty50 TR 1x Inv\", \"Nifty50 PR 1x Inv\", \"Nifty50 Value 20\", \"NIFTY100 Qualty30\", \"Nifty Mid Liq 15\", \"Nifty Pvt Bank\", \"Nifty GS 8 13Yr\", \"Nifty GS 10Yr\", \"Nifty GS 10Yr Cln\", \"Nifty GS 4 8Yr\", \"Nifty GS 11 15Yr\", \"Nifty GS 15YrPlus\", \"Nifty GS Compsite\", \"NIFTY50 EQL Wgt\", \"NIFTY100 EQL Wgt\", \"NIFTY100 LowVol30\", \"NIFTY Alpha 50\", \"NIFTY Midcap 150\", \"NIFTY Smallcap 50\", \"NIFTY Smallcap 250\", \"NIFTY MidSmallcap 400\", \"NIFTY200 Quality 30\", \"Nifty FinSrv25 50\", \"NIFTY AlphaLowVol\", \"Nifty200Momentm30\", \"Nifty100ESGSecLdr\", \"NIFTY HEALTHCARE\", \"NIFTY CONSR DURBL\", \"NIFTY OIL AND GAS\", \"NIFTY500 MULTICAP\", \"NIFTY LARGEMID250\"]\n\n\n\n\n\n        const promises = etfs.map(async (etf, index) => {\n\n            new Promise(resolve =>\n                setTimeout(() => {\n                    var data = JSON.stringify({\n                        \"name\": etf,\n                        \"startDate\": formatDate(start_value, \"\", \"-\"),\n                        \"endDate\": formatDate(end_value, \"\", \"-\")\n                    });\n\n                    var config = {\n                        method: 'post',\n                        url: 'https://www.niftyindices.com/Backpage.aspx/getHistoricaldatatabletoString',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        data: data\n                    };\n\n\n                    axios(config)\n                        .then(function (response) {\n                            var tableData = JSON.parse(response.data.d)\n                            JSONToCSVConvertor(tableData, etf, true)\n                            // tableData = tableData.substring(tableData.indexOf(\"<table>\"), tableData.lastIndexOf(\"</table>\") + 8).replace(/\\s/g, \"\").replaceAll(',', \"\");\n                            // download(toCsv(tableData), etf + \".csv\")\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        });\n\n                    resolve()\n                }, 1000 * etfs.length - 1000 * index)\n            )\n\n\n        })\n        Promise.all(promises).then(() => console.log('done'))\n\n\n\n\n\n\n    }\n\n\n    const getIndexNAVDATAfromNSE = async () => {\n\n        var etfs = [\"Nifty 50\", \"Nifty IT\", \"Nifty Next 50\", \"Nifty50 USD\", \"Nifty Bank\", \"NIFTY MIDCAP 100\", \"Nifty 500\", \"Nifty 100\", \"Nifty Midcap 50\", \"Nifty Realty\", \"Nifty Infra\", \"INDIA VIX\", \"Nifty Energy\", \"Nifty FMCG\", \"Nifty MNC\", \"Nifty Pharma\", \"Nifty PSE\", \"Nifty PSU Bank\", \"Nifty Serv Sector\", \"NIFTY SMLCAP 100\", \"Nifty 200\", \"Nifty Auto\", \"Nifty Media\", \"Nifty Metal\", \"Nifty Div Opps 50\", \"Nifty Commodities\", \"Nifty Consumption\", \"Nifty Fin Service\", \"Nifty50 Div Point\", \"Nifty100 Liq 15\", \"Nifty CPSE\", \"Nifty GrowSect 15\", \"Nifty50 TR 2x Lev\", \"Nifty50 PR 2x Lev\", \"Nifty50 TR 1x Inv\", \"Nifty50 PR 1x Inv\", \"Nifty50 Value 20\", \"NIFTY100 Qualty30\", \"Nifty Mid Liq 15\", \"Nifty Pvt Bank\", \"Nifty GS 8 13Yr\", \"Nifty GS 10Yr\", \"Nifty GS 10Yr Cln\", \"Nifty GS 4 8Yr\", \"Nifty GS 11 15Yr\", \"Nifty GS 15YrPlus\", \"Nifty GS Compsite\", \"NIFTY50 EQL Wgt\", \"NIFTY100 EQL Wgt\", \"NIFTY100 LowVol30\", \"NIFTY Alpha 50\", \"NIFTY Midcap 150\", \"NIFTY Smallcap 50\", \"NIFTY Smallcap 250\", \"NIFTY MidSmallcap 400\", \"NIFTY200 Quality 30\", \"Nifty FinSrv25 50\", \"NIFTY AlphaLowVol\", \"Nifty200Momentm30\", \"Nifty100ESGSecLdr\", \"NIFTY HEALTHCARE\", \"NIFTY CONSR DURBL\", \"NIFTY OIL AND GAS\", \"NIFTY500 MULTICAP\", \"NIFTY LARGEMID250\"]\n\n\n\n\n\n        const promises = etfs.map(async (etf, index) => {\n\n            new Promise(resolve =>\n                setTimeout(() => {\n                    var data = JSON.stringify({\n                        \"name\": etf,\n                        \"startDate\": formatDate(start_value, \"\", \"-\"),\n                        \"endDate\": formatDate(end_value, \"\", \"-\")\n                    });\n\n                    var config = {\n                        method: 'post',\n                        url: 'https://www.niftyindices.com/Backpage.aspx/getTotalReturnIndexString',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        data: data\n                    };\n\n\n                    axios(config)\n                        .then(function (response) {\n                            var tableData = JSON.parse(response.data.d)\n                            JSONToCSVConvertor(tableData, etf, true)\n                            // tableData = tableData.substring(tableData.indexOf(\"<table>\"), tableData.lastIndexOf(\"</table>\") + 8).replace(/\\s/g, \"\").replaceAll(',', \"\");\n                            // download(toCsv(tableData), etf + \".csv\")\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        });\n\n                    resolve()\n                }, 1000 * etfs.length - 1000 * index)\n            )\n\n\n        })\n        Promise.all(promises).then(() => console.log('done'))\n\n\n\n\n\n\n    }\n\n\n\n    async function make_bse_api_call(etf) {\n\n        let numWeeks = 2.5;\n        let now = new Date();\n        now.setDate(now.getDate() - numWeeks * 7);\n        var startDate = new Date(now.setDate(now.getDate() - numWeeks * 7))\n        var endDate = new Date()\n        var config = {\n            method: 'get',\n            url: `https://api.bseindia.com/BseIndiaAPI/api/IndexArchDaily/w?fmdt=${formatDateddmmyyyy(startDate).replaceAll(\"/\", \"%2F\")}&index=${etf.Ticker}&period=D&todt=${formatDateddmmyyyy(endDate).replaceAll(\"/\", \"%2F\")}`,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        return await axios(config)\n            .then(function (response) {\n                var tableData = response.data.Table.reverse()\n                if (tableData[0]) {\n                    tableData = tableData.map((item, index) => {\n                        return {\n                            ...item,\n                            ...etf\n                        }\n\n                    });\n                    console.log(tableData);\n\n                    return tableData\n                }\n            })\n            .catch(function (error) {\n                console.log(error)\n                return []\n\n            });\n    }\n\n    async function bseTRI(etfs) {\n        let result;\n        var finalData = []\n\n        for (let i = 0; i < etfs.length; i++) {\n            result = await make_bse_api_call(etfs[i]);\n            Array.prototype.push.apply(finalData, result)\n        }\n        return finalData;\n    }\n\n\n    function GetCSVCells(row, separator) {\n        return row.split(separator);\n    }\n\n    async function make_nse_api_call(etf) {\n\n        let numWeeks = 3;\n        let now = new Date();\n        now.setDate(now.getDate() - numWeeks * 7);\n        var startDate = now.setDate(now.getDate() - numWeeks * 7)\n        var endDate = new Date()\n\n        // var data = JSON.stringify({\n        //     \"name\": etf.Ticker,\n        //     \"startDate\": formatDateddmmyyyy(startDate, \"\", \"-\"),\n        //     \"endDate\": formatDateddmmyyyy(endDate, \"\", \"-\")\n        // });\n\n        var finalArr = []\n\n\n        var config = {\n            method: 'GET',\n            url: `https://www1.nseindia.com/products/dynaContent/equities/indices/total_returnindices.jsp?indexType=${etf.Ticker}&fromDate=${convertAnyDatetoDDMMYYYY(startDate)}&toDate=${convertAnyDatetoDDMMYYYY(endDate)}`,\n        };\n        // var config = {\n        //     method: 'GET',\n        //     url: `https://www1.nseindia.com/products/dynaContent/equities/indices/total_returnindices.jsp?indexType=${etf.Ticker}&fromDate=01-06-2022&toDate=06-07-2022`,\n        // };\n        return await axios(config)\n            .then(function (response) {\n                var doc = new DOMParser().parseFromString(response.data, \"text/html\")\n                console.log(doc.getElementById(\"csvContentDiv\").innerHTML)\n                var rows = doc.getElementById(\"csvContentDiv\").innerText.split(\":\");\n\n                if (rows.length > 0) {\n                    var firstRowCells = GetCSVCells(rows[0], \",\");\n\n                    var dataArray = new Array();\n                    for (var i = 1; i < rows.length - 1; i++) {\n                        var cells = GetCSVCells(rows[i], \",\");\n                        var obj = {};\n                        for (var j = 0; j < cells.length; j++) {\n                            obj[firstRowCells[j].replaceAll(\"\\\"\", \"\")] = cells[j].replaceAll(\"\\\"\", \"\");\n                        }\n                        dataArray.push({ ...obj, ...etf });\n                    }\n\n                    console.log(dataArray);\n                    return (dataArray)\n                }\n            })\n            .catch(function (error) {\n                return []\n            });\n    }\n\n    async function nseTRI(etfs) {\n        let result;\n        var finalData = []\n\n        for (let i = 0; i < etfs.length; i++) {\n            result = await make_nse_api_call(etfs[i]);\n            Array.prototype.push.apply(finalData, result)\n        }\n        return finalData;\n    }\n\n\n    async function make_nse_api_call_bond(etf) {\n\n        let numWeeks = 5;\n        let now = new Date();\n        now.setDate(now.getDate() - numWeeks * 7);\n        var startDate = now.setDate(now.getDate() - numWeeks * 7)\n        var endDate = new Date()\n\n        var data = JSON.stringify({\n            \"name\": etf.Ticker,\n            \"startDate\": formatDate(startDate, \"\", \"-\"),\n            \"endDate\": formatDate(endDate, \"\", \"-\")\n        });\n        var config = {\n            method: 'post',\n            url: 'https://www.niftyindices.com/Backpage.aspx/getHistoricaldatatabletoString',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            data: data\n        };\n        return await axios(config)\n            .then(function (response) {\n                var tableData = JSON.parse(response.data.d)\n                if (tableData[0]) {\n                    tableData = tableData.map((item, index) => {\n                        return {\n                            ...item,\n                            ...etf\n                        }\n\n                    });\n                    console.log(\"ASDDSADSAD\", tableData)\n                    return tableData\n                    // return ({\n                    //     ...tableData[0],\n                    //     ...etf\n                    // })\n                }\n            })\n            .catch(function (error) {\n                console.log(error)\n                return []\n            });\n    }\n\n    async function nseTRI_bond(etfs) {\n        let result;\n        var finalData = []\n\n        for (let i = 0; i < etfs.length; i++) {\n            result = await make_nse_api_call_bond(etfs[i]);\n            Array.prototype.push.apply(finalData, result)\n        }\n        return finalData;\n    }\n\n\n\n\n\n    const updateDailyBenchmarkData = async () => {\n\n        try {\n            // nse\n            var nse = allbenchmarks.map((a) => {\n                if (a.Origin === \"NSE\") {\n                    return a\n                }\n            })\n            nse = nse.filter(e => e)\n            console.log(nse)\n            let result = await nseTRI(nse);\n            console.log(result)\n            result = result.filter(value => Object.keys(value).length !== 0);\n            console.log(result)\n\n            result = changeObjKey(result, [\"UID\", \"Total Returns Index\", \"Date\"], [\"benchmarkId\", \"price\", \"Date\"])\n\n            result = removeUnwantedKeyVal(result, [\"benchmarkId\", \"price\", \"Date\"])\n            result = result.map((v) => {\n                return {\n                    ...v,\n                    price: Number(v.price),\n                    Date: convertAnyDatetoDDMMYYYY(v.Date, \"monStr\")\n                }\n            })\n            console.log(result.length)\n\n            // nse-bond\n            var nse_bond = allbenchmarks.map((a) => {\n                if (a.Origin === \"NSE-Bond\") {\n                    return a\n                }\n            })\n            nse_bond = nse_bond.filter(e => e)\n            let result_bond = await nseTRI_bond(nse_bond);\n            result_bond = result_bond.filter(e => e)\n            result_bond = changeObjKey(result_bond, [\"UID\", \"CLOSE\", \"HistoricalDate\"], [\"benchmarkId\", \"price\", \"Date\"])\n            result_bond = removeUnwantedKeyVal(result_bond, [\"benchmarkId\", \"price\", \"Date\"])\n            result_bond = result_bond.map((v) => {\n                return {\n                    ...v,\n                    price: Number(v.price),\n                    Date: convertAnyDatetoDDMMYYYY(v.Date, \"monStr\")\n                }\n            })\n            console.log(result_bond.length)\n\n            // bse\n            var bse = allbenchmarks.map((a) => {\n                if (a.Origin === \"BSE\") {\n                    return a\n                }\n            })\n            bse = bse.filter(e => e)\n            let bresult = await bseTRI(bse);\n            bresult = bresult.filter(e => e)\n            bresult = changeObjKey(bresult, [\"UID\", \"I_close\", \"tdate\"], [\"benchmarkId\", \"price\", \"Date\"])\n            bresult = removeUnwantedKeyVal(bresult, [\"benchmarkId\", \"price\", \"Date\"])\n            bresult = bresult.map((v) => {\n                return {\n                    ...v,\n                    price: Number(v.price),\n                    Date: convertAnyDatetoDDMMYYYY(v.Date)\n                }\n            })\n            console.log(bresult.length)\n\n            // international\n            var internationalBench = await AdminServicesPY.updateBenchmarksNAV().then((res) => { return res.data })\n            internationalBench = JSON.parse(internationalBench).map((v) => {\n                return {\n                    ...v,\n                    benchmarkId: v.BenchmarkId,\n                    price: Number(v.Price),\n                    Date: convertAnyDatetoDDMMYYYY(v.Date)\n                }\n            })\n            internationalBench = removeUnwantedKeyVal(internationalBench, [\"benchmarkId\", \"price\", \"Date\"])\n            console.log(internationalBench.length)\n\n\n            var finalRes = result.concat(bresult).concat(result_bond).concat(internationalBench)\n            finalRes = changeObjKey(finalRes, [\"Date\"], [\"date\"])\n            finalRes = removeUnwantedKeyVal(finalRes, [\"benchmarkId\", \"price\", \"date\"])\n\n\n\n            console.log(finalRes)\n\n            var res = await AdminServices.updateBenchmarkTRI(finalRes).then((res) => { return res.data })\n            console.log(res)\n            if (res === \"success\") {\n                toast.success(\"Updated\");\n            } else {\n                toast.error(\"Error ocurred!!\");\n            }\n        } catch (error) {\n            console.log(error)\n            toast.error(\"Error ocurred!!\", error);\n        }\n\n\n    }\n\n\n    const updateIndividualDailyBenchmarkData = async () => {\n\n        try {\n            // custom\n\n            if (benchDate !== null && benchId !== null && benchPrice !== null && benchId !== -1) {\n                var finalRes = [\n                    {\n                        \"benchmarkId\": benchId,\n                        \"date\": convertAnyDatetoDDMMYYYY(benchDate),\n                        \"price\": benchPrice\n                    }\n                ]\n                console.log(finalRes)\n                var res = await AdminServices.updateBenchmarkTRI(finalRes).then((res) => { return res.data })\n                console.log(res)\n                if (res === \"success\") {\n                    toast.success(\"Updated\");\n                } else {\n                    toast.error(\"Error ocurred!!\");\n                }\n            } else {\n                toast.error(\"Fill form\");\n            }\n\n\n        } catch (error) {\n            toast.error(\"Error ocurred!!\", error);\n        }\n\n\n    }\n\n\n    const updateIndividualVRTable = async () => {\n\n        try {\n\n            if (vr_start_value !== null && vr_end_value !== null && vrTable !== -1) {\n                // var diff = monthDiff(new Date(vr_start_value), new Date(vr_end_value))\n                var a = new Date(vr_start_value);\n                var b = new Date(vr_end_value);\n                var diff = Math.round((b - a) / 604800000);\n                console.log(diff)\n                let stD = vr_start_value\n                for (let index = 0; index < diff; index++) {\n\n                    var nextD = formatDateyyyymmdd(addWeek(new Date(stD), 1))\n                    console.log(`?changed-after=${stD}-00-00-00&changed-before=${nextD}-00-00-00&output=data`)\n                    // var finalRes = {\n                    //     \"query\": `?changed-after=${stD}-00-00-00&changed-before=${nextD}-00-00-00&output=data`,\n                    //     \"tables\": [\n                    //         vrTable\n                    //     ]\n                    // }\n                    // console.log(finalRes)\n                    // var res = await AdminServices.updateVRTable(finalRes).then((res) => { return res })\n                    // console.log(res)\n                    // if (res.data.mailStatus === \"success\") {\n                    //     console.log(\"DONE\", index + 1, \"=>>\", finalRes.query)\n                    //     toast.success(\"Updated\");\n                    // } else {\n                    //     toast.error(\"Error ocurred!!\");\n                    // }\n\n                    // setTimeout(function () {\n                    //     console.log('new query starting up after 3s ....');\n                    // }, 10000);\n\n                    stD = nextD\n\n\n\n                }\n            } else {\n                toast.error(\"Fill form\");\n            }\n\n\n\n\n        } catch (error) {\n            console.log(error)\n            toast.error(\"Error ocurred!!\", error);\n        }\n\n\n    }\n\n\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-md-7 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Download CSV</h4>\n                            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                                <div className=\"App\">\n                                    <Form.Label>*Start date:</Form.Label>\n                                    <Form.Control onChange={(newValue) => {\n                                        setStartValue(newValue);\n                                    }} type=\"date\"></Form.Control>\n                                </div>\n                                <span className='mx-2' />\n                                <div className=\"App\">\n                                    <Form.Label>*End date:</Form.Label>\n                                    <Form.Control onChange={(newValue) => {\n                                        setEndValue(newValue);\n                                    }} type=\"date\"></Form.Control>\n                                </div>\n                            </div>\n                            <br></br>\n                            <button type=\"button\" className=\"btn btn-primary btn-fw\" onClick={() => getETDATAfromNSE()}>Download All etfs closing data</button>\n                            <span className='mx-2' />\n                            <button type=\"button\" className=\"btn btn-primary btn-fw\" onClick={() => getIndexDATAfromNSE()}>Download All Index closing data</button>\n                            <span className='mx-2' />\n                            <button type=\"button\" className=\"btn btn-primary btn-fw\" onClick={() => getIndexNAVDATAfromNSE()}>Download All Benchmark NAV data</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-5 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Update all benchmarks TRI</h4>\n                            <button type=\"button\" className=\"btn btn-primary btn-fw\" onClick={() => updateDailyBenchmarkData()}>Trigger</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-md-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Update individual Benchmark TRI</h4>\n                            <Form.Group className=\"row\">\n                                <label className=\"col-sm-2 col-form-label\">Benchmark</label>\n                                <div className=\"col-sm-6\">\n                                    <select className=\"form-control\" onChange={(e) => {\n                                        setbenchId(Number(e.target.value))\n                                    }}>\n                                        <option key={\"-1\"} value={-1}>Select benchmark..</option>\n                                        {allbenchmarks.filter((bench) => bench.Origin === \"\").map((bench) => {\n                                            return <option key={bench.UID} value={bench.UID}>{bench.BenchmarkName}</option>\n                                        })}\n                                    </select>\n                                </div>\n                            </Form.Group>\n                            <div className=\"row\">\n                                <label className=\"col-sm-2 col-form-label\">Date</label>\n                                <div className=\"col-sm-4\"> <Form.Control onChange={(newValue) => {\n                                    setbenchDate(newValue.target.value);\n                                }} type=\"date\" />\n                                </div>\n                                <label className=\"col-sm-2 col-form-label\">*Price</label>\n                                <div className=\"col-sm-4\">\n                                    <Form.Control value={benchPrice} onChange={(text) => {\n                                        var inputVal = text.target.value.replace(/[^0-9\\s]/g, '');\n                                        inputVal = inputVal.replace(\" \", \"\")\n                                        if (inputVal.length > 1) {\n                                            inputVal = inputVal.replace(/^0+/, '')\n                                        }\n                                        setbenchPrice(Number(inputVal));\n                                    }} type=\"tel\" />\n                                </div>\n                            </div>\n                            <br></br>\n                            <button type=\"button\" className=\"btn btn-primary btn-fw\" onClick={() => updateIndividualDailyBenchmarkData()}>Update</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6 grid-margin stretch-card\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">Update individual Value research tables</h4>\n                            <Form.Group className=\"row\">\n                                <label className=\"col-sm-2 col-form-label\">Table</label>\n                                <div className=\"col-sm-6\">\n                                    <select className=\"form-control\" onChange={(e) => {\n                                        setvrTable(e.target.value)\n                                    }}>\n                                        <option key={\"-1\"} value={-1}>Select table..</option>\n                                        {vrtables.map((bench) => {\n                                            return <option key={bench} value={bench}>{bench}</option>\n                                        })}\n                                    </select>\n                                </div>\n                            </Form.Group>\n                            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                                <div className=\"App\">\n                                    <Form.Label>*Start date:</Form.Label>\n                                    <Form.Control onChange={(newValue) => {\n                                        setVRStartValue(newValue.target.value);\n                                    }} type=\"date\"></Form.Control>\n                                </div>\n                                <span className='mx-2' />\n                                <div className=\"App\">\n                                    <Form.Label>*End date:</Form.Label>\n                                    <Form.Control onChange={(newValue) => {\n                                        setVREndValue(newValue.target.value);\n                                    }} type=\"date\"></Form.Control>\n                                </div>\n                            </div>\n                            <br></br>\n                            <button type=\"button\" className=\"btn btn-primary btn-fw\" onClick={() => updateIndividualVRTable()}>Update</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n"],"names":["formatDate","d","skip","seperator","date","Date","replace","error","isNaN","getTime","month","Array","day","getDate","finalStr","getMonth","getFullYear","convertAnyDatetoDDMMYYYY","type","mon","i","length","match","monN","indexOf","toString","replaceAll","yyyy","today","mm","dd","formatDateddmmyyyy","formatDateyyyymmdd","addWeek","week","a","setDate","changeObjKey","dataf","keys","newKeys","data","JSON","parse","stringify","value","map","undefined","Object","entries","removeUnwantedKeyVal","forEach","v","key","includes","Automation","navigation","props","React","start_value","setStartValue","end_value","setEndValue","vr_start_value","setVRStartValue","vr_end_value","setVREndValue","vrTable","setvrTable","benchDate","setbenchDate","benchId","setbenchId","benchPrice","setbenchPrice","allbenchmarks","toCsv","table","rows","DOMParser","parseFromString","querySelectorAll","slice","call","row","cells","cell","textContent","join","download","text","fileName","link","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","console","log","getETDATAfromNSE","etfs","promises","etf","index","Promise","resolve","setTimeout","config","method","url","axios","then","response","tableData","substring","lastIndexOf","catch","all","JSONToCSVConvertor","JSONData","ReportTitle","ShowLabel","arrData","CSV","uri","escape","href","alert","getIndexDATAfromNSE","headers","getIndexNAVDATAfromNSE","make_bse_api_call","now","numWeeks","startDate","endDate","Ticker","Table","reverse","item","bseTRI","finalData","result","prototype","push","apply","GetCSVCells","separator","split","make_nse_api_call","doc","getElementById","innerHTML","innerText","firstRowCells","dataArray","obj","j","nseTRI","make_nse_api_call_bond","nseTRI_bond","updateDailyBenchmarkData","nse","Origin","filter","e","price","Number","nse_bond","result_bond","bse","bresult","AdminServicesPY","res","internationalBench","benchmarkId","BenchmarkId","Price","finalRes","concat","AdminServices","toast","updateIndividualDailyBenchmarkData","updateIndividualVRTable","b","diff","Math","round","stD","nextD","className","flexDirection","Form","onChange","newValue","onClick","target","bench","UID","BenchmarkName","inputVal"],"sourceRoot":""}
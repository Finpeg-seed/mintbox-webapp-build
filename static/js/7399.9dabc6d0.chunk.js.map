{"version":3,"file":"static/js/7399.9dabc6d0.chunk.js","mappings":"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","sources":["views/mobileView/screens/mintboxpro/BuildYourOwnMintbox/NameMintbox.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React from 'react'\nimport { toast } from \"react-toastify\";\nimport MainHeader from 'views/mobileView/components/molecules/Headers/MainHeader'\nimport cssVar from 'views/mobileView/styles'\nimport db from 'libs/db'\nimport AdminServices from 'services/api/AdminServices';\nimport { BsGraphUp } from 'react-icons/bs';\nimport Modal from 'react-bootstrap/Modal';\nimport { AiOutlineRight } from 'react-icons/ai';\nimport PerformanceChart from 'views/mobileView/components/molecules/Cards/PerformanceChart';\n\nconst NameMintbox = (props) => {\n\n    const [mintboxName, setMintboxName] = React.useState()\n    const [selectedETFs, setSelectedETFs] = React.useState([])\n    const [rebalanceFrequency, setRebalanceFrequency] = React.useState('')\n\n    const [user, setUser] = React.useState({});\n    const [showHistoricalModal, setShowHistoricalModal] = React.useState(false)\n\n    const minInv = props.location.state.minInv\n    React.useEffect(async () => {\n        await loadData();\n    }, []);\n\n    const loadData = async () => {\n        try {\n            await db.get(db.model.user).then((p) => {\n                setUser(p.userData);\n                console.log(\"user: \", p.userData)\n            });\n            await db.get(db.model.createMintbox).then((u) => {\n                if (u?.selectedETFs) {\n                    setSelectedETFs(u.selectedETFs);\n                }\n                if (u?.mintboxName) {\n                    setMintboxName(u.mintboxName || '')\n                }\n                if (u?.rebalanceFrequency) {\n                    setRebalanceFrequency(u.rebalanceFrequency)\n                }\n            })\n        } catch (error) {\n            toast.error(error);\n        }\n    };\n    const saveData = async (name) => {\n        const dataFinal = {\n            mintboxName: name\n        };\n        await db.get(db.model.createMintbox).then((u) => {\n            if (u) { Object.assign(u, dataFinal) }\n            else { u = dataFinal }\n            db.set(db.model.createMintbox,JSON.stringify(u));\n        })\n    }\n    \n    const onNextPress = async ({type}) => {\n        if (mintboxName?.length < 2) {\n            return\n        }\n        saveData(mintboxName)\n        const x = selectedETFs.map((fund) => {\n            return {\n                fundCode: fund.Symbol,\n                indexId: fund.IndexId,\n                assetId: fund.MintboxAssetId,\n                weightage: Number(fund.allocation),\n                CurrentWeightage: Number(fund.allocation)\n            }\n        })\n        const final = {\n            clientId: user.id,\n            name: mintboxName,\n            description: 'My custom mintbox',\n            risk: 1,\n            duration: 1,\n            minInvestment: minInv,\n            xirr: 0,\n            constituents: x,\n            rebalanceFrequency: rebalanceFrequency,\n            videoLink: \"\",\n            fee: \"0\"\n        }\n        console.log(\"CREATE MINTBOX API\", final)\n        let res = await AdminServices.createMintbox(final).then((res) => JSON.stringify(res));\n        res = await JSON.parse(res);\n        if (res.type === true) {\n            if (res.data.Result === 'Success') {\n                console.log(\"Mintbox created\", res.data)\n                if(type === 2){\n                    props.history.push({\n                        pathname: '/portfolio/confirm-invest',\n                        state: {\n                          fundData: { MintboxId: res.data.MintboxId, MintboxName: mintboxName,RiskLevel:1, MinSIPAmount: minInv, Constituents:x},\n                          type: 3\n                        }\n                    })\n                } else if(type===1){\n                    console.log(res.data)\n                    const data = {\n                        \"clientId\": user.id,\n                        \"fundType\": 3,\n                        \"fundCode\": res.data.MintboxId+'',\n                        \"isActive\": 1\n                    }\n                    let res2 = await AdminServices.updateWatchlist(data).then(res => res)\n                    if (res2.type) {\n                        toast.success(\"You are now tracking this mintbox\")\n                        props.history.push('/dashboard')\n                    }\n                }\n            }\n            else {\n                toast.error(res.data)\n            }\n        } else {\n            toast.error()\n        }\n    }\n    const Footer = () => {\n        return (\n            <>  \n                <div style={{ position: \"fixed\", bottom: '70px', width: \"100%\",backgroundColor: cssVar.getPropertyValue('--white'), textAlign: \"center\" }}>\n                    <div className=\"bodyTextDark secondaryGreen\" onClick={() => setShowHistoricalModal(true)} style={{ borderTop: \"1px solid \"+cssVar.getPropertyValue('--light'), padding: \"3% 4%\"}}>\n                        Historical performance <BsGraphUp size={14} style={{ margin: \"5px\" }} />\n                    </div>\n                    <div className=\"bodyTextLight\" style={{ borderTop: \"1px solid \"+cssVar.getPropertyValue('--light'), padding: \"2% 4%\"}}>\n                        Min investment <b style={{ color: \"#333333\" }}>₹ {Number(minInv).toFixed(2)}</b>\n                    </div>\n                </div>\n                <div className='footer' style={{ gap: '4%' }}>\n                    <div style={{ flex: 1}}>\n                        <div className='bodyTextDark'>\n                            Track this mintbox\n                        </div>\n                        <div className=\"header3dark secondaryGreen\"\n                            style={{opacity: mintboxName?.length >= 2 ? 1 : 0.4 }}\n                            onClick={()=>onNextPress({type:1})}>\n                            Add to watchlist <AiOutlineRight size={10} style={{marginTop:\"1%\"}}/>\n                        </div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <button\n                            className='solidButton'\n                            style={{ opacity: mintboxName?.length >= 2 ? 1 : 0.4 }}\n                            onClick={() => { onNextPress({type:2}) }}\n                        >\n                            Invest Now\n                        </button>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const HistoricalModal = () => {\n        return (\n            <Modal\n                className=\"bottom-drawer\"\n                show={showHistoricalModal}\n                onHide={() => setShowHistoricalModal(false)}\n                keyboard={false}\n            >\n                <Modal.Body style={{ maxHeight: \"80vh\", overflow: \"scroll\",padding:\"0\" }}>\n                    {/* <SipLumpChart etfs={selectedETFs} type={4} fundCode={1} /> */}\n                    <PerformanceChart etfs={selectedETFs} type={4} fundCode={1} rebalanceFreq={rebalanceFrequency===1?'Q':rebalanceFrequency===2? '6M': rebalanceFrequency === 3? 'Y': rebalanceFrequency===4? false: 'Q'}/>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"outlineButton\" onClick={() => setShowHistoricalModal(false)}>\n                        Close\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    return (\n        <div className='mainContainer'>\n            <MainHeader\n                header=\"Build your own mintbox\"\n                navigation={props.history}\n            />\n            <div className=\"dataContainer\" style={{ paddingTop:\"2%\" }}>\n                <div className='header1dark' style={{marginTop:\"4%\"}}>Woohoo! You just built a mintbox 🥁</div>\n                <div className='bodyTextDark' style={{ marginTop: \"4%\", fontSize:\"16px\"}}>What would you like to call it?</div>\n                <div style={{ marginTop: \"6%\" }}>\n                    <input\n                        className=\"normalInput\"\n                        type=\"text\" \n                        maxLength={20}\n                        placeholder=\"My wealth box\"\n                        id=\"Full-name\"\n                        value={mintboxName}\n                        onChange={e => setMintboxName(e.target.value)} \n                    />\n                </div>\n            </div>\n            <HistoricalModal />\n            <Footer />\n        </div>\n    )\n}\n\nexport default NameMintbox\n","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","React","mintboxName","setMintboxName","selectedETFs","setSelectedETFs","rebalanceFrequency","setRebalanceFrequency","user","setUser","showHistoricalModal","setShowHistoricalModal","minInv","location","state","loadData","db","then","p","userData","console","log","u","toast","saveData","name","dataFinal","Object","assign","JSON","stringify","onNextPress","type","length","x","map","fund","fundCode","Symbol","indexId","IndexId","assetId","MintboxAssetId","weightage","Number","allocation","CurrentWeightage","final","clientId","id","description","risk","duration","minInvestment","xirr","constituents","videoLink","fee","AdminServices","res","parse","data","Result","history","push","pathname","fundData","MintboxId","MintboxName","RiskLevel","MinSIPAmount","Constituents","Footer","style","position","bottom","width","backgroundColor","cssVar","textAlign","className","onClick","borderTop","padding","size","margin","color","toFixed","gap","flex","opacity","marginTop","HistoricalModal","show","onHide","keyboard","maxHeight","overflow","etfs","rebalanceFreq","header","navigation","paddingTop","fontSize","maxLength","placeholder","value","onChange","e","target","getChildMapping","children","mapFn","result","create","Children","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","TransitionGroupContext","propTypes","defaultProps","_iterableToArray","iter","iterator","Array","from","_toConsumableArray","arr","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError"],"sourceRoot":""}
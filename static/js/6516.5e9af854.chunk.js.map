{"version":3,"file":"static/js/6516.5e9af854.chunk.js","mappings":"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","sources":["services/smallcase.js","views/mobileView/components/molecules/Headers/MainHeader.js","views/mobileView/screens/mintboxpro/LinkDemat.js","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js"],"sourcesContent":["import AdminServices from \"./api/AdminServices\"\nimport jwt_decode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nimport db from \"libs/db\";\n\nconst GATEWAY_NAME = \"mintbox\"\n\nconst intializeWithAuthId = async (authId = '') => {\n    const res = await AdminServices.getSmallcasetoken(authId).then(rs => rs)\n    if (res.type) {\n        console.log(\"Initializing with New Token =>>\", res.data)\n        await db.set(db.model.smallcaseSDKToken, res.data)\n        window.sc = new window.scDK({\n            gateway: GATEWAY_NAME,\n            smallcaseAuthToken: res.data,\n        })\n    } else {\n        await intializeWithAuthId()\n    }\n}\n\nconst initializeSmallCase = async () => {\n    await db.get(db.model.smallcaseSDKToken).then(async (sdkToken) => {\n        if (sdkToken === null || jwt_decode(sdkToken).exp * 1000 < new Date().getTime()) {\n            await db.get(db.model.user)\n                .then(async (user) => {\n                    await db.get(db.model.clientData).then(async (p) => {\n                        if (p === null) {\n                            let res = await AdminServices.getClient(user.userData.id).then(res => res);\n                            if (res.type === true) {\n                                const a = JSON.parse(res.data);\n                                let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n                                console.log(\"Get Client API :\", aa)\n                                await db.set(db.model.clientData, JSON.stringify(aa))\n                                if (aa.SmallcaseInfo.length) {\n                                    await intializeWithAuthId(aa.SmallcaseInfo[0].AuthId)\n                                } else {\n                                    await intializeWithAuthId()\n                                }\n                            } else {\n                                await intializeWithAuthId()\n                            }\n                        } else {\n                            if (p.SmallcaseInfo.length) {\n                                console.log(\"user auth id => \", p.SmallcaseInfo[0].AuthId)\n                                await intializeWithAuthId(p.SmallcaseInfo[0].AuthId)\n                            } else {\n                                await intializeWithAuthId()\n                            }\n                        }\n                    })\n                })\n                .catch(error => {\n                    toast.error(error);\n                })\n        } else {\n            if(window.sc === undefined){\n                console.log(\"Initializing with existing sdktoken -> \", sdkToken)\n                window.sc = new window.scDK({\n                    gateway: GATEWAY_NAME,\n                    smallcaseAuthToken: sdkToken,\n                })\n            } else {\n                console.log('smallcase already initialized')\n            }\n        }\n    })\n}\n\nconst getsmallCaseToken = async (authId = '') => {\n    const res = await AdminServices.getSmallcasetoken(authId).then(rs => rs)\n    if (res.type) {\n        console.log(\"New Token =>>\", res.data)\n        db.set(db.model.smallcaseSDKToken, res.data)\n        window.sc.init({ smallcaseAuthToken: res.data })\n            .then((a) => {\n                console.log(\"Smallcase init complete\", a)\n            })\n            .catch((e) => {\n                console.log(e.message)\n                getsmallCaseToken()\n            });\n    }\n}\n\nconst updateSmallCaseAuthId = async (clientId, smallcase_authId, broker) => {\n    const d = {\n        \"clientId\": clientId,\n        \"broker\": broker,\n        \"smallcaseAuthToken\": smallcase_authId\n    }\n    console.log(d)\n    const smallAuthRes = await AdminServices.saveSmallCaseAuthId(d).then(res => res)\n    console.log(smallAuthRes)\n    if (smallAuthRes.type) {\n        if(smallAuthRes.data.Result === 'failure'){\n            console.log(\"failedddddddd\")\n            return false\n        }else{\n            await getsmallCaseToken(smallAuthRes.data.AuthId)\n            console.log(\"yeahhhhh\")\n            return true\n        }\n    } else {\n        return false\n    }\n}\nexport {initializeSmallCase,updateSmallCaseAuthId,getsmallCaseToken}\n","import React from 'react';\nimport { AiOutlineDown } from 'react-icons/ai';\nimport { BsBookmark, BsBookmarkFill } from 'react-icons/bs';\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { HiOutlineShare } from 'react-icons/hi';\nimport cssVar from 'views/mobileView/styles';\n\nconst MainHeader = ({\n    header,\n    navigation,\n    screenType,\n    backAction=()=>{navigation.goBack()},\n    right,\n    rightAction = () => {},\n    isWatchlisted = false,\n    onWatchlistIconClick = ()=>{},\n    onShareIconClick = ()=>{},\n    onHeaderClick = ()=>{}\n}) => {\n    \n    const renderRightSide = () => {\n        switch (right) {\n            case 'bookmark-share':\n                return (\n                    <span>  \n                        {\n                            isWatchlisted?\n                            <BsBookmarkFill\n                                className='secondaryGreen'\n                                size={24}\n                                onClick={onWatchlistIconClick}\n                            />\n                            :\n                            <BsBookmark\n                                className='secondaryGreen'\n                                size={24}\n                                onClick={onWatchlistIconClick}\n                            />\n                        }\n                        <HiOutlineShare\n                            className='secondaryGreen'\n                            size={24}\n                            style={{marginLeft:\"20px\"}}\n                            onClick={onShareIconClick}\n                            />\n                    </span>\n                );\n            case 'tip': \n                    return <span className='header3dark secondaryGreen' onClick={()=> rightAction()}>Tip <AiOutlineDown size={10}/></span>\n            default:\n                if(!right){\n                    return <></>\n                } else {\n                    return (\n                        <span className='greenChipHeader' onClick={()=>{ rightAction ()}}>\n                            {right}\n                        </span>\n                    );\n                }\n        }\n    };\n\n    return (\n        <div className=\"mainHeader sticky-top\">\n            {screenType !== 'Home' && (\n                <div style={{marginRight:\"4%\",minWidth:\"8%\"}}>\n                    <FiArrowLeft\n                    color={cssVar.getPropertyValue(\"--secondaryGreen\")}\n                    size={24} onClick={() => backAction()} />\n                </div>\n            )}\n            <div style={{flex:1}}>\n                <span className=\"screenTitle\" onClick={()=>onHeaderClick()}>{header}</span>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                {renderRightSide()}\n            </div>\n        </div>\n    );\n};\n\nexport default MainHeader;","import db from 'libs/db';\nimport React from 'react'\nimport { AiOutlineRight } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport AdminServices from 'services/api/AdminServices';\nimport { initializeSmallCase, updateSmallCaseAuthId } from 'services/smallcase';\nimport MainHeader from 'views/mobileView/components/molecules/Headers/MainHeader';\n\nconst LinkDemat = (props) => {\n\n    const onLinkDematPress = async () => {\n        if (props.location.state.type === 2) {\n            props.history.replace('/activate-direct-mf/get-started')\n        } else {\n            const res = await AdminServices.getSmallcaseTransactionId({ \"intent\": \"CONNECT\" }).then(rs => rs)\n            if (res.type) {\n                console.log(\"Trx id =>>\", res.data.data.transactionId)\n                if (window.sc === undefined) {\n                    console.log(\"Initializing Smallcase\")\n                    await initializeSmallCase();\n                }\n                await window.sc.triggerTransaction({ transactionId: res.data.data.transactionId })\n                    .then((a) => {\n                        console.log(a)\n                        if (a) {\n                            updateSmallCaseAuthId(props.location.state.ClientId, a.smallcaseAuthToken, a.broker).then(res => {\n                                console.log(res)\n                                if (res) {\n                                    db.remove(db.model.clientData)\n                                    toast.success('Demat linked')\n                                    props.history.goBack();\n                                } else {\n                                    toast.error('Demat already linked with another mintbox account')\n                                }\n                            })\n                        }\n                    })\n                    .catch((p) => {\n                        if(p.message === 'user_cancelled'){\n                            return\n                          } else {\n                            toast.error('Something went wrong! Try again.')\n                          }\n                    });\n            }\n        }\n    }\n\n    const onOpenDemat = async () => {\n        if (window.sc === undefined) {\n            console.log(\"Initializing Smallcase\")\n            await initializeSmallCase();\n        }\n        window.sc.signup()\n            .then(\n                () => {\n                    console.log(\"signup flow has now ended\");\n                }\n            );\n    }\n    return (\n        <div className='mainContainer'>\n            <MainHeader\n                header={props.location.state.type === 1 ? \"Link a demat\" : \"Activate mutual funds\"}\n                navigation={props.history}\n            />\n            <div className=\"dataContainer\" style={{ textAlign: \"center\" }}>\n                <img src=\"https://d3etfstcuyoos5.cloudfront.net/app-images/svg_icons/activate_mf_demat.svg\" width='120px' height='120px' style={{ margin: \"40% auto 0 auto\" }} />\n                <div className='bigHeader' style={{ margin: \"4%\" }}>\n                    {props.location.state.type === 2 ? \"Activate mutual funds to invest\" : \"Link your demat account to invest\"}\n                </div>\n                <div className='bodyTextLight'>\n                    {props.location.state.type === 1 ?\n                        \"Start investing in low-cost ETFs by linking your existing demat account\"\n                        : props.location.state.type === 2 ?\n                            \"Activate mutual funds to invest\"\n                            : props.location.state.type === 3 ?\n                                \"Start investing in mintboxes by linking your existing demat account\"\n                                :\n                                \"\"\n                    }\n                </div>\n                <button className='solidButton' style={{ width: \"auto\", margin: \"10% auto\", paddingLeft: \"20px\", paddingRight: \"20px\" }}\n                    onClick={() => onLinkDematPress()}\n                >{props.location.state.type === 2 ? \"Activate in 5 mins\" : \"Link demat account\"} <AiOutlineRight size={14} /></button>\n                {\n                    props.location.state.type === 2 ?\n                        <></>\n                        :\n                        <div className='header2dark secondaryGreen' onClick={() => onOpenDemat()}>Open a demat account</div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default LinkDemat\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"names":["GATEWAY_NAME","intializeWithAuthId","authId","AdminServices","then","rs","res","type","console","log","data","db","window","sc","scDK","gateway","smallcaseAuthToken","initializeSmallCase","sdkToken","jwt_decode","exp","Date","getTime","user","p","a","userData","id","JSON","parse","aa","reduce","f","stringify","SmallcaseInfo","length","AuthId","catch","error","toast","undefined","getsmallCaseToken","init","e","message","updateSmallCaseAuthId","clientId","smallcase_authId","broker","d","smallAuthRes","Result","header","navigation","screenType","backAction","goBack","right","rightAction","isWatchlisted","onWatchlistIconClick","onShareIconClick","onHeaderClick","className","style","marginRight","minWidth","color","cssVar","size","onClick","flex","display","marginLeft","renderRightSide","props","onLinkDematPress","location","state","history","replace","transactionId","triggerTransaction","ClientId","onOpenDemat","signup","textAlign","src","width","height","margin","paddingLeft","paddingRight","InvalidCharacterError","this","prototype","Error","name","atob","bind","input","str","String","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","code","charCodeAt","toString","toUpperCase","err","InvalidTokenError","token","options","pos","base64_url_decode","split"],"sourceRoot":""}
{"version":3,"file":"static/js/8640.e61683a5.chunk.js","mappings":"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","sources":["assets/Constant.js","views/marketing/AllFundsMobile.js","views/mobileView/components/atoms/AMCIcon.js","views/mobileView/components/atoms/CurrencyFormat.js","views/mobileView/components/atoms/MintboxIcon.js","views/mobileView/components/atoms/MxButton.js","views/mobileView/components/atoms/ReadMoreText.js","views/mobileView/components/atoms/RedGreenText.js","views/mobileView/components/atoms/RiskFunctions.js"],"sourcesContent":["const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst baseImgURL = \"https://d3etfstcuyoos5.cloudfront.net/app-images/imgs/\"\n\nconst amcList = [\n  { Id: 0, Name: \"by AMC\", imgSource: baseImgURL + 'mintbox_logo.svg' },\n  { Id: 1, Name: \"Aditya Birla Sun Life Mutual Fund\", imgSource: baseImgURL + 'ABC.webp' },\n  { Id: 2, Name: \"HDFC Mutual Fund\", imgSource: baseImgURL + 'HDFC.webp' },\n  { Id: 3, Name: \"ICICI Prudential Mutual Fund\", imgSource: baseImgURL + 'ICICI.webp' },\n  { Id: 5, Name: \"SBI Mutual Fund\", imgSource: baseImgURL + 'SBI.webp' },\n  { Id: 6, Name: \"Tata Mutual Fund\", imgSource: baseImgURL + 'Tata.webp' },\n  { Id: 7, Name: \"Invesco Mutual Fund\", imgSource: baseImgURL + 'Invesco.webp' },\n  { Id: 8, Name: \"Quantum Mutual Fund\", imgSource: baseImgURL + 'Quantum.webp' },\n  { Id: 9, Name: \"UTI Mutual Fund\", imgSource: baseImgURL + 'UTI.webp' },\n  { Id: 10, Name: \"IDFC Mutual Fund\", imgSource: baseImgURL + 'IDFC.webp' },\n  { Id: 12, Name: \"DSP Blackrock\", imgSource: baseImgURL + 'DSP.webp' },\n  { Id: 13, Name: \"Kotak Mutual Fund\", imgSource: baseImgURL + 'Kotak.webp' },\n  { Id: 15, Name: \"Mirae Asset Management\", imgSource: baseImgURL + 'Mirae.webp' },\n  { Id: 16, Name: \"Franklin Templeton\", imgSource: baseImgURL + 'Franklin.webp' },\n  { Id: 18, Name: \"Sundaram Mutual Fund\", imgSource: baseImgURL + 'Sundaram.webp' },\n  { Id: 20, Name: \"Motilal Oswal Mutual Fund\", imgSource: baseImgURL + 'Motilal.webp' },\n  { Id: 22, Name: \"HSBC Mutual Fund\", imgSource: baseImgURL + 'HSBC.webp' },\n  { Id: 23, Name: \"Edelweiss Mutual Fund\", imgSource: baseImgURL + 'Edelweiss.webp' },\n  { Id: 24, Name: \"L&T Mutual Fund\", imgSource: baseImgURL + 'L&T.webp' },\n  { Id: 25, Name: \"Axis Mutual Fund\", imgSource: baseImgURL + 'AXIS.webp' },\n  { Id: 26, Name: \"BNP Paribas Mutual Fund\", imgSource: baseImgURL + 'BNP.webp' },\n  { Id: 27, Name: \"IIFL Mutual Fund\", imgSource: baseImgURL + 'IIFL.webp' },\n  { Id: 28, Name: \"Taurus Mutual Fund\", imgSource: baseImgURL + 'Taurus.webp' },\n  { Id: 31, Name: \"Baroda Mutual Fund\", imgSource: baseImgURL + 'BARODA.webp' },\n  { Id: 34, Name: \"IDBI Mutual Fund\", imgSource: baseImgURL + 'IDBI.webp' },\n  { Id: 36, Name: \"PPFAS Mutual Fund\", imgSource: baseImgURL + 'PPFAS.webp' },\n  { Id: 37, Name: \"JM Financials Mutual Fund\", imgSource: baseImgURL + 'JM.webp' },\n  { Id: 38, Name: \"LIC Nomura Mutual Fund\", imgSource: baseImgURL + 'LIC.webp' },\n  { Id: 39, Name: \"Canara Robeco Mutual Fund\", imgSource: baseImgURL + 'CANARA.webp' },\n  { Id: 40, Name: \"Principal Mutual Fund\", imgSource: baseImgURL + 'Principal.webp' },\n  { Id: 41, Name: \"Indiabull Mutual Fund\", imgSource: baseImgURL + 'Indiabulls.webp' },\n  { Id: 42, Name: \"Mahindra Manulife Mutual Fund\", imgSource: baseImgURL + 'Mahindra.webp' },\n  { Id: 45, Name: \"Bharti AXA Mutual Fund\", imgSource: baseImgURL + 'BOI.webp' },\n  { Id: 56, Name: \"Nippon India Mutual Fund\", imgSource: baseImgURL + 'Nippon.webp' },\n  { Id: 57, Name: \"PGIM India Mutual Fund\", imgSource: baseImgURL + 'PGIM.webp' },\n  { Id: 58, Name: \"Navi Mutual Fund\", imgSource: baseImgURL + 'NAVI.webp' },\n  { Id: 59, Name: \"Shriram Mutual Fund\", imgSource: baseImgURL + 'Shriram.webp' },\n  { Id: 60, Name: \"Union KBC Mutual Fund\", imgSource: baseImgURL + 'Union.webp' },\n  { Id: 61, Name: \"Yes Mutual Fund\", imgSource: baseImgURL + 'Yes.webp' },\n  { Id: 62, Name: \"ITI Mutual Fund\", imgSource: baseImgURL + 'ITI.webp' },\n  { Id: 63, Name: \"Quant Mutual Fund\", imgSource: baseImgURL + 'Quant.webp' },\n  { Id: 64, Name: \"Trust Mutual Fund\", imgSource: baseImgURL + 'Trust.webp' },\n  { Id: 65, Name: \"LIC Mutual Fund\", imgSource: baseImgURL + 'LIC.webp' },\n  { Id: 66, Name: \"ICICI Mutual Fund\", imgSource: baseImgURL + 'ICICI.webp' },\n  { Id: 67, Name: \"Mirae Asset Mutual Fund\", imgSource: baseImgURL + 'Mirae.webp' },\n  { Id: 68, Name: \"Kotak Mahindra Mutual Fund\", imgSource: baseImgURL + 'Kotak.webp' },\n\n]\n\nexport {amcList ,baseImgURL, monthNames};\n","import { Chip } from '@mui/material';\nimport { baseImgURL } from 'assets/Constant';\nimport db from 'libs/db';\nimport React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { BsChevronLeft, BsChevronRight } from 'react-icons/bs';\nimport { FiSearch } from 'react-icons/fi';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { toast } from \"react-toastify\";\nimport AdminServices from 'services/api/AdminServices';\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport AMCIcon from 'views/mobileView/components/atoms/AMCIcon';\nimport { CurrencyFormat } from 'views/mobileView/components/atoms/CurrencyFormat';\nimport MintboxIcon from 'views/mobileView/components/atoms/MintboxIcon';\nimport ReadMoreText from 'views/mobileView/components/atoms/ReadMoreText';\nimport RedGreenText from 'views/mobileView/components/atoms/RedGreenText';\nimport { RiskFormat } from 'views/mobileView/components/atoms/RiskFunctions';\nimport MarketingHeader from 'views/mobileView/components/molecules/Headers/MarketingHeader';\nimport cssVar from 'views/mobileView/styles';\n\nexport default function AllFunds(props) {\n    const type = props.location.state.type ? props.location.state.type : 3;\n    const query = props.location.state.query ? props.location.state.query : 'All';\n    const RISKLEVEL = props.location.state.RISKLEVEL ? props.location.state.RISKLEVEL : 0;\n    const DURATIONID = props.location.state.DURATIONID ? props.location.state.DURATIONID : 0;\n\n    const [clientData, setClientData] = React.useState()\n    const [loading, setLoading] = React.useState(true)\n\n    const [allFunds, setAllFunds] = React.useState([])\n    const [watchlist, setWatchlist] = React.useState([])\n    const [filteredFunds, setFilteredFunds] = React.useState([])\n    const [data, setData] = React.useState([]) // used to display\n\n    const [selectedFiltersArray, setSelectedFiltersArray] = React.useState([query])\n    const [searchText, setSearchText] = React.useState('');\n    const [duration, setDuration] = React.useState(0); // 0-> 1yr, 1-> 3yr, 2-> 5yr\n    const [searchResult, setSearchResult] = React.useState([])\n    const [sortResult, setSortResult] = React.useState([])\n\n\n    const chipset = type === 1 ? [\n        { \"key\": \"All\", \"name\": \"All\" },\n        { \"key\": \"IsEquityFund\", \"name\": \"Equity\" },\n        { \"key\": \"IsForeignFund\", \"name\": \"Foreign\" },\n        { \"key\": \"IsLiquidFund\", \"name\": \"Liquid\" },\n        { \"key\": \"IsGoldFund\", \"name\": \"Gold\" },\n        { \"key\": \"IsDebtFund\", \"name\": \"Debt\" },\n        { \"key\": \"IsSectoralFund\", \"name\": \"Sectoral\" },\n        { \"key\": \"IsFactoralFund\", \"name\": \"Factor\" },\n        { \"key\": \"IsThematicFund\", \"name\": \"Thematic\" },\n        { \"key\": \"Watchlist\", \"name\": \"Watchlisted\" },\n    ]\n        :\n        type === 2 ? [\n            { \"key\": \"All\", \"name\": \"All\" },\n            { \"key\": \"IsIndexFund\", \"name\": \"Index\" },\n            { \"key\": \"IsLargeCapFund\", \"name\": \"Large cap\" },\n            { \"key\": \"IsFlexiCapFund\", \"name\": \"Flexi cap\" },\n            { \"key\": \"IsUSEquity\", \"name\": \"US equity\" },\n            { \"key\": \"IsGoldFund\", \"name\": \"Gold\" },\n            { \"key\": \"Watchlist\", \"name\": \"Watchlisted\" },\n        ]\n            : [\n                { \"key\": \"All\", \"name\": \"All\" },\n                // { \"key\": \"Fee\", \"name\": \"Free\" },\n                { \"key\": \"WealthCreator\", \"name\": \"Wealth creator\" },\n                // { \"key\": \"Watchlist\", \"name\": \"Watchlisted\" },\n                // { \"key\": \"Recommended\", \"name\": \"Recommended for you\" },\n                // { \"key\": \"Watchlist\", \"name\": \"Watchlisted\" },\n                { \"key\": \"RiskLevel\", \"name\": RiskFormat(RISKLEVEL), \"show\": RISKLEVEL !== 0 },\n                { \"key\": \"DurationId\", \"name\": DURATIONID === 1 ? \"1-3 year\" : DURATIONID === 2 ? \"3-5 year\" : DURATIONID === 3 ? \"5+ years\" : DURATIONID === 15 ? 'Short term ' : \"\", \"show\": DURATIONID !== 0 },\n            ]\n\n    React.useEffect(() => {\n        document.getElementsByClassName(\"normalChip selected\")[0].scrollIntoView()\n    }, [selectedFiltersArray])\n\n    React.useEffect(async () => {\n        await loadData();\n        setLoading(false);\n    }, [])\n\n    React.useEffect(() => {\n        applyFilter()\n    }, [allFunds, selectedFiltersArray])\n\n    React.useEffect(() => {\n        onSearch(searchText);\n    }, [filteredFunds])\n\n    React.useEffect(() => {\n        onSort(duration)\n    }, [searchResult])\n\n\n    // React.useEffect(() => {\n    //     loadData()\n    // }, [])\n\n    // React.useEffect(() => {\n    //     applyFilter()\n    // }, [allFunds, selectedFiltersArray])\n\n    // React.useEffect(() => {\n    //     onSearch();\n    // }, [filteredFunds, searchText, selectedSortOption])\n\n    // React.useEffect(() => {\n    //     console.log(searchResult)\n    //     setData(searchResult.slice(0, 25)) // set initial 25 funds\n    //     // setLoadingFilter(false)\n    // }, [searchResult])\n\n    const applyFilter = () => {\n        console.log(\"Apply filter\", selectedFiltersArray, allFunds)\n        if (type === 3) {\n            // for mintboxes\n            if (selectedFiltersArray.includes('All')) {\n                setFilteredFunds(allFunds.filter(fund => fund.IsCustom === 0))\n                return\n            }\n            if (selectedFiltersArray.includes(\"Fee\")) {\n                setFilteredFunds(allFunds.filter(fund => fund[\"Fee\"] === \"0\" && fund.IsCustom === 0))\n            } else if (selectedFiltersArray.includes(\"RiskLevel\")) {\n                setFilteredFunds(allFunds.filter(fund => fund[\"RiskLevel\"] === RISKLEVEL && fund.IsCustom === 0))\n            } else if (selectedFiltersArray.includes(\"DurationId\")) {\n                if (DURATIONID === 15) {\n                    setFilteredFunds(allFunds.filter(fund => fund[\"DurationId\"] === 1 || fund[\"DurationId\"] === 2))\n                } else {\n                    setFilteredFunds(allFunds.filter(fund => fund[\"DurationId\"] === DURATIONID && fund.IsCustom === 0))\n                }\n            } else if (selectedFiltersArray.includes(\"Recommended\")) {\n                if (clientData?.RiskInfo.length) {\n                    setFilteredFunds(allFunds.filter(fund => fund.RiskLevel === clientData.RiskInfo[0].RiskScore && fund.IsCustom === 0))\n                }\n            } else if (selectedFiltersArray.includes(\"WealthCreator\")) {\n                setFilteredFunds(allFunds.filter(fund => fund.DurationId === 3))\n            } else if (selectedFiltersArray.includes('Watchlist')) {\n                console.log(watchlist)\n                setFilteredFunds(allFunds.filter(fund => !fund.IsCustom && watchlist.some(w => Number(w.FundCode) === fund.MintboxId)))\n            }\n        } else if (type === 2) {\n            // for mutual funds\n            if (selectedFiltersArray.includes('All')) {\n                setFilteredFunds(allFunds)\n                return\n            }\n            setFilteredFunds(allFunds.filter(fund => {\n                return selectedFiltersArray.some(filter => {\n                    if (filter === 'Watchlist') {\n                        return watchlist.some(w => Number(w.FundCode) === fund.FundCode)\n                    } else {\n                        return fund[filter] === 1\n                    }\n                })\n            }))\n        } else if (type === 1) {\n            // for ETFs\n            if (selectedFiltersArray.includes('All')) {\n                setFilteredFunds(allFunds)\n                return\n            }\n            setFilteredFunds(allFunds.filter(fund => {\n                return selectedFiltersArray.some(filter => {\n                    if (filter === 'Watchlist') {\n                        return watchlist.some(w => w.FundCode === fund.Symbol)\n                    } else {\n                        return fund[filter] === 1\n                    }\n                })\n            }))\n        }\n    }\n\n\n    const loadData = async () => {\n        setLoading(true);\n        if (type === 1) {\n            try {\n                await db.get(db.model.allEtfs).then(async (u) => {\n                    if (u) {\n                        setAllFunds(u);\n                        setLoading(false);\n                    } else {\n                        let res = await AdminServices.getAllETFs().then(res => res);\n                        if (res.type === true) {\n                            console.log(\"Get All ETFs API: \", res.data)\n                            await db.set(db.model.allEtfs, JSON.stringify(res.data))\n                            setAllFunds(res.data)\n                            setLoading(false);\n                        }\n                    }\n                })\n            } catch (error) {\n                setLoading(false);\n                toast.error(error);\n            }\n        } else if (type === 2) {\n            try {\n                await db.get(db.model.allMutualFunds).then(async (u) => {\n                    if (u) {\n                        setAllFunds(u);\n                        setLoading(false);\n                    } else {\n                        let res = await AdminServices.getFundsData().then(res => res)\n                        if (res.type === true) {\n                            console.log(\"Get All MFs API: \", res.data)\n                            await db.set(db.model.allMutualFunds, JSON.stringify(res.data))\n                            setAllFunds(res.data)\n                            setLoading(false);\n                        }\n                    }\n                })\n            } catch (error) {\n                setLoading(false);\n                toast.error(error);\n            }\n        } else {\n            try {\n                await db.get(db.model.allMintboxes).then(async (u) => {\n                    if (u) {\n                        setAllFunds(u);\n                        setLoading(false);\n                    } else {\n                        let res = await AdminServices.getAllMintboxes(0).then(res => res);\n                        if (res.type === true) {\n                            console.log(\"Get All Mintboxes API: \", res.data)\n                            await db.set(db.model.allMintboxes, JSON.stringify(res.data))\n                            setAllFunds(res.data)\n                            setLoading(false);\n                        }\n                    }\n                })\n            } catch (error) {\n                setLoading(false);\n                toast.error(error);\n            }\n        }\n    }\n\n    const onSearch = async (t) => {\n        console.log(\"search\", t, filteredFunds)\n        let temp = [].concat(filteredFunds)\n        if (t.length > 0) {\n            const textArray = t.split(' ');\n            if (type === 1) {\n                temp = filteredFunds.filter(fund => textArray.every(text => fund.ETFName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n            } else if (type === 2) {\n                temp = filteredFunds.filter(fund => textArray.every(text => fund.FundName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n            } else {\n                temp = filteredFunds.filter(fund => textArray.every(text => fund.MintboxName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n            }\n        }\n        setSearchResult(temp)\n    }\n\n    const onSort = async (durationId) => {\n        console.log(\"sort\", durationId, searchResult)\n        let temp = searchResult.slice();\n        if (type !== 3) {\n            if (durationId === 0) {\n                temp.sort((a, b) => b.OneYrReturn - a.OneYrReturn)\n            } else if (durationId === 1) {\n                temp.sort((a, b) => b.ThreeYrReturn - a.ThreeYrReturn)\n            } else if (durationId === 2) {\n                temp.sort((a, b) => b.FiveYrReturn - a.FiveYrReturn)\n            }\n        }\n        setSortResult(temp)\n        setData(temp.slice(0, 25)) // set initial 25 funds\n        // window.scrollTo({ top: 0, behavior: 'auto' })\n    }\n\n\n    const loadMoreFunds = () => {\n        setData(sortResult.slice(0, data.length + 10)) // set data with 10 additionalfunds\n    };\n\n\n\n\n    \n\n    const debounce = (func, wait = 20, immediate = true) => {\n        let timeOut;\n        return () => {\n            let context = this,\n                args = arguments;\n            const later = () => {\n                timeOut = null;\n                if (!immediate) func.apply(context, args);\n            };\n            const callNow = immediate && !timeOut;\n            clearTimeout(timeOut);\n            timeOut = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    };\n\n\n    \n\n    const ETFView = () => {\n        return (\n            <>\n                <InfiniteScroll\n                    dataLength={sortResult.length} //This is important field to render the next data\n                    next={() => loadMoreFunds()}\n                    hasMore={data.length < sortResult.length}\n                    loader={<center>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"grow\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\" />\n                    </center>}\n                >\n                    {\n                        data.map((fund, i) =>\n                            <div key={i} style={{ padding: \"4%\", borderBottom: \"1px solid #e5e5e5\" }} onClick={() => props.history.push(\"/ETF-detail/\" + fund.Symbol)}>\n                                <div style={{ display: \"flex\", gap: \"4%\" }}>\n                                    <AMCIcon amcName={fund.AMCName} height='40px' width='40px' />\n                                    <div style={{ flex: \"1\" }}>\n                                        <div className=\"header2dark lineClamp\">{fund.ETFName}</div>\n                                        <div className='smallTextLight' style={{ marginTop: '1%' }}>{fund.Asset}</div>\n                                    </div>\n                                    <div className='header1dark'>\n                                        {\n                                            duration === 2 ?\n                                                <RedGreenText text={parseFloat(fund.FiveYrReturn || 0).toFixed(2) + '%'} value={fund.FiveYrReturn} />\n                                                :\n                                                duration === 1 ? <RedGreenText text={parseFloat(fund.ThreeYrReturn || 0).toFixed(2) + '%'} value={fund.ThreeYrReturn} />\n                                                    :\n                                                    <RedGreenText text={parseFloat(fund.OneYrReturn || 0).toFixed(2) + '%'} value={fund.OneYrReturn} />\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </InfiniteScroll>\n            </>\n        )\n    }\n\n    const MFView = () => {\n        return (\n            <InfiniteScroll\n                dataLength={sortResult.length} //This is important field to render the next data\n                next={() => loadMoreFunds()}\n                hasMore={data.length < sortResult.length}\n                loader={<center>\n                    <Spinner\n                        as=\"span\"\n                        animation=\"grow\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\" />\n                </center>}\n            >\n                {\n                    data.map((fund, i) =>\n                        <div key={i} style={{ padding: \"4%\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }} onClick={() => props.history.push(\"/fund-detail/\" + fund.FundCode)}>\n                            <div style={{ display: \"flex\", gap: \"4%\" }}>\n                                <AMCIcon amcName={fund.AMCName} height='40px' width='40px' />\n                                <div style={{ flex: \"1\" }}>\n                                    <div className=\"header2dark lineClamp\">{fund.FundName}</div>\n                                    <div className='smallTextLight' style={{ marginTop: '1%' }}>{fund.SchemeType}</div>\n                                </div>\n                                <div className='header1dark'>\n                                    {\n                                        duration === 2 ?\n                                            <RedGreenText text={parseFloat(fund.FiveYrReturn || 0).toFixed(2) + '%'} value={fund.FiveYrReturn} />\n                                            :\n                                            duration === 1 ? <RedGreenText text={parseFloat(fund.ThreeYrReturn || 0).toFixed(2) + '%'} value={fund.ThreeYrReturn} />\n                                                :\n                                                <RedGreenText text={parseFloat(fund.OneYrReturn || 0).toFixed(2) + '%'} value={fund.OneYrReturn} />\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </InfiniteScroll>\n        )\n    }\n\n    const MintboxView = () => {\n        return (\n            <InfiniteScroll\n                dataLength={sortResult.length} //This is important field to render the next data\n                next={() => loadMoreFunds()}\n                hasMore={data.length < sortResult.length}\n                initialScrollY={0}\n                loader={<center>\n                    <Spinner\n                        as=\"span\"\n                        animation=\"grow\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\" />\n                </center>}\n            >\n                {\n                    data.map(mintbox =>\n                        <div key={mintbox.MintboxId} style={{ padding: \"4%\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }} onClick={() => { props.history.push(\"/mintbox-detail/\" + mintbox.MintboxId) }}>\n                            {\n                                mintbox.RiskLevel === clientData?.RiskInfo?.[0]?.RiskScore ?\n                                    <div style={{ marginBottom: \"4%\" }}>\n                                        <span className=\"smallTextLight\" style={{ backgroundColor: cssVar.getPropertyValue('--secondaryGreen'), padding: \"4px 8px\", borderRadius: \"4px\", whiteSpace: \"nowrap\", color: cssVar.getPropertyValue('--white') }}>\n                                            <img src={baseImgURL+'like-white.webp'} width='14px' height='14px' style={{ marginRight: \"4px\" }} /> Recommended for you\n                                        </span>\n                                    </div>\n\n                                    :\n                                    <></>\n                            }\n                            <div style={{ display: \"flex\", gap: \"4%\" }}>\n                                <MintboxIcon risk={mintbox.RiskLevel} height=\"40px\" width=\"40px\" />\n                                <div style={{ flex: \"1\" }}>\n                                    <div className='header1dark'>{mintbox.MintboxName}</div>\n                                </div>\n                            </div>\n                            <div className='bodyTextLight' style={{ margin: '4% 0', whiteSpace: 'pre-line' }}>\n                                <ReadMoreText text={mintbox.About?.replaceAll(`\\{\\\"\\\\n\\\"\\}`, '\\n\\n')} />\n                            </div>\n                            <div style={{ display: \"flex\" }}>\n                                <div style={{ flex: 1 }}>\n                                    <div className='smallTextLight'>5Y CAGR</div>\n                                    <div className='header2dark'>\n                                        <RedGreenText text={parseFloat(mintbox.XIRR || 0).toFixed(2) + '%'} value={mintbox.XIRR || 0} />\n                                    </div>\n                                </div>\n                                <div style={{ flex: 1 }}>\n                                    <div className='smallTextLight'>Min investment</div>\n                                    <div className='header2dark'>{CurrencyFormat(mintbox.MinSIPAmount)}</div>\n                                </div>\n                                <div style={{ flex: 1 }}>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </InfiniteScroll>\n        )\n    }\n\n    return (\n        <div className='mainContainer'>\n            <div className='sticky-top' style={{ backgroundColor: cssVar.getPropertyValue(\"--white\") }}>\n                <MarketingHeader props={props}  />\n                <div className='searchBar' style={{marginTop:\"64px\"}}>\n                    <FiSearch size={20} className='secondaryGreen' style={{ margin: \"0 4%\" }} />\n                    <input className='searchInput' placeholder={type === 1 ? 'Search by ETF name' : type === 2 ? 'Search by mutual fund name' : 'Search by mintbox name'} value={searchText}\n                        onChange={(e) => { setSearchText(e.target.value); onSearch(e.target.value) }}\n                    />\n                </div>\n                <div style={{ background: cssVar.getPropertyValue('--lightest'), border: \"1px solid \" + cssVar.getPropertyValue('--light'), padding: \"2% 4%\" }} className='hiddden-scrollbar'>\n                    {\n                        chipset.filter(c => c.show !== false).map(chip => {\n                            return <Chip key={chip.key} label={chip.name}\n                                className={selectedFiltersArray.includes(chip.key) ? \"normalChip selected\" : \"normalChip\"}\n                                onClick={() => { setSelectedFiltersArray([chip.key]); setDuration(0) }}\n                            />\n                        })\n                    }\n                </div>\n                {\n                    type === 3 ?\n                        <></>\n                        :\n                        <>\n                            <div style={{ display: \"flex\", alignItems: 'center', padding: \"4% 4% 1% 4%\" }}>\n                                <div className='header1dark' style={{ flex: 1 }}>\n                                    {selectedFiltersArray.length === 1 ? chipset.find(c => c.key === selectedFiltersArray[0])?.name : 'Filtered'}\n                                    {type === 1 ? ' ETFs' : type === 2 ? ' mutual funds' : type === 3 ? ' mintboxes' : ''}\n                                </div>\n                                <button onClick={() => { setDuration((duration + 1) % 3); onSort((duration + 1) % 3) }} className='greenChipHeader' style={{ minWidth: '120px' }}>\n                                    <BsChevronLeft style={{ paddingRight: \"5px\" }} size={14} />\n                                    {\n                                        duration === 2 ? \"5 year return\" : duration === 1 ? \"3 year return\" : \"1 year return\"\n                                    }\n                                    <BsChevronRight style={{ paddingLeft: \"5px\" }} size={14} />\n                                </button>\n                            </div>\n                            <div style={{ height: '3px', width: '8%', marginLeft: '4%', backgroundColor: cssVar.getPropertyValue('--primaryGreen'), borderRadius: '50%' }}></div>\n                        </>\n                }\n            </div>\n            <div className='dataContainer px-0' >\n                {\n                    loading ?\n                        <ActivityLoaderMintbox />\n                        :\n                        <div>\n                            {\n                                selectedFiltersArray.includes(\"Recommended\") && !clientData?.RiskInfo[0]?.RiskScore ?\n                                    <div style={{ padding: \"4%\", margin: \"4% 10%\", textAlign: \"center\" }}>\n                                        <img src={baseImgURL+\"not-found.webp\"} width=\"50%\" style={{ margin: \"4% auto\" }} />\n                                        <button className='solidButton'\n                                            onClick={() => { props.history.push('/risk-profile') }}\n                                        >\n                                            Complete risk profile\n                                        </button>\n                                    </div>\n                                    :\n                                    sortResult.length === 0 ?\n                                        <div style={{ padding: \"4%\", margin: \"4% 10%\", textAlign: \"center\" }}>\n                                            <img src={baseImgURL+\"not-found.webp\"} width=\"50%\" style={{ margin: \"4% auto\" }} />\n                                            <div style={{ fontSize: \"18px\", fontWeight: \"500\", margin: \"4% 0%\" }}>\n                                                No results!\n                                            </div>\n                                        </div>\n                                        :\n                                        type === 1 ? <ETFView /> : type === 2 ? <MFView /> : type === 3 ? <MintboxView /> : ''\n                            }\n                        </div>\n                }\n            </div>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // const type = props.location.state.type ? props.location.state.type : 3;\n    // const query = props.location.state.query ? props.location.state.query : 'All';\n    // const RISKLEVEL = props.location.state.RISKLEVEL ? props.location.state.RISKLEVEL : 0;\n    // const DURATIONID = props.location.state.DURATIONID ? props.location.state.DURATIONID : 0;\n\n    // const [clientData, setClientData] = React.useState()\n    // const [loading, setLoading] = React.useState(true)\n\n    // const [allFunds, setAllFunds] = React.useState([])\n    // const [watchlist, setWatchlist] = React.useState([])\n    // const [filteredFunds, setFilteredFunds] = React.useState([])\n    // const [searchResult, setSearchResult] = React.useState([])\n    // const [data, setData] = React.useState([]) // used to display\n\n    // const [selectedFiltersArray, setSelectedFiltersArray] = React.useState([query])\n    // const [searchText, setSearchText] = React.useState('');\n    // const [duration, setDuration] = React.useState(0); // 0-> 1yr, 1-> 3yr, 2-> 5yr\n\n    // const [showSortModal, setShowSortModal] = React.useState(false);\n    // const [showFilterModal, setShowFilterModal] = React.useState(false);\n    // const [selectedSortOption, setSelectedSortOption] = React.useState('')\n\n    // const chipset = type === 1 ? [\n    //     { \"key\": \"All\", \"name\": \"All\" },\n    //     { \"key\": \"IsEquityFund\", \"name\": \"Equity\" },\n    //     { \"key\": \"IsForeignFund\", \"name\": \"Foreign\" },\n    //     { \"key\": \"IsLiquidFund\", \"name\": \"Liquid\" },\n    //     { \"key\": \"IsGoldFund\", \"name\": \"Gold\" },\n    //     { \"key\": \"IsDebtFund\", \"name\": \"Debt\" },\n    //     { \"key\": \"IsSectoralFund\", \"name\": \"Sectoral\" },\n    //     { \"key\": \"IsFactoralFund\", \"name\": \"Factor\" },\n    //     { \"key\": \"IsThematicFund\", \"name\": \"Thematic\" },\n    //     // { \"key\": \"Watchlist\", \"name\": \"Watchlisted\" },\n    // ]\n    //     :\n    //     type === 2 ? [\n    //         { \"key\": \"All\", \"name\": \"All\" },\n    //         { \"key\": \"IsIndexFund\", \"name\": \"Index\" },\n    //         { \"key\": \"IsLargeCapFund\", \"name\": \"Large cap\" },\n    //         { \"key\": \"IsFlexiCapFund\", \"name\": \"Flexi cap\" },\n    //         { \"key\": \"IsUSEquity\", \"name\": \"US equity\" },\n    //         { \"key\": \"IsGoldFund\", \"name\": \"Gold\" },\n    //         // { \"key\": \"Watchlist\", \"name\": \"Watchlisted\" },\n    //     ]\n    //         : [\n    //             { \"key\": \"All\", \"name\": \"All\" },\n    //             { \"key\": \"Fee\", \"name\": \"Free\" },\n    //             // { \"key\": \"Watchlist\", \"name\": \"Watchlisted\" },\n    //             // { \"key\": \"Recommended\", \"name\": \"Recommended for you\" },\n    //             // { \"key\": \"RiskLevel\", \"name\": RiskFormat(RISKLEVEL), \"show\":false},\n    //             // { \"key\": \"DurationId\", \"name\": DURATIONID === 1 ? \"1-3 year\" : DURATIONID === 2 ? \"3-5 year\" : DURATIONID === 3 ? \"5+ years\" : DURATIONID === 15? 'Short term ' : \"\" , \"show\":false},\n    //         ].filter(Boolean)\n    // React.useEffect(() => {\n    //     loadData()\n    // }, [])\n\n    // React.useEffect(() => {\n    //     applyFilter()\n    // }, [allFunds, selectedFiltersArray])\n\n    // React.useEffect(() => {\n    //     onSearch();\n    // }, [filteredFunds, searchText, selectedSortOption])\n\n    // React.useEffect(() => {\n    //     console.log(searchResult)\n    //     setData(searchResult.slice(0, 25)) // set initial 25 funds\n    //     // setLoadingFilter(false)\n    // }, [searchResult])\n\n    // const applyFilter = () => {\n    //     // setLoadingFilter(true)\n    //     if (selectedFiltersArray.includes('All')) {\n    //         setFilteredFunds(allFunds)\n    //         return\n    //     }\n    //     if (type === 3) {\n    //         // for mintboxes\n    //         if (selectedFiltersArray.includes(\"Fee\")) {\n    //             setFilteredFunds(allFunds.filter(fund => fund[\"Fee\"] === \"0\"))\n    //         } else if (selectedFiltersArray.includes(\"RiskLevel\")) {\n    //             setFilteredFunds(allFunds.filter(fund => fund[\"RiskLevel\"] === RISKLEVEL))\n    //         } else if (selectedFiltersArray.includes(\"DurationId\")) {\n    //             if (DURATIONID === 15) {\n    //                 setFilteredFunds(allFunds.filter(fund => fund[\"DurationId\"] === 1 || fund[\"DurationId\"] === 2))\n    //             } else {\n    //                 setFilteredFunds(allFunds.filter(fund => fund[\"DurationId\"] === DURATIONID))\n    //             }\n    //         } else if (selectedFiltersArray.includes(\"Recommended\")) {\n    //             setFilteredFunds(allFunds.filter(fund => fund.RiskLevel === clientData.RiskInfo[0].RiskScore))\n    //         } else if (selectedFiltersArray.includes('Watchlist')) {\n    //             setFilteredFunds(allFunds.filter(fund => watchlist.some(w => Number(w.FundCode) === fund.MintboxId)))\n    //         }\n    //     } else if (type === 2) {\n    //         // for mutual funds\n    //         setFilteredFunds(allFunds.filter(fund => {\n    //             return selectedFiltersArray.some(filter => {\n    //                 if (filter === 'Watchlist') {\n    //                     return watchlist.some(w => Number(w.FundCode) === fund.FundCode)\n    //                 } else {\n    //                     return fund[filter] === 1\n    //                 }\n    //             })\n    //         }))\n    //     } else if (type === 1) {\n    //         // for ETFs\n    //         setFilteredFunds(allFunds.filter(fund => {\n    //             return selectedFiltersArray.some(filter => {\n    //                 if (filter === 'Watchlist') {\n    //                     return watchlist.some(w => w.FundCode === fund.Symbol)\n    //                 } else {\n    //                     return fund[filter] === 1\n    //                 }\n    //             })\n    //         }))\n    //     }\n    // }\n\n    // const onSearch = async () => {\n    //     // setLoadingFilter(true)\n    //     let res = [].concat(filteredFunds)\n    //     if (searchText.length > 0) {\n    //         const textArray = searchText.split(' ');\n    //         if (type === 1) {\n    //             res = filteredFunds.filter(fund => textArray.every(text => fund.ETFName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n    //         } else if (type === 2) {\n    //             res = filteredFunds.filter(fund => textArray.every(text => fund.FundName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n    //         } else {\n    //             res = filteredFunds.filter(fund => textArray.every(text => fund.MintboxName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n    //         }\n    //     }\n\n    //     if (selectedSortOption === '1Y') {\n    //         res.sort((a, b) => b.OneYrReturn - a.OneYrReturn)\n    //     } else if (selectedSortOption === '3Y') {\n    //         res.sort((a, b) => b.ThreeYrReturn - a.ThreeYrReturn)\n    //     } else if (selectedSortOption === '5Y') {\n    //         res.sort((a, b) => b.FiveYrReturn - a.FiveYrReturn)\n    //     }\n    //     console.log(res)\n    //     setSearchResult(res)\n    // }\n\n    // const loadData = async () => {\n    //     setLoading(true);\n    //     // await db.get(db.model.user).then(async (user) => {\n    //     //     await db.get(db.model.clientData).then(async (p) => {\n    //     //         if (p === null) {\n    //     //             let res = await AdminServices.getClient(user.userData.id).then(res => res);\n    //     //             if (res.type === true) {\n    //     //                 const a = JSON.parse(res.data);\n    //     //                 let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n    //     //                 console.log(\"Get Client API :\", aa)\n    //     //                 setClientData(aa)\n    //     //                 db.set(db.model.clientData, JSON.stringify(aa))\n    //     //             }\n    //     //         } else {\n    //     //             setClientData(p)\n    //     //         }\n    //     //     })\n    //     if (type === 1) {\n    //         try {\n    //             await db.get(db.model.allEtfs).then(async (u) => {\n    //                 if (u) {\n    //                     setAllFunds(u);\n    //                     setLoading(false);\n    //                 } else {\n    //                     let res = await AdminServices.getAllETFs().then(res => res);\n    //                     if (res.type === true) {\n    //                         console.log(\"Get All ETFs API: \", res.data)\n    //                         db.set(db.model.allEtfs, JSON.stringify(res.data))\n    //                         setAllFunds(res.data)\n    //                         setLoading(false);\n    //                     }\n    //                 }\n    //             })\n    //         } catch (error) {\n    //             setLoading(false);\n    //             toast.error(error);\n    //         }\n    //     } else if (type === 2) {\n    //         try {\n    //             await db.get(db.model.allMutualFunds).then(async (u) => {\n    //                 if (u) {\n    //                     setAllFunds(u);\n    //                     setLoading(false);\n    //                 } else {\n    //                     let res = await AdminServices.getFundsData().then(res => res)\n    //                     if (res.type === true) {\n    //                         console.log(\"Get All MFs API: \", res.data)\n    //                         db.set(db.model.allMutualFunds, JSON.stringify(res.data))\n    //                         setAllFunds(res.data)\n    //                         setLoading(false);\n    //                     }\n    //                 }\n    //             })\n    //         } catch (error) {\n    //             setLoading(false);\n    //             toast.error(error);\n    //         }\n    //     } else {\n    //         try {\n    //             await db.get(db.model.allMintboxes).then(async (u) => {\n    //                 if (u) {\n    //                     setAllFunds(u);\n    //                     setLoading(false);\n    //                 } else {\n    //                     let res = await AdminServices.getAllMintboxes(0).then(res => res);\n    //                     if (res.type === true) {\n    //                         console.log(\"Get All Mintboxes API: \", res.data)\n    //                         db.set(db.model.allMintboxes, JSON.stringify(res.data))\n    //                         setAllFunds(res.data)\n    //                         setLoading(false);\n    //                     }\n    //                 }\n    //             })\n    //         } catch (error) {\n    //             setLoading(false);\n    //             toast.error(error);\n    //         }\n    //     }\n    //     // try {\n    //     //     await db.get(db.model.watchlist).then(async (p) => {\n    //     //         if (p === null) {\n    //     //             let res = await AdminServices.getWatchlist(user.userData.id).then(res => res);\n    //     //             if (res.type === true) {\n    //     //                 console.log(\"get watchlist api \", res.data)\n    //     //                 db.set(db.model.watchlist, JSON.stringify(res.data))\n    //     //                 setWatchlist(res.data.filter(f => f.FundType === type))\n    //     //             }\n    //     //         } else {\n    //     //             setWatchlist(p.filter(f => f.FundType === type))\n    //     //         }\n    //     //     });\n    //     // } catch (error) {\n    //     //     toast.error(error);\n    //     // }\n    //     // })\n    // }\n\n    // const loadMoreFunds = () => {\n    //     setData(searchResult.slice(0, data.length + 10)) // set data with 10 additionalfunds\n    // };","import React from 'react';\nimport { amcList } from '../../../../assets/Constant';\n\nfunction AMCIcon({ amcName, type = \"normal\", height, width }) {\n\n    return (\n        <div style={{ alignSelf: \"flex-start\" }}>\n            <img\n                src={(amcList.filter((s) => s.Name === amcName)).length !== 0 ? (amcList.filter((s) => s.Name === amcName))[0].imgSource : amcList[0].imgSource}\n                style={{\n                    height: height,\n                    width: width\n                }}\n            />\n        </div>\n    );\n}\n\nexport default React.memo(AMCIcon)","function kFormatter(val) {\n  if (val >= 10000000) {val = `₹ ${(val / 10000000).toFixed(2)} cr`}\n  else if (val >= 100000) {val = `₹ ${(val / 100000).toFixed(2)} lac`}\n  else if (val >= 1000) {val = `₹ ${(val / 1000).toFixed(2)} k`}\n  else {val = normalFormatter(val)}\n  return val.replace('-', '');\n}\n\nfunction normalFormatter(num,fractionDigits=0) {\n  const a = new Intl.NumberFormat(\"en-IN\", {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: fractionDigits,\n  }).format(num);\n  return `₹ ${a}`;\n}\n\nexport function CurrencyFormat(num=0, type=\"long\",fractionDigits=0) {\n  return type === \"short\" ? kFormatter(Number(num),fractionDigits) : normalFormatter(Number(num),fractionDigits)\n}\n","import { baseImgURL } from 'assets/Constant';\nimport React from 'react'\nimport cssVar from \"views/mobileView/styles\";\nimport { RiskColor } from './RiskFunctions';\n\nfunction MintboxIcon({risk,height,width}) {\n  return(\n    <div style={{ display:'flex', border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),padding:`calc(${height}*10/100) 0`, borderRadius: '4px', height, width, backgroundColor: RiskColor(risk)}}>\n        <img src={baseImgURL+'wealth-creators.webp'} style={{height: `calc(${height}*80/100)`,margin:'auto'}}/>\n    </div>\n  )\n}\n\nexport default React.memo(MintboxIcon)","import React from 'react';\nimport { IoChevronForwardOutline } from \"react-icons/io5\";\n\nconst MxButton = ({ name, onPress, style, icon = false }) => {\n\n\n    return (\n        <button\n            className=\"mxButton\"\n            style={{ ...style, alignItems: \"center\", }}\n            onClick={onPress}\n        >\n\n            {name} {icon ? <IoChevronForwardOutline style={{ marginBottom: \"2.5px\" }} /> : null}\n\n\n        </button>\n    );\n}\n\nconst MxButtonGroup = ({ name1, name2, onPress2, style1, style2, onPress1, icon1 = false }) => {\n\n    return (\n        <>\n            <button\n                className=\"mxButton\"\n                style={style1}\n                onClick={onPress1}\n            >\n                {name1} {icon1 ? <IoChevronForwardOutline style={{ marginBottom: \"2.5px\" }} /> : null}\n            </button>\n            <button\n                className=\"mxButton\"\n                id=\"button-2\"\n                style={style2}\n                onClick={onPress2}\n            >\n                {name2}\n            </button>\n        </>\n    );\n}\n\nexport {MxButton, MxButtonGroup}\n","import React from 'react'\nimport { BsChevronDown, BsChevronUp } from 'react-icons/bs';\nimport cssVar from \"views/mobileView/styles\";\n\nexport default function ReadMoreText({ text, onViewChange = () => { } }) {\n\n  const [isReadMore, setIsReadMore] = React.useState(true);\n\n  React.useEffect(() => {\n    onViewChange(!isReadMore)\n  },[isReadMore])\n\n  if (!text) {\n    return ''\n  }\n  if (text.length < 100) {\n    return text\n  }\n  else return <>\n    {isReadMore ? text?.slice(0, 80) + \"...\" : text}\n    <span onClick={(e) => { e.stopPropagation(); setIsReadMore(!isReadMore) }} style={{ color: cssVar.getPropertyValue('--darkGreen'), fontWeight: \"500\", whiteSpace: \"nowrap\" }}>\n      {isReadMore ? \" Read More \" : \" Read Less \"}{isReadMore ? <BsChevronDown size={12} /> : <BsChevronUp size={12} />}\n    </span>\n  </>\n} ","import cssVar from \"views/mobileView/styles\"\n\nconst RedGreenText = ({text,value}) => {\n    if(Number(value)>0){\n        return <span className=\"secondaryGreen\">{text}</span>\n    } else if(Number(value)<0){\n        return <span style={{color:cssVar.getPropertyValue('--red')}}>{text}</span>\n    } else return <span>{text}</span>\n}\n\nexport default RedGreenText;","import cssVar from \"views/mobileView/styles\"\n\nconst RiskFormat = (riskID) => {\n    switch(riskID){\n        case 1 : return'Super conservative'\n        case 2 : return'Conservative'\n        case 3 : return'Moderate'\n        case 4 : return'Aggressive'\n        case 5 : return'Super aggressive'\n        case 6 : return'Very aggressive'\n        default: return ''\n    }\n}\n\nconst RiskColor = (riskID) => {\n    switch(riskID){\n        case 1 : return cssVar.getPropertyValue('--lowestRisk')\n        case 2 : return cssVar.getPropertyValue('--conservativeRisk')\n        case 3 : return cssVar.getPropertyValue('--moderateRisk')\n        case 4 : return cssVar.getPropertyValue('--secondHeighestRisk')\n        case 5 : return cssVar.getPropertyValue('--highestRisk')\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\n\nconst RiskTextColor = (riskID) => {\n    switch(riskID){\n        case 1 : return '#3395FF'\n        case 2 : return cssVar.getPropertyValue('--darkGreen')\n        case 3 : return cssVar.getPropertyValue('--gold')\n        case 4 : return cssVar.getPropertyValue('--internationalEquity')\n        case 5 : return '#FF5A5F'\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\nexport {RiskFormat,RiskColor,RiskTextColor}"],"names":["baseImgURL","amcList","Id","Name","imgSource","AllFunds","props","type","location","state","query","RISKLEVEL","DURATIONID","React","clientData","loading","setLoading","allFunds","setAllFunds","watchlist","filteredFunds","setFilteredFunds","data","setData","selectedFiltersArray","setSelectedFiltersArray","searchText","setSearchText","duration","setDuration","searchResult","setSearchResult","sortResult","setSortResult","chipset","RiskFormat","document","getElementsByClassName","scrollIntoView","loadData","applyFilter","onSearch","onSort","console","log","includes","filter","fund","IsCustom","RiskInfo","length","RiskLevel","RiskScore","DurationId","some","w","Number","FundCode","MintboxId","Symbol","db","then","u","AdminServices","res","JSON","stringify","toast","t","temp","concat","textArray","split","every","text","ETFName","toLowerCase","indexOf","FundName","MintboxName","durationId","slice","sort","a","b","OneYrReturn","ThreeYrReturn","FiveYrReturn","loadMoreFunds","ETFView","dataLength","next","hasMore","loader","as","animation","size","role","map","i","style","padding","borderBottom","onClick","history","push","display","gap","amcName","AMCName","height","width","flex","className","marginTop","Asset","parseFloat","toFixed","value","MFView","cssVar","SchemeType","MintboxView","initialScrollY","mintbox","marginBottom","backgroundColor","borderRadius","whiteSpace","color","src","marginRight","risk","margin","About","replaceAll","XIRR","CurrencyFormat","MinSIPAmount","placeholder","onChange","e","target","background","border","c","show","chip","label","name","key","alignItems","find","minWidth","paddingRight","paddingLeft","marginLeft","textAlign","fontSize","fontWeight","AMCIcon","alignSelf","s","kFormatter","val","normalFormatter","replace","num","fractionDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","MintboxIcon","RiskColor","MxButton","onPress","icon","MxButtonGroup","name1","name2","onPress2","style1","style2","onPress1","icon1","id","ReadMoreText","onViewChange","isReadMore","setIsReadMore","stopPropagation","riskID","RiskTextColor"],"sourceRoot":""}
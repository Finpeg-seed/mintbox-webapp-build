{"version":3,"file":"static/js/6825.68e526b7.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","contains","context","node","compareDocumentPosition","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","handleContainerOverflow","isRTL","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","undefined","Provider","useWindow","useContext","resolveContainerRef","ref","_ref","nodeType","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","className","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","element","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","qsa","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","propTypes","PropTypes","variant","CloseButton","type","defaultProps","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","ModalHeader","DivStyledAsH4","p","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}
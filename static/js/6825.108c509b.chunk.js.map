{"version":3,"file":"static/js/6825.108c509b.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"names":["useCallbackRef","useState","value","ref","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","apply","arguments","useMounted","mounted","isMounted","usePrevious","dataAttr","property","dataProp","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","fadeStyles","ENTERING","ENTERED","Fade","React","className","children","transitionClasses","props","handleEnter","node","isAppearing","triggerBrowserReflow","onEnter","_jsx","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","displayName","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","onUnmount","valueRef","useUpdatedRef","activeElement","doc","ownerDocument","active","nodeName","e","contains","context","compareDocumentPosition","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","undefined","Provider","useWindow","useContext","resolveContainerRef","_ref","nodeType","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","prevShow","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","Manager","_superPropBase","object","hasOwnProperty","getPrototypeOf","_get","Reflect","get","receiver","base","desc","getOwnPropertyDescriptor","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","propTypes","PropTypes","variant","CloseButton","type","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","ModalHeader","DivStyledAsH4","p","Component","animation","dialogAs","DialogTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","rHyphen","pascalCase","str","toUpperCase","string","_","chr","prefix","BsComponent","as","Tag","resolvedPrefix"],"sourceRoot":""}
{"version":3,"file":"static/js/7653.e573f89b.chunk.js","mappings":"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","sources":["assets/Constant.js","views/mobileView/components/atoms/AMCIcon.js","views/mobileView/components/atoms/Accordion.js","views/mobileView/components/atoms/DisplayRecentlyViewed.js","views/mobileView/components/atoms/MintboxIcon.js","views/mobileView/components/atoms/RiskFunctions.js","views/mobileView/components/atoms/SliderComponent2.js","views/mobileView/components/atoms/addToRecentlyViewed.js","views/mobileView/components/molecules/Cards/PausedMFModal.js","views/mobileView/screens/mintboxpro/InvestScreen/MutualFundDetail.js"],"sourcesContent":["const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst baseImgURL = \"https://d3etfstcuyoos5.cloudfront.net/app-images/imgs/\"\n\nconst amcList = [\n  { Id: 0, Name: \"by AMC\", imgSource: baseImgURL + 'mintbox_logo.svg' },\n  { Id: 1, Name: \"Aditya Birla Sun Life Mutual Fund\", imgSource: baseImgURL + 'ABC.webp' },\n  { Id: 2, Name: \"HDFC Mutual Fund\", imgSource: baseImgURL + 'HDFC.webp' },\n  { Id: 3, Name: \"ICICI Prudential Mutual Fund\", imgSource: baseImgURL + 'ICICI.webp' },\n  { Id: 5, Name: \"SBI Mutual Fund\", imgSource: baseImgURL + 'SBI.webp' },\n  { Id: 6, Name: \"Tata Mutual Fund\", imgSource: baseImgURL + 'Tata.webp' },\n  { Id: 7, Name: \"Invesco Mutual Fund\", imgSource: baseImgURL + 'Invesco.webp' },\n  { Id: 8, Name: \"Quantum Mutual Fund\", imgSource: baseImgURL + 'Quantum.webp' },\n  { Id: 9, Name: \"UTI Mutual Fund\", imgSource: baseImgURL + 'UTI.webp' },\n  { Id: 10, Name: \"IDFC Mutual Fund\", imgSource: baseImgURL + 'IDFC.webp' },\n  { Id: 12, Name: \"DSP Blackrock\", imgSource: baseImgURL + 'DSP.webp' },\n  { Id: 13, Name: \"Kotak Mutual Fund\", imgSource: baseImgURL + 'Kotak.webp' },\n  { Id: 15, Name: \"Mirae Asset Management\", imgSource: baseImgURL + 'Mirae.webp' },\n  { Id: 16, Name: \"Franklin Templeton\", imgSource: baseImgURL + 'Franklin.webp' },\n  { Id: 18, Name: \"Sundaram Mutual Fund\", imgSource: baseImgURL + 'Sundaram.webp' },\n  { Id: 20, Name: \"Motilal Oswal Mutual Fund\", imgSource: baseImgURL + 'Motilal.webp' },\n  { Id: 22, Name: \"HSBC Mutual Fund\", imgSource: baseImgURL + 'HSBC.webp' },\n  { Id: 23, Name: \"Edelweiss Mutual Fund\", imgSource: baseImgURL + 'Edelweiss.webp' },\n  { Id: 24, Name: \"L&T Mutual Fund\", imgSource: baseImgURL + 'L&T.webp' },\n  { Id: 25, Name: \"Axis Mutual Fund\", imgSource: baseImgURL + 'AXIS.webp' },\n  { Id: 26, Name: \"BNP Paribas Mutual Fund\", imgSource: baseImgURL + 'BNP.webp' },\n  { Id: 27, Name: \"IIFL Mutual Fund\", imgSource: baseImgURL + 'IIFL.webp' },\n  { Id: 28, Name: \"Taurus Mutual Fund\", imgSource: baseImgURL + 'Taurus.webp' },\n  { Id: 31, Name: \"Baroda Mutual Fund\", imgSource: baseImgURL + 'BARODA.webp' },\n  { Id: 34, Name: \"IDBI Mutual Fund\", imgSource: baseImgURL + 'IDBI.webp' },\n  { Id: 36, Name: \"PPFAS Mutual Fund\", imgSource: baseImgURL + 'PPFAS.webp' },\n  { Id: 37, Name: \"JM Financials Mutual Fund\", imgSource: baseImgURL + 'JM.webp' },\n  { Id: 38, Name: \"LIC Nomura Mutual Fund\", imgSource: baseImgURL + 'LIC.webp' },\n  { Id: 39, Name: \"Canara Robeco Mutual Fund\", imgSource: baseImgURL + 'CANARA.webp' },\n  { Id: 40, Name: \"Principal Mutual Fund\", imgSource: baseImgURL + 'Principal.webp' },\n  { Id: 41, Name: \"Indiabull Mutual Fund\", imgSource: baseImgURL + 'Indiabulls.webp' },\n  { Id: 42, Name: \"Mahindra Manulife Mutual Fund\", imgSource: baseImgURL + 'Mahindra.webp' },\n  { Id: 45, Name: \"Bharti AXA Mutual Fund\", imgSource: baseImgURL + 'BOI.webp' },\n  { Id: 56, Name: \"Nippon India Mutual Fund\", imgSource: baseImgURL + 'Nippon.webp' },\n  { Id: 57, Name: \"PGIM India Mutual Fund\", imgSource: baseImgURL + 'PGIM.webp' },\n  { Id: 58, Name: \"Navi Mutual Fund\", imgSource: baseImgURL + 'NAVI.webp' },\n  { Id: 59, Name: \"Shriram Mutual Fund\", imgSource: baseImgURL + 'Shriram.webp' },\n  { Id: 60, Name: \"Union KBC Mutual Fund\", imgSource: baseImgURL + 'Union.webp' },\n  { Id: 61, Name: \"Yes Mutual Fund\", imgSource: baseImgURL + 'Yes.webp' },\n  { Id: 62, Name: \"ITI Mutual Fund\", imgSource: baseImgURL + 'ITI.webp' },\n  { Id: 63, Name: \"Quant Mutual Fund\", imgSource: baseImgURL + 'Quant.webp' },\n  { Id: 64, Name: \"Trust Mutual Fund\", imgSource: baseImgURL + 'Trust.webp' },\n  { Id: 65, Name: \"LIC Mutual Fund\", imgSource: baseImgURL + 'LIC.webp' },\n  { Id: 66, Name: \"ICICI Mutual Fund\", imgSource: baseImgURL + 'ICICI.webp' },\n  { Id: 67, Name: \"Mirae Asset Mutual Fund\", imgSource: baseImgURL + 'Mirae.webp' },\n  { Id: 68, Name: \"Kotak Mahindra Mutual Fund\", imgSource: baseImgURL + 'Kotak.webp' },\n\n]\n\nexport {amcList ,baseImgURL, monthNames};\n","import React from 'react';\nimport { amcList } from '../../../../assets/Constant';\n\nfunction AMCIcon({ amcName, type = \"normal\", height, width }) {\n\n    return (\n        <div style={{ alignSelf: \"flex-start\" }}>\n            <img\n                src={(amcList.filter((s) => s.Name === amcName)).length !== 0 ? (amcList.filter((s) => s.Name === amcName))[0].imgSource : amcList[0].imgSource}\n                style={{\n                    height: height,\n                    width: width\n                }}\n            />\n        </div>\n    );\n}\n\nexport default React.memo(AMCIcon)","import React from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\n\n\nexport default function CustomAccordion({accordionArray}) {\n\n  return (\n    <Accordion flush>\n      {\n        accordionArray.map(item => {\n          return <Accordion.Item eventKey={item.key} key={item.key}>\n            <Accordion.Header>{item.title}</Accordion.Header>\n            <Accordion.Body>{item.body}</Accordion.Body>\n          </Accordion.Item>\n        })\n      }\n      <style type=\"text/css\">\n        {`\n         .accordion{\n           border-top: 1px solid var(--light);\n         }\n         .accordion-item{\n           border:none;\n          border-bottom: 1px solid var(--light);\n         }\n         .accordion-button{\n          font-size:14px;\n          font-weight:400;\n          color: var(--secondaryGreen);\n          background-color: var(--white) !important;\n          padding:4%;\n          box-shadow:none;\n         }\n         .accordion-button:focus{\n          outline:none;\n          box-shadow: none;\n         }\n         .accordion-button::after{\n            color: var(--secondaryGreen);\n         }\n         .accordion-button:not(.collapsed){\n           color: var(--secondaryGreen);\n           font-weight:500;\n           box-shadow:none;\n         }\n         .accordion-body{\n           padding:0;\n         }\n        `}\n      </style>\n    </Accordion>\n  );\n}\n","import React from 'react'\nimport db from \"libs/db\";\nimport SliderComponent2 from './SliderComponent2';\n\nexport default function DisplayRecentlyViewed({navigation,header,type,currentFundId = ''}) {\n\n    const [funds,setFunds] = React.useState([])\n    \n    React.useEffect(()=>{\n        const keyName = type === 1 ? 'ETFs' : type === 2 ? 'MutualFunds' : type === 3 ? 'Mintboxes' : ''\n        db.get(db.model.recentlyViewed).then(p => {\n            if (p === null) {\n                setFunds([])\n            } else {\n                setFunds(p[keyName].filter(f=>f.ID !== currentFundId)) // remove current fund\n            } \n        })\n    },[])\n        \n    const recentlyViewed = {\n        'header': header,\n        \"description\": \"\",\n        \"content\": funds\n    }\n    if(funds.length === 0){\n        return null\n    }\n    return <SliderComponent2 navigation={navigation} type=\"recentlyViewed\" component={recentlyViewed}/>\n}","import { baseImgURL } from 'assets/Constant';\nimport React from 'react'\nimport cssVar from \"views/mobileView/styles\";\nimport { RiskColor } from './RiskFunctions';\n\nfunction MintboxIcon({risk,height,width}) {\n  return(\n    <div style={{ display:'flex', border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),padding:`calc(${height}*10/100) 0`, borderRadius: '4px', height, width, backgroundColor: RiskColor(risk)}}>\n        <img src={baseImgURL+'wealth-creators.webp'} style={{height: `calc(${height}*80/100)`,margin:'auto'}}/>\n    </div>\n  )\n}\n\nexport default React.memo(MintboxIcon)","import cssVar from \"views/mobileView/styles\"\n\nconst RiskFormat = (riskID) => {\n    switch(riskID){\n        case 1 : return'Super conservative'\n        case 2 : return'Conservative'\n        case 3 : return'Moderate'\n        case 4 : return'Aggressive'\n        case 5 : return'Super aggressive'\n        case 6 : return'Very aggressive'\n        default: return ''\n    }\n}\n\nconst RiskColor = (riskID) => {\n    switch(riskID){\n        case 1 : return cssVar.getPropertyValue('--lowestRisk')\n        case 2 : return cssVar.getPropertyValue('--conservativeRisk')\n        case 3 : return cssVar.getPropertyValue('--moderateRisk')\n        case 4 : return cssVar.getPropertyValue('--secondHeighestRisk')\n        case 5 : return cssVar.getPropertyValue('--highestRisk')\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\n\nconst RiskTextColor = (riskID) => {\n    switch(riskID){\n        case 1 : return '#3395FF'\n        case 2 : return cssVar.getPropertyValue('--darkGreen')\n        case 3 : return cssVar.getPropertyValue('--gold')\n        case 4 : return cssVar.getPropertyValue('--internationalEquity')\n        case 5 : return '#FF5A5F'\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\nexport {RiskFormat,RiskColor,RiskTextColor}","import React from \"react\";\nimport cssVar from \"views/mobileView/styles\";\nimport { AiFillRightCircle, AiOutlineRight } from 'react-icons/ai'\nimport MintboxIcon from \"./MintboxIcon\";\nimport AMCIcon from \"./AMCIcon\";\nimport { CurrencyFormat } from \"./CurrencyFormat\";\nimport { baseImgURL } from \"assets/Constant\";\nexport default function SliderComponent({ navigation, type, fundType, component: { header = \"\", description = \"\", content, right, rightAction = () => { } } }) {\n    const renderRightSide = () => {\n        switch (right) {\n            case 'See all':\n                return <span className=\"greenChipHeader\">See all <AiOutlineRight size={8} /></span>\n            case 'All':\n                return <span className=\"greenChipHeader\">All funds <AiOutlineRight size={8} /></span>\n            case 'More':\n                return <span className=\"greenChipHeader\">More <AiOutlineRight size={8} /></span>\n            default:\n                return <></>;\n        }\n    };\n    const box_card = (slide) => {\n        let headerColor = ''\n        let textColor = ''\n        let backgroundColor = '';\n        let buttonColor = '';\n        let buttonTextColor = ''\n        switch (slide.Theme) {\n            case \"DARKGREEN\": {\n                headerColor = cssVar.getPropertyValue('--white')\n                textColor = cssVar.getPropertyValue('--subtle')\n                backgroundColor = cssVar.getPropertyValue('--darkGreen')\n                buttonColor = cssVar.getPropertyValue('--primaryGreen')\n                buttonTextColor = cssVar.getPropertyValue('--darkGreen')\n                break;\n            }\n            case \"GREEN\": {\n                headerColor = cssVar.getPropertyValue('--black')\n                textColor = cssVar.getPropertyValue('--grey')\n                backgroundColor = cssVar.getPropertyValue('--lighter')\n                buttonColor = cssVar.getPropertyValue('--white')\n                buttonTextColor = cssVar.getPropertyValue('--secondaryGreen')\n                break;\n            }\n            default: {\n                headerColor = cssVar.getPropertyValue('--black')\n                textColor = cssVar.getPropertyValue('--grey')\n                backgroundColor = cssVar.getPropertyValue('--lighter')\n                buttonColor = cssVar.getPropertyValue('--white')\n                buttonTextColor = cssVar.getPropertyValue('--secondaryGreen')\n            }\n        }\n        return (<div\n            key={slide.UID}\n            style={{\n                marginRight: \"4%\",\n                padding: \"4% 4% 0 4%\",\n                border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),\n                borderRadius: '8px',\n                backgroundColor: backgroundColor,\n                display: \"inline-flex\",\n                flexDirection: \"column\",\n                width: content?.length === 1 ? \"96%\" : \"85%\",\n                whiteSpace: \"normal\"\n            }}\n        >\n            <div className='header1dark' style={{ marginBottom: \"4%\",color: headerColor }}>\n                {slide.SubTitle}\n            </div>\n            <div className='bodyTextLight' style={{marginBottom: \"4%\",lineHeight:\"21px\", color: textColor, width: \"85%\"}}>\n                {slide.Description}\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <div style={{ width: \"70%\", display: \"flex\", alignItems: \"flex-end\", marginBottom:'4%' }}>\n                    <button className=\"solidCardButton\"\n                        style={{\n                            borderColor: buttonTextColor,\n                            border: '1px solid '+ buttonTextColor,\n                            color: buttonTextColor,\n                            backgroundColor: buttonColor,\n                        }}\n                        onClick={() => {\n                            if(slide.onClick){\n                                slide.onClick()\n                            }\n                            else if(slide.ActionTarget !== ''){\n                                var a= JSON.parse(JSON.parse(slide.ActionTarget))\n                                navigation.push(a)\n                            }\n                        }}\n                    >\n                        {slide.ActionText}\n                    </button>\n                </div>\n                <div style={{ width: \"30%\", position: \"relative\", textAlign:'right' }}>\n                    <img style={{ maxWidth: \"100%\", height: \"80px\", position:'absolute',right:0, bottom:0 }} src={slide.URL || baseImgURL+'SVG12.svg'} alt=\"\" />\n                </div>\n            </div>\n        </div>)\n    }\n    const recently_viewed = (slide) => {\n        return (<div\n            key={slide.ID}\n            onClick={() => {\n                if (slide.type === 1) {\n                    navigation.push(\"/ETF-detail/\" + slide.ID)\n                } else if (slide.type === 2) {\n                    navigation.push(\"/fund-detail/\" + slide.ID)\n                } else if (slide.type === 3) {\n                    navigation.push(\"/mintbox-detail/\" + slide.ID)\n                }\n            }}\n            style={{\n                marginRight: \"4%\",\n                padding: \"4%\",\n                border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),\n                borderRadius: '8px',\n                backgroundColor: cssVar.getPropertyValue(\"--white\"),\n                display: \"inline-flex\",\n                flexDirection: \"column\",\n                width: content?.length === 1 ? \"96%\" : \"80%\",\n                minHeight: slide.type===3?\"160px\":\"140px\",\n                whiteSpace: \"normal\",\n            }}\n        >\n            <div style={{display:\"flex\",justifyContent:'space-between',marginBottom:\"4%\"}}>\n                {\n                    slide.type === 3?\n                    <MintboxIcon risk={slide.RiskLevel} height='40px' width='40px'/>\n                    :\n                    <AMCIcon amcName={slide.AMCName} height='40px' width='40px' />\n                }\n                <div>\n                    <div className=\"smallTextLight\" style={{border:\"1px solid \"+cssVar.getPropertyValue('--light'),padding:\"4px 8px\",borderRadius:\"4px\",whiteSpace:\"nowrap\"}}>\n                        <img src={baseImgURL+'coin.webp'} style={{width:\"12px\",height:\"12px\",marginRight:\"6px\"}} />{slide.type !==1? 'Min investment ':'Latest NAV ' }{CurrencyFormat(slide.MinInv,'long',2)}\n                    </div>\n                </div>\n            </div>\n            <div style={{ display: \"flex\",marginBottom:\"3%\",gap:'4%' }}>\n                <div className=\"header2dark lineClamp\" style={{ flex: '1'}}>\n                    {slide.Name}\n                </div>\n                <div>\n                    <div className=\"smallTextLight\">5Y CAGR</div>\n                    <div className=\"header2dark\" style={{color: cssVar.getPropertyValue(\"--secondaryGreen\") }}>{Number(slide.XIRR).toFixed(2) + \" %\"}</div>\n                </div>\n            </div>\n            <div className=\"smallTextLight lineClamp\">\n                {\n                    slide.type === 1 || slide.type === 2 ?\n                            slide.Category\n                            :\n                            slide.type === 3 ?\n                                slide.About\n                                :\n                                ''\n                }\n            </div>\n        </div>)\n    }\n    const fund_card = (slide, fundType, i) => {\n        return (<div\n            key={i}\n            onClick={() => {\n                if (fundType === 1) {\n                    navigation.push(\"/ETF-detail/\" + slide.Symbol)\n                } else if (fundType === 2) {\n                    navigation.push(\"/fund-detail/\" + slide.FundCode)\n                } else if (fundType === 3) {\n                    navigation.push(\"/mintbox-detail/\" + slide.MintboxId)\n                }\n            }}\n            style={{\n                marginRight: \"4%\",\n                padding: \"4%\",\n                border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),\n                borderRadius: '8px',\n                backgroundColor: cssVar.getPropertyValue(\"--white\"),\n                display: \"inline-flex\",\n                flexDirection: \"column\",\n                width: \"80%\",\n                minHeight: \"160px\",\n                whiteSpace: \"normal\",\n            }}\n        >\n\n            <div style={{display:\"flex\",justifyContent:'space-between',marginBottom:\"4%\"}}>\n                {\n                    fundType === 3?\n                    <MintboxIcon risk={slide.RiskLevel} height='40px' width='40px'/>\n                    :\n                    <AMCIcon amcName={slide.AMCName} height='40px' width='40px' />\n                }\n                <div>\n                    <div className=\"smallTextLight\" style={{border:\"1px solid \"+cssVar.getPropertyValue('--light'),padding:\"4px 8px\",borderRadius:\"4px\",whiteSpace:\"nowrap\"}}>\n                        <img src={baseImgURL+'coin.webp'} style={{width:\"12px\",height:\"12px\",marginRight:\"6px\"}} />Min investment {CurrencyFormat(slide.MinSIPAmount)}\n                    </div>\n                </div>\n            </div>\n            <div style={{ display: \"flex\",marginBottom:\"3%\",gap:'4%' }}>\n                <div className=\"header2dark lineClamp\" style={{ flex: '1'}}>\n                    {fundType === 1 ? slide.ETFName : fundType === 2 ? slide.FundName : fundType === 3 ? slide.MintboxName : \"\"}\n                </div>\n                <div>\n                    <div className=\"smallTextLight\">5Y CAGR</div>\n                    <div className=\"header2dark\" style={{color: cssVar.getPropertyValue(\"--secondaryGreen\") }}>{Number(slide.XIRR).toFixed(2) + \" %\"}</div>\n                </div>\n            </div>\n            <div className=\"smallTextLight lineClamp\">\n                {\n                    fundType === 1 || fundType === 2 ?\n                            slide.Category\n                            :\n                            fundType === 3 ?\n                                slide.About\n                                :\n                                ''\n                }\n            </div>\n        </div>)\n    }\n    const small_box = (slide) => (\n\n        <div\n            key={slide.UID}\n            style={{\n                borderRadius: 6, border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),\n                backgroundColor: slide.bgColor, padding: 16, width: 120, minHeight: 128,\n                marginRight: \"4%\", display: \"inline-flex\", flexDirection: \"column\", whiteSpace: \"normal\"\n            }}\n            onClick={() => slide.onClick()}\n        >\n            <div style={{ fontSize: 14, flex: \"1\" }}>{slide.heading}</div>\n            <AiFillRightCircle\n                size={20}\n                style={{\n                    color: slide.btnColor,\n                    alignSelf: \"flex-start\",\n                }}\n            />\n        </div>\n\n    )\n    if (content.length === 0) {\n        return <></>\n    }\n    else return (\n        <div style={{ margin: \"4% 0\" }}>\n            {header ?\n                <div style={{ margin: \"4% 4% 0 4%\", display: 'flex', alignItems: 'center', gap:\"4%\" }}>\n                    <div className='header1dark' style={{ flex: 1 }}>{header}</div>\n                    <div style={{ margin: 'auto 0 auto 10px' }} onClick={() => rightAction()}>{renderRightSide()}</div>\n                </div> \n                : \"\"}\n            {description && type !== \"videoView\" ?\n                <div className='bodyTextLight' style={{ margin: \"1% 4% 0 4%\"}} >\n                    {/* <ReadMoreText text={description} /> */}\n                    {description}\n                </div>\n                : \"\"}\n            <div className=\"hiddden-scrollbar\" style={{ paddingLeft: \"4%\",marginTop:'4%' }}>\n                {type === \"boxCard\" && content.map(slide => (\n                    box_card(slide)\n                ))}\n                {type === \"recentlyViewed\" && content.map(slide => (\n                    recently_viewed(slide)\n                ))}\n                {type === \"smallBox\" && content.map(slide => (\n                    small_box(slide)\n                ))}\n                {type === \"fundCard\" && content.map((slide, i) => (\n                    fund_card(slide, fundType, i)\n                ))}\n            </div>\n        </div>\n    )\n}\n\n","import db from \"libs/db\";\n\nconst maxLength = 5;\n\nexport default function addToRecentlyViewed(fund) {\n    const keyName = fund.type === 1 ? 'ETFs' : fund.type === 2 ? 'MutualFunds' : fund.type === 3 ? 'Mintboxes' : ''\n    if (keyName === '') { return }\n    db.get(db.model.recentlyViewed).then(async (p) => {\n        if (p === null) {\n            p = {\n                'ETFs': [],\n                'MutualFunds': [],\n                'Mintboxes': []\n            }\n        }\n        else if(p[keyName].some(f=>f.ID === fund.ID)){\n            p[keyName] = p[keyName].filter(f=>f.ID !== fund.ID) // remove existing fund\n        } else if (p[keyName].length >= maxLength) {\n            p[keyName].pop() // removes last fund\n        }\n        p[keyName].unshift(fund) // adds fund to front of array\n        await db.set(db.model.recentlyViewed, JSON.stringify(p))\n    })\n}","import { baseImgURL } from \"assets/Constant\"\nimport Modal from \"react-bootstrap/Modal\"\nimport cssVar from \"views/mobileView/styles\"\n\nexport default function PauseMFModal({navigation,showModal, onClose}) {\n\n    return (\n        <Modal\n            className=\"bottom-drawer\"\n            show={showModal}\n            onHide={() => onClose()}\n            keyboard={false}\n        >\n            <Modal.Body>\n                <div className='header1dark' style={{marginBottom:'4%'}}>Attention</div>\n                <div style={{display:'flex',gap:'2%'}}>\n                    <div style={{flex:1}}>\n                        <div className=\"bodyTextLight\">The mutual fund investments are currently paused. We will let you know when you can invest in mutual funds</div>\n                        <br/>\n                        <div className=\"bodyTextLight\">\n                            Meanwhile, you can invest in <span onClick={()=>navigation.push('/Invest')} style={{borderBottom:'1px solid '+cssVar.getPropertyValue('--secondaryGreen') }}className='secondaryGreen'>Smart mintboxes</span> and <span onClick={()=>navigation.push('/Invest/ETFs')} style={{borderBottom:'1px solid '+cssVar.getPropertyValue('--secondaryGreen') }}className='secondaryGreen'>ETFs</span></div>\n                    </div>\n                    <img src={baseImgURL+'activate_mutual_funds.webp'} style={{ height:'150px'}}/>\n                </div>\n                \n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"solidButton\" onClick={() => onClose()}>\n                    Close\n                </button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n","import React, { useState } from 'react'\nimport AdminServices from 'services/api/AdminServices'\nimport MainHeader from \"views/mobileView/components/molecules/Headers/MainHeader\";\nimport cssVar from 'views/mobileView/styles';\nimport { toast } from 'react-toastify';\nimport db from 'libs/db';\nimport CustomAccordion from 'views/mobileView/components/atoms/Accordion';\nimport { Chip } from '@mui/material';\nimport { CurrencyFormat } from 'views/mobileView/components/atoms/CurrencyFormat';\nimport addToRecentlyViewed from 'views/mobileView/components/atoms/addToRecentlyViewed';\nimport DisplayRecentlyViewed from 'views/mobileView/components/atoms/DisplayRecentlyViewed';\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport AMCIcon from 'views/mobileView/components/atoms/AMCIcon';\nimport PauseMFModal from 'views/mobileView/components/molecules/Cards/PausedMFModal';\nimport PerformanceChart from 'views/mobileView/components/molecules/Cards/PerformanceChart';\n\nfunction MutualFundDetail(props) {\n    const FUNDCODE = props.match.params.FundId;\n\n    const [fund, setFund] = useState({});\n    const [peerReturns, setPeerReturns] = useState({})\n    const [rollingReturns, setRollingReturns] = useState({})\n    const [topHoldings, setTopHoldings] = useState([])\n    const [sectorHoldings, setSectorHoldings] = useState([])\n    const [isWatchlisted, setIsWatchlisted] = useState(false);\n    const [user, setUser] = useState({})\n    const [fundNotFound,setFundNotFound] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [showPausedMfModal, setShowPausedMFModal] = React.useState(false)\n\n    const defaultChartOptions = {\n        title: {\n            text: null\n        },\n        yAxis: {\n            title: {\n                text: ''\n            },\n            endOnTick: true,\n            startOnTick: true,\n            labels: {\n                align: 'left'\n            }\n        },\n\n        xAxis: {\n            type: 'datetime',\n            dateTimeLabelFormats: {\n                day: '%d %b %Y'    //ex- 01 Jan 2016\n            },\n            labels: {\n                format: \"{value:%Y}\",\n                style: {\n                    color: \"#ababab\",\n                    fontSize: \"12px\"\n                }\n            },\n            crosshair: {\n                width: 1,\n                color: 'grey'\n            },\n            lineColor: \"#e5e5e5\",\n            tickLength: 0,\n            startOnTick: true,\n            // endOnTick: false,\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        plotOptions: {\n            series: {\n                label: {\n                    connectorAllowed: false\n                },\n                turboThreshold: 51000,//larger threshold or set to 0 to disable\n                marker: {\n                    enabled: false\n                }\n            }\n        },\n        tooltip: {\n            shared: true\n        },\n        credits: {\n            enabled: false\n        },\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 400\n                },\n            }]\n        }\n    }\n    React.useEffect(() => {\n        loadData();\n    }, [FUNDCODE])\n\n    const loadData = async () => {\n        try {\n            db.get(db.model.user).then(async (p) => {\n                setUser(p.userData)\n                await getWatchlist(p.userData.id)\n                await getMutualFundById().then((fund) => {\n                    if(Object.keys(fund).length){\n                        addToRecentlyViewed({\n                            type: 2,\n                            ID: FUNDCODE,\n                            Name: fund.SchemeName,\n                            XIRR: fund.FiveYrReturn,\n                            Category: fund.SubCategoryName,\n                            AMCName: fund.AMCName,\n                            MinInv: fund.MinSIPInvestAmount\n                        })\n                        getPeerReturnsByFundCode();\n                        // getRollingReturnsByFundCode();\n                        getTopHoldings();\n                        getSectorHoldings();\n                    } else {\n                        setFundNotFound(true)\n                    }\n                })\n                setLoading(false)\n            });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const getMutualFundById = async () => {\n        try {\n            let res = await AdminServices.getFundByFundCode(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get MF by id API\", res.data)\n                setFund(res.data)\n                return res.data\n            }\n            else {\n                setFund({})\n                toast.error(\"Could not find fund\")\n                return {}\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n\n    const getPeerReturnsByFundCode = async () => {\n        try {\n            let res = await AdminServices.getPeerReturnsByFundCode(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get Peer Returns by id API\", res.data)\n                setPeerReturns(res.data)\n            }\n            else {\n                setPeerReturns({})\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n    const getRollingReturnsByFundCode = async () => {\n        try {\n            let res = await AdminServices.getRollingReturnsByFundCode(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get Rolling Returns by id API\", res.data)\n                setRollingReturns(res.data)\n            }\n            else {\n                setRollingReturns({})\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n\n    const getTopHoldings = async () => {\n        try {\n            let res = await AdminServices.getTopHoldings(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get getTopHoldings by id API\", res.data)\n                setTopHoldings(res.data)\n            }\n            else {\n                setTopHoldings({})\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n\n    const getSectorHoldings = async () => {\n        try {\n            let res = await AdminServices.getSectorHoldings(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get getSectorHoldings by id API\", res.data)\n                setSectorHoldings(res.data)\n            }\n            else {\n                setSectorHoldings({})\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n    \n    const getWatchlist = async (id) => {\n        try {\n            db.get(db.model.watchlist).then(async (p) => {\n                if (p === null) {\n                    let res = await AdminServices.getWatchlist(id).then(res => res);\n                    if (res.type === true) {\n                        await db.set(db.model.watchlist, JSON.stringify(res.data))\n                        setIsWatchlisted(res.data.some(f => f.FundType === 2 && f.FundCode === FUNDCODE))\n                    }\n                } else {\n                    setIsWatchlisted(p.some(f => f.FundType === 2 && f.FundCode === FUNDCODE))\n                }\n            });\n        } catch (error) {\n            toast.error(error);\n        }\n    }\n\n    const updateWatchlist = async () => {\n        const data = {\n            \"clientId\": user.id,\n            \"fundType\": 2,\n            \"fundCode\": FUNDCODE,\n            \"isActive\": isWatchlisted ? 0 : 1\n        }\n        try {\n            let res = await AdminServices.updateWatchlist(data).then(res => res)\n            if (res.type) {\n                setIsWatchlisted(!isWatchlisted)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const Summary = () => {\n        return (\n            <div style={{ background: cssVar.getPropertyValue('--darkGreen'), padding: \"4%\", display: \"flex\", gap: \"4%\" }}>\n                <AMCIcon amcName={fund.AMCName} height=\"42px\" width=\"42px\" />\n                <div style={{ flex: 1 }}>\n                    <div className='header1dark' style={{ color: cssVar.getPropertyValue('--white'), minHeight: \"44px\" }}>{fund.SchemeName}</div>\n                    <div style={{ display: \"flex\", marginTop: \"4%\" }}>\n                        <div style={{ flex: 1 }}>\n                            <div className=\"bodyTextLight\" style={{ color: cssVar.getPropertyValue('--subtle') }}>5Y CAGR</div>\n                            <div className=\"header1dark\" style={{ color: cssVar.getPropertyValue(\"--primaryGreen\") }}>{parseFloat(fund.FiveYrReturn || 0).toFixed(2)} %</div>\n                        </div>\n                        <div style={{ flex: 1 }}>\n                            <div className=\"bodyTextLight\" style={{ color: cssVar.getPropertyValue('--subtle') }}>Category</div>\n                            <div className='header1dark' style={{ color: cssVar.getPropertyValue('--white') }}>{fund.SubCategoryName}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", marginTop: \"4%\" }}>\n                        <div style={{ flex: 1 }}>\n                            <div className=\"bodyTextLight\" style={{ color: cssVar.getPropertyValue('--subtle') }}>NAV</div>\n                            <div className='header1dark' style={{ color: cssVar.getPropertyValue('--white') }}>{CurrencyFormat(fund.NAV, 'long', 2)}</div>\n                        </div>\n                        <div style={{ flex: 1 }}>\n                            <div className=\"bodyTextLight\" style={{ color: cssVar.getPropertyValue('--subtle') }}>Min investment</div>\n                            <div className='header1dark' style={{ color: cssVar.getPropertyValue('--white') }}>{CurrencyFormat(fund.MinSIPInvestAmount, 'long', 2)}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const CompWithPeers = () => {\n        return (\n            <>\n                {Object.keys(peerReturns).length !== 0 ?\n                    <div style={{ textAlign: \"right\", padding: \"4%\" }}>\n                        <div style={{ display: \"flex\", paddingBottom: \"14px\" }}>\n                            <div style={{ flex: 2 }}></div>\n                            <div className='smallTextLight' style={{ flex: 1 }}>6 M</div>\n                            <div className='smallTextLight' style={{ flex: 1 }}>1 Y</div>\n                            <div className='smallTextLight' style={{ flex: 1 }}>3 Y</div>\n                            <div className='smallTextLight' style={{ flex: 1 }}>5 Y</div>\n                        </div>\n                        <div style={{ display: \"flex\", paddingBottom: \"14px\" }}>\n                            <div className='header2dark' style={{ flex: 2, color: cssVar.getPropertyValue('--darkGreen'), textAlign: \"left\" }}>This fund</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Fund6month?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Fund1year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Fund3year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Fund5year?.toFixed(1)}%</div>\n                        </div>\n                        <div style={{ display: \"flex\", paddingBottom: \"14px\" }}>\n                            <div className='header2light' style={{ flex: 2, textAlign: \"left\" }}>Category</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Cat6month?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Cat1year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Cat3year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Cat5year?.toFixed(1)}%</div>\n                        </div>\n                        <div style={{ display: \"flex\", paddingBottom: \"14px\" }}>\n                            <div className='header2dark' style={{ flex: 2, color: cssVar.getPropertyValue('--darkYellow'), textAlign: \"left\" }}>NIFTY 50</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Index6month?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Index1year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Index3year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Index5year?.toFixed(1)}%</div>\n                        </div>\n                    </div>\n                    : \n                    <div className='text-center bodyTextLight my-4'>\n                        Data not avaliable\n                    </div>\n                }\n            </>\n        )\n    }\n    const AUM = () => {\n        return (\n            <>\n                <div style={{ display: \"flex\", padding: \"4%\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>AUM</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.AUM, 'long', 2)} crore</div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Expense ratio</div>\n                        <div className='bodyTextDark'>{parseFloat(fund.ExpenseRatio || 0).toFixed(2)} %</div>\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", padding: \"4%\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Fund manager</div>\n                        <div className='bodyTextDark'>\n                            {\n                                fund?.FundManager?.split(':').map((manager, i) => {\n                                    if (i === 0) { return manager }\n                                    else { return ', ' + manager }\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const RollingReturns = () => {\n        const chipset = [\n            { key: 1, name: \"1 year\" },\n            { key: 3, name: \"3 years\" },\n            { key: 5, name: \"5 years\" },\n            { key: 10, name: \"10 years\" },\n        ]\n        const [duration, setDuration] = React.useState(1);\n        const [graphArray, setGraphArray] = React.useState([]);\n        const [avgRR, setAvgRR] = React.useState();\n        const [sd, setSd] = React.useState();\n\n        React.useEffect(() => {\n            switch (duration) {\n                case 1: setGraphArray(rollingReturns.OneYrRRData);\n                    setAvgRR(rollingReturns.OneYrAvgRR?.toFixed(2));\n                    setSd(rollingReturns.OneYrSD?.toFixed(2));\n                    return;\n                case 3: setGraphArray(rollingReturns.ThreeYrRRData);\n                    setAvgRR(rollingReturns.ThreeYrAvgRR?.toFixed(2));\n                    setSd(rollingReturns.ThreeYrSD?.toFixed(2));\n                    return;\n                case 5: setGraphArray(rollingReturns.FiveYrRRData);\n                    setAvgRR(rollingReturns.FiveYrAvgRR?.toFixed(2));\n                    setSd(rollingReturns.FiveYrSD?.toFixed(2));\n                    return;\n                case 10: setGraphArray(rollingReturns.TenYrRRData);\n                    setAvgRR(rollingReturns.TenYrAvgRR?.toFixed(2));\n                    setSd(rollingReturns.TenYrSD?.toFixed(2));\n                    return;\n                default: setGraphArray([]);\n                    setAvgRR(0);\n                    setSd(0);\n            }\n        }, [duration, rollingReturns])\n\n        const options = {\n            ...defaultChartOptions,\n            series: [\n                {\n                    name: 'Rolling return',\n                    color: cssVar.getPropertyValue('--darkGreen'),\n                    data: graphArray?.map(d => [new Date(d[\"date\"]).getTime(), d[\"rr\"]])\n                },\n                {\n                    name: 'Avg rolling return',\n                    color: '#F5A447',\n                    data: graphArray?.map(d => [new Date(d[\"date\"]).getTime(), parseFloat(avgRR)])\n                },\n            ]\n        }\n        return (\n            <div style={{ padding: \"4%\" }}>\n                {chipset.map((item) => {\n                    return (\n                        <Chip\n                            className={duration === item.key ? \"normalChip selected\" : \"normalChip\"}\n                            key={item.key}\n                            label={item.name}\n                            onClick={() => {\n                                setDuration(item.key)\n                            }}\n                        />\n                    )\n                })}\n                <div className='bodyTextLight' style={{ paddingTop: \"4%\" }}>\n                    Avg rolling return<span style={{ color: cssVar.getPropertyValue('--darkGreen') }}> {avgRR}%</span>\n                </div>\n                <div className='bodyTextLight' style={{ paddingTop: \"2%\" }}>\n                    Standard deviation<span style={{ color: \"#F5A447\" }}> {sd}%</span>\n                </div>\n                {/* <div>\n                    <HighchartsReact\n                        highcharts={Highcharts}\n                        options={options}\n                    />\n                </div> */}\n            </div>\n        )\n    }\n    const MinSubscription = () => {\n        return (\n            <>\n                <div style={{ display: \"flex\", padding: \"4%\", borderBottom: \"1px solid #e5e5e5\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Minimum SIP</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.MinSIPInvestAmount, 'long', 2)}</div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Minimum lumpsum</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.MinLumpsumInvestAmount, 'long', 2)}</div>\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", padding: \"4%\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Minimum redemption</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.MinRedemptionAmount, 'long', 2)}</div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Minimum additional</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.MinSubsequentAmount, 'long', 2)}</div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    const TopHolding = () => {\n        const [selection, setSelection] = useState(0)\n        return (\n            <>\n                <div style={{ display: \"flex\", padding: \"3% 4% 0 4%\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light'), alignItems: \"end\" }}>\n                    <div style={{ flex: 2 }}>\n                        <Chip\n                            style={{ marginRight: \"8%\" }}\n                            className={selection === 0 ? \"specialTab selected\" : \"specialTab\"}\n                            label=\"Companies\"\n                            onClick={() => {\n                                setSelection(0)\n                            }}\n                        />\n                        <Chip\n                            className={selection === 1 ? \"specialTab selected\" : \"specialTab\"}\n                            label=\"Sectors\"\n                            onClick={() => {\n                                setSelection(1)\n                            }}\n                        />\n                    </div>\n                    <div className='header2light' style={{ flex: 1, textAlign: \"right\",  paddingBottom:'2%' }}>\n                        Allocation (%)\n                    </div>\n                </div>\n                {\n                    selection === 0 ?\n                        <>\n                            {\n                                topHoldings?.lenght?\n                                    topHoldings?.map((c, i) => {\n                                        return <div key={i} style={{ display: \"flex\", padding: \"3% 4%\", alignItems: \"center\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }}>\n                                            <div style={{ flex: 2 }}>\n                                                <div className='bodyTextDark'>{c.ShortName}</div>\n                                            </div>\n                                            <div style={{ flex: 1 }}>\n                                                <div className='header1faint' style={{ textAlign: 'right' }}>{Number(c.Percentage).toFixed(1)}%</div>\n                                            </div>\n                                        </div>\n                                    })\n                                    :\n                                    <div className='bodyTextDark' style={{margin:'4%',textAlign:'center'}}>No data Available</div>\n                            }\n                        </>\n                        :\n                        <>\n                            {\n                                sectorHoldings?.length?\n                                    sectorHoldings?.map((s, i) => {\n                                        return <div key={i} style={{ display: \"flex\", padding: \"3% 4%\", alignItems: \"center\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }}>\n                                            <div style={{ flex: 2 }}>\n                                                <div className='bodyTextDark'>{s.Sector}</div>\n                                            </div>\n                                            <div style={{ flex: 1 }}>\n                                                <div className='header1faint' style={{ textAlign: 'right' }}>{Number(s.Percentage).toFixed(1)}%</div>\n                                            </div>\n                                        </div>\n                                    })\n                                    :\n                                    <div className='bodyTextDark' style={{margin:'4%',textAlign:'center'}}>No data Available</div>\n                        }\n                        </>\n                }\n            </>\n        )\n    }\n    const ExitLoad = () => {\n        return (\n            <>\n                <div style={{ display: \"flex\", padding: \"4%\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight'>Exit load</div>\n                        <div className='bodyTextDark'>{fund.ExpenseNote || '-'}</div>\n                        {/* <div className='smallTextLight'>for units in excess of 10% of your investment value</div> */}\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", padding: \"4%\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight'>Lock-in</div>\n                        <div className='bodyTextDark'>{fund.LockIn || 'None'}</div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight'>Taxation</div>\n                        <div className='bodyTextDark'>{fund.TaxTreatment}</div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    const accordionArray = [\n        { key: \"1\", title: \"Comparison with peers\", body: CompWithPeers() },\n        { key: \"2\", title: \"AUM, fund manager and expense ratio\", body: AUM() },\n        // { key: \"4\", title: \"Rolling returns and standard deviation\", body: RollingReturns() },\n        { key: \"5\", title: \"Minimum subscriptions\", body: MinSubscription() },\n        { key: \"6\", title: \"Top holdings in the fund\", body: TopHolding() },\n        { key: \"7\", title: \"Exit load, lock-in and taxation\", body: ExitLoad() },\n    ]\n    const Footer = () => {\n        return (\n            <div className='footer'>\n                <button\n                    className='solidButton'\n                    // onClick={() => props.history.push({\n                    //     pathname: '/portfolio/confirm-invest',\n                    //     state: {\n                    //         fundData: {...fund, MinSIPAmount: fund.MinLumpsumInvestAmount},\n                    //         type: 2\n                    //     }\n                    // })}\n                    onClick={()=>setShowPausedMFModal(true) }\n                >\n                    Invest in this fund\n                </button>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <div className='mainaContainer'>\n                {\n                    loading ?\n                        <>\n                            <MainHeader\n                                header=\"Mutual fund\"\n                                navigation={props.history}\n                            />\n                            <ActivityLoaderMintbox />\n                        </>\n                        :\n                        <>\n                            <MainHeader\n                                header=\"Direct mutual fund\"\n                                isWatchlisted={isWatchlisted}\n                                onWatchlistIconClick={() => { updateWatchlist() }}\n                                right={fundNotFound?'':\"bookmark-share\"}\n                                navigation={props.history}\n                            />\n                            {\n                                fundNotFound?\n                                    <div className='bigTextDark text-center mt-5'>Fund data not available</div>\n                                    :\n                                    <>\n                                        <div className=\"dataContainer px-0\">\n                                            <Summary />\n                                            <PerformanceChart type={2} fundCode={FUNDCODE} />\n\n                                            <CustomAccordion accordionArray={accordionArray} />\n                                            <DisplayRecentlyViewed navigation={props.history} header=\"Recently viewed Mutual Funds\" type={2} currentFundId={FUNDCODE} />\n                                        </div>\n                                        <Footer />\n                                    </>\n                            }\n                            <PauseMFModal navigation={props.history} showModal={showPausedMfModal} onClose={()=>setShowPausedMFModal(false)}/>\n\n                        </>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default MutualFundDetail"],"names":["baseImgURL","amcList","Id","Name","imgSource","AMCIcon","amcName","height","type","width","style","alignSelf","src","s","length","React","CustomAccordion","accordionArray","flush","map","item","eventKey","key","title","body","DisplayRecentlyViewed","navigation","header","currentFundId","funds","setFunds","keyName","db","then","p","filter","f","ID","recentlyViewed","component","MintboxIcon","risk","display","border","cssVar","padding","borderRadius","backgroundColor","RiskColor","margin","RiskFormat","riskID","RiskTextColor","SliderComponent","fundType","description","content","right","rightAction","alignItems","gap","className","flex","onClick","size","renderRightSide","paddingLeft","marginTop","slide","headerColor","textColor","buttonColor","buttonTextColor","Theme","marginRight","flexDirection","whiteSpace","marginBottom","color","SubTitle","lineHeight","Description","borderColor","ActionTarget","a","JSON","parse","push","ActionText","position","textAlign","maxWidth","bottom","URL","alt","UID","box_card","minHeight","justifyContent","RiskLevel","AMCName","CurrencyFormat","MinInv","Number","XIRR","toFixed","Category","About","recently_viewed","bgColor","fontSize","heading","btnColor","small_box","i","Symbol","FundCode","MintboxId","MinSIPAmount","ETFName","FundName","MintboxName","fund_card","addToRecentlyViewed","fund","some","pop","unshift","stringify","PauseMFModal","showModal","onClose","show","onHide","keyboard","borderBottom","props","FUNDCODE","match","params","FundId","useState","setFund","peerReturns","setPeerReturns","topHoldings","setTopHoldings","sectorHoldings","setSectorHoldings","isWatchlisted","setIsWatchlisted","user","setUser","fundNotFound","setFundNotFound","loading","setLoading","showPausedMfModal","setShowPausedMFModal","loadData","userData","getWatchlist","id","getMutualFundById","Object","keys","SchemeName","FiveYrReturn","SubCategoryName","MinSIPInvestAmount","getPeerReturnsByFundCode","getTopHoldings","getSectorHoldings","error","console","log","AdminServices","res","data","toast","FundType","updateWatchlist","Summary","background","parseFloat","NAV","paddingBottom","Fund6month","Fund1year","Fund3year","Fund5year","Cat6month","Cat1year","Cat3year","Cat5year","Index6month","Index1year","Index3year","Index5year","CompWithPeers","AUM","ExpenseRatio","FundManager","split","manager","MinLumpsumInvestAmount","MinRedemptionAmount","MinSubsequentAmount","selection","setSelection","label","lenght","c","ShortName","Percentage","Sector","TopHolding","ExpenseNote","LockIn","TaxTreatment","Footer","history","onWatchlistIconClick","fundCode"],"sourceRoot":""}
{"version":3,"file":"static/js/1019.b107116c.chunk.js","mappings":"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","sources":["views/mobileView/route/index.js","../node_modules/react-router-dom/modules/BrowserRouter.js","../node_modules/react-router-dom/modules/HashRouter.js","../node_modules/react-router-dom/modules/utils/locationUtils.js","../node_modules/react-router-dom/modules/Link.js","../node_modules/react-router-dom/modules/NavLink.js","../node_modules/tiny-warning/dist/tiny-warning.esm.js"],"sourcesContent":["import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { Route } from 'react-router-dom/cjs/react-router-dom.min';\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport { lazy, Suspense } from 'react';\n// Default fallback screen\nconst Home = lazy(()=>import('views/marketing/Home'));\nconst QRCode = lazy(()=>import('views/marketing/QRCode'));\nconst TermConditions = lazy(()=>import('views/marketing/TermConditions'));\nconst UnderstandLesson = lazy(()=>import('views/marketing/UnderstandLessons'));\nconst AuthProtectedRoutes = lazy(()=>import('views/mobileView/components/molecules/Routers/AuthProtectedRoutes'));\nconst ProtectedRoutes = lazy(()=>import('views/mobileView/components/molecules/Routers/ProtectedRoutes'));\nconst AllFunds = lazy(()=>import('../../marketing/AllFundsMobile'));\nconst CreateWealth = lazy(()=>import('../../marketing/CreateWealth'));\n// Marketing screens\nconst DesignMintbox = lazy(()=>import('../../marketing/DesignMintbox'));\nconst FinancialGoals = lazy(()=>import('../../marketing/FinancialGoals'));\nconst InvestingGenius = lazy(()=>import('../../marketing/InvestingGenius'));\nconst InvestInMintbox = lazy(()=>import('../../marketing/InvestInMintbox'));\nconst LongWealthCreator = lazy(()=>import('../../marketing/LongWealthCreator'));\nconst Privacy = lazy(()=>import('../../marketing/Privacy'));\nconst ShortWealthCreator = lazy(()=>import('../../marketing/ShortWealthCreator'));\nconst MarketingRoutes = lazy(()=>import('../components/molecules/Routers/MarketingRoutes'));\nconst MintboxBlack = lazy(()=>import('../../marketing/MintboxBlack'));\nconst LoginOTPScreen = lazy(()=>import('../screens/mintboxpro/AuthScreen/LoginOTPScreen'));\nconst NameScreen = lazy(()=>import('../screens/mintboxpro/AuthScreen/NameScreen'));\nconst OtherDetail = lazy(()=>import('../screens/mintboxpro/AuthScreen/OtherDetail'));\n// Auth screens\nconst SignupScreen = lazy(()=>import('../screens/mintboxpro/AuthScreen/SignupScreen'));\nconst VerifyOTP1 = lazy(()=>import('../screens/mintboxpro/AuthScreen/VerifyOTP1'));\nconst VerifyOTP2 = lazy(()=>import('../screens/mintboxpro/AuthScreen/VerifyOTP2'));\n// Build your own mintbox\nconst BuildMintboxIndex = lazy(()=>import('../screens/mintboxpro/BuildYourOwnMintbox'));\nconst BuildMintbox = lazy(()=>import('../screens/mintboxpro/BuildYourOwnMintbox/BuildMintbox'));\nconst MintboxAllocation = lazy(()=>import('../screens/mintboxpro/BuildYourOwnMintbox/MintboxAllocation'));\nconst NameMintbox = lazy(()=>import('../screens/mintboxpro/BuildYourOwnMintbox/NameMintbox'));\nconst RebalancingStrategy = lazy(()=>import('../screens/mintboxpro/BuildYourOwnMintbox/RebalancingStrategy'));\nconst ReplaceETF = lazy(()=>import('../screens/mintboxpro/BuildYourOwnMintbox/ReplaceETF'));\n// Dashboard screen\nconst DashboardScreen = lazy(()=>import('../screens/mintboxpro/DashboardScreen'));\n// Goal screens\nconst GoalsDashboard = lazy(()=>import('../screens/mintboxpro/GoalScreens'));\nconst GoalRelation = lazy(()=>import('../screens/mintboxpro/GoalScreens/Custom/GoalRelation'));\nconst GoalSteps = lazy(()=>import('../screens/mintboxpro/GoalScreens/GoalSteps'));\nconst GoalDue = lazy(()=>import('../screens/mintboxpro/GoalScreens/GS1_GoalDue'));\nconst PresentCost = lazy(()=>import('../screens/mintboxpro/GoalScreens/GS2_PresentCost'));\nconst InvestToday = lazy(()=>import('../screens/mintboxpro/GoalScreens/GS3_InvestToday'));\nconst MonthlyIncrease = lazy(()=>import('../screens/mintboxpro/GoalScreens/GS4_MonthlyIncrease'));\nconst GoalName = lazy(()=>import('../screens/mintboxpro/GoalScreens/GS5_GoalName'));\nconst GoalDetails = lazy(()=>import('../screens/mintboxpro/GoalScreens/GS6_GoalDetails'));\nconst RecommendedMintbox = lazy(()=>import('../screens/mintboxpro/GoalScreens/GS7_RecommendedMintbox'));\nconst AchieveGoal = lazy(()=>import('../screens/mintboxpro/GoalScreens/GS8_AchieveGoal'));\nconst PresentAge = lazy(()=>import('../screens/mintboxpro/GoalScreens/Retirement/R1_PresentAge'));\nconst RetirementAge = lazy(()=>import('../screens/mintboxpro/GoalScreens/Retirement/R2_RetirementAge'));\nconst MonthlyExpense = lazy(()=>import('../screens/mintboxpro/GoalScreens/Retirement/R3_MonthlyExpense'));\nconst IncludePf = lazy(()=>import('../screens/mintboxpro/GoalScreens/Retirement/R4_IncludePf'));\nconst PfBalance = lazy(()=>import('../screens/mintboxpro/GoalScreens/Retirement/R5_PfBalance'));\nconst PfMonthlyContribution = lazy(()=>import('../screens/mintboxpro/GoalScreens/Retirement/R6_PfMonthlyContribution'));\n// Investment Flows\nconst ConfirmAndInvestScreen = lazy(()=>import('../screens/mintboxpro/InvestmentFlows/ConfirmAndInvestScreen'));\nconst Failed = lazy(()=>import('../screens/mintboxpro/InvestmentFlows/Failed'));\nconst RedeemETF = lazy(()=>import('../screens/mintboxpro/InvestmentFlows/RedeemETF'));\nconst RedeemGoal = lazy(()=>import('../screens/mintboxpro/InvestmentFlows/RedeemGoal'));\nconst RedeemMF = lazy(()=>import('../screens/mintboxpro/InvestmentFlows/RedeemMF'));\nconst RedeemMintbox = lazy(()=>import('../screens/mintboxpro/InvestmentFlows/RedeemMintbox'));\nconst Success = lazy(()=>import('../screens/mintboxpro/InvestmentFlows/Success'));\nconst ETFDetail = lazy(()=>import('../screens/mintboxpro/InvestScreen/ETFDetail'));\nconst FundList = lazy(()=>import('../screens/mintboxpro/InvestScreen/FundList'));\nconst FundSearch = lazy(()=>import('../screens/mintboxpro/InvestScreen/FundSearch'));\n// invest screens\nconst InvestInETFs = lazy(()=>import('../screens/mintboxpro/InvestScreen/InvestInETFs'));\nconst InvestInMFs = lazy(()=>import('../screens/mintboxpro/InvestScreen/InvestInMFs'));\nconst InvestInMintboxes = lazy(()=>import('../screens/mintboxpro/InvestScreen/InvestInMintboxes'));\nconst MintboxDetail = lazy(()=>import('../screens/mintboxpro/InvestScreen/MintboxDetail'));\nconst MutualFundDetail = lazy(()=>import('../screens/mintboxpro/InvestScreen/MutualFundDetail'));\nconst LinkDemat = lazy(()=>import('../screens/mintboxpro/LinkDemat'));\n// menu screens\nconst MenuScreen = lazy(()=>import('../screens/mintboxpro/MenuScreens'));\nconst MFAccountDetails = lazy(()=>import('../screens/mintboxpro/MenuScreens/MFAccountDetails'));\nconst Notifications = lazy(()=>import('../screens/mintboxpro/MenuScreens/Notifications'));\nconst ConfirmNewPin = lazy(()=>import('../screens/mintboxpro/MenuScreens/PIN/ConfirmNewPin'));\nconst CurrentPin = lazy(()=>import('../screens/mintboxpro/MenuScreens/PIN/CurrentPin'));\nconst MfTransactionPin = lazy(()=>import('../screens/mintboxpro/MenuScreens/PIN/MfTransactionPin'));\nconst PinOtpScreen = lazy(()=>import('../screens/mintboxpro/MenuScreens/PIN/PinOtpScreen'));\nconst PinSuccess = lazy(()=>import('../screens/mintboxpro/MenuScreens/PIN/PinSuccess'));\nconst SetNewPin = lazy(()=>import('../screens/mintboxpro/MenuScreens/PIN/SetNewPin'));\nconst ProfileDetails = lazy(()=>import('../screens/mintboxpro/MenuScreens/ProfileDetails'));\nconst CapitalGainsReport = lazy(()=>import('../screens/mintboxpro/MenuScreens/Reports/CapitalGainsReport'));\nconst DownloadReports = lazy(()=>import('../screens/mintboxpro/MenuScreens/Reports/DownloadReports'));\nconst ElssReport = lazy(()=>import('../screens/mintboxpro/MenuScreens/Reports/ElssReport'));\n// Portfolio Screens\nconst PortfolioScreen = lazy(()=>import('../screens/mintboxpro/PortfolioScreen'));\nconst ETFScreen = lazy(()=>import('../screens/mintboxpro/PortfolioScreen/ETFScreen'));\nconst FundScreen = lazy(()=>import('../screens/mintboxpro/PortfolioScreen/FundScreen'));\nconst GoalScreen = lazy(()=>import('../screens/mintboxpro/PortfolioScreen/GoalScreen'));\nconst MintboxScreen = lazy(()=>import('../screens/mintboxpro/PortfolioScreen/MintboxScreen'));\nconst AddressDetails = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/AddressDetails'));\nconst BankDetails = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/BankDetails'));\nconst DocumentUpload = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/DocumentUpload'));\nconst FatcaDetails = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/FatcaDetails'));\n// Complete profile\nconst GetStarted = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/GetStarted'));\nconst GuardianDob = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/Guardian/GuardianDob'));\nconst GuardianName = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/Guardian/GuardianName'));\nconst GuardianPan = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/Guardian/GuardianPan'));\nconst NameOnPan = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/NameOnPan'));\nconst NomineeDetails = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/NomineeDetails'));\nconst PanScreen = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/PanScreen'));\nconst PersonalDetails = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/PersonalDetails'));\nconst PoliticallyExposed = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/PoliticallyExposed'));\nconst RegisterKYC = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/RegisterKYC'));\nconst SignUpload = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/SignUpload'));\nconst StartInvesting = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/StartInvesting'));\nconst TaxStatus = lazy(()=>import('../screens/mintboxpro/ProfileCompletion/TaxStatus'));\nconst RewardsScreen = lazy(()=>import('../screens/mintboxpro/RewardsScreen'));\n// Risk profile / Wealth creator\nconst RiskProfileIndex = lazy(()=>import('../screens/mintboxpro/RiskProfile/0_index'));\nconst RiskHorizon = lazy(()=>import('../screens/mintboxpro/RiskProfile/10_RiskHorizon'));\nconst RiskRecommendation = lazy(()=>import('../screens/mintboxpro/RiskProfile/11_RiskRecommendation'));\nconst PresentAgeRisk = lazy(()=>import('../screens/mintboxpro/RiskProfile/1_PresentAge.js'));\nconst FinancialDependents = lazy(()=>import('../screens/mintboxpro/RiskProfile/2_FinancialDependents'));\nconst AnnualIncome = lazy(()=>import('../screens/mintboxpro/RiskProfile/3_AnnualIncome'));\nconst EmergencyFund = lazy(()=>import('../screens/mintboxpro/RiskProfile/4_EmergencyFund'));\nconst LifeInsurance = lazy(()=>import('../screens/mintboxpro/RiskProfile/5_LifeInsurance'));\nconst HealthInsurance = lazy(()=>import('../screens/mintboxpro/RiskProfile/6_HealthInsurance'));\nconst WillingnessQuestion1 = lazy(()=>import('../screens/mintboxpro/RiskProfile/7_WillingnessQuestion1'));\nconst WillingnessQuestion2 = lazy(()=>import('../screens/mintboxpro/RiskProfile/8_WillingnessQuestion2'));\nconst RiskResult = lazy(()=>import('../screens/mintboxpro/RiskProfile/9_RiskResult'));\nconst VideoPlayer = lazy(()=>import('../screens/mintboxpro/VideoPlayer'));\nconst WatchlistScreen = lazy(()=>import('../screens/mintboxpro/WatchlistScreen'));\nconst RebalanceScreen = lazy(()=>import('../screens/mintboxpro/InvestmentFlows/RebalanceScreen'));\n\nconst HomeLayout = () => {\n  return (\n      <Suspense fallback={<ActivityLoaderMintbox/>}>\n    <Switch>\n      {/* -------- Route is for MarketingScreens -------- */}\n      {/* <Route exact path={`/`} component={HomeSampleM} /> */}\n      <MarketingRoutes exact path={`/`} component={Home} />\n      <MarketingRoutes exact path={`/mintbox-black`} component={MintboxBlack} />\n      <MarketingRoutes exact path={`/design-mintbox`} component={DesignMintbox} />\n      <MarketingRoutes exact path={`/financial-goal`} component={FinancialGoals} />\n      <MarketingRoutes exact path={`/build-mintbox`} component={CreateWealth} />\n      <MarketingRoutes exact path={`/long-wealth-creator`} component={LongWealthCreator} />\n      <MarketingRoutes exact path={`/short-wealth-creator`} component={ShortWealthCreator} />\n      <MarketingRoutes exact path={`/privacy-policy`} component={Privacy} />\n      <MarketingRoutes exact path={`/terms-and-conditions`} component={TermConditions} />\n      <MarketingRoutes exact path={`/investing-masterclass`} component={InvestingGenius} />\n      <MarketingRoutes exact path={`/understand-lesson`} component={UnderstandLesson} />\n      <MarketingRoutes exact path={`/all-funds`} component={AllFunds} />\n      <MarketingRoutes exact path={`/invest-in-mintbox`} component={InvestInMintbox} />\n   \n      <Route path={`/qr-custom/app-link`} component={QRCode} />\n\n      {/* -------- AuthProtectedRoutes is for all AuthScreens -------- */}\n      <AuthProtectedRoutes path={`/signup`} component={SignupScreen} />\n      <AuthProtectedRoutes path={`/login-otp`} component={LoginOTPScreen} />\n      <AuthProtectedRoutes path={`/first-name`} component={NameScreen} />\n      <AuthProtectedRoutes path={`/verify-otp1`} component={VerifyOTP1} />\n      <AuthProtectedRoutes path={`/other-detail`} component={OtherDetail} />\n      <AuthProtectedRoutes path={`/verify-otp2`} component={VerifyOTP2} />\n\n      {/* -------- ProtectedRoutes is for all Mintbox Screens -------- */}\n      <ProtectedRoutes exact path={`/dashboard`} component={DashboardScreen} />\n      <ProtectedRoutes exact path={`/menu/rewards`} component={RewardsScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/video-player`} component={VideoPlayer} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/watchlist`} component={WatchlistScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/link-demat`} component={LinkDemat} />\n\n      {/* Portfolio Specific Routes */}\n      <ProtectedRoutes exact path={`/portfolio`} component={PortfolioScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/fundScreen`} component={FundScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/etfScreen`} component={ETFScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/mintboxScreen`} component={MintboxScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/goalScreen`} component={GoalScreen} />\n\n      {/* Investment flows Routes */}\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/confirm-invest`} component={ConfirmAndInvestScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/redeem-etf`} component={RedeemETF} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/redeem-mf`} component={RedeemMF} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/redeem-mintbox`} component={RedeemMintbox} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/redeem-goal`} component={RedeemGoal} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/success`} component={Success} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/failed`} component={Failed} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/rebalance-screen`} component={RebalanceScreen} />\n      {/* <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/stp`} component={STPScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/portfolio/swp`} component={SWPScreen} /> */}\n\n      {/* Menu Specific Routes */}\n      <ProtectedRoutes exact path={`/menu`} component={MenuScreen} />\n      <ProtectedRoutes exact path={`/menu/profile`} component={ProfileDetails} />\n      <ProtectedRoutes exact path={`/menu/notifications`} component={Notifications} />\n      <ProtectedRoutes exact path={`/menu/mf-account-details`} component={MFAccountDetails} />\n      <ProtectedRoutes exact path={`/menu/reports`} component={DownloadReports} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/menu/reports/capital-gains`} component={CapitalGainsReport} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/menu/reports/ELSS`} component={ElssReport} />\n      <ProtectedRoutes exact path={`/menu/mf-transaction-pin`} component={MfTransactionPin} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/menu/mf-transaction-pin/current-pin`} component={CurrentPin} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/menu/mf-transaction-pin/otp-validation`} component={PinOtpScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/menu/mf-transaction-pin/new-pin`} component={SetNewPin} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/menu/mf-transaction-pin/confirm-pin`} component={ConfirmNewPin} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/menu/mf-transaction-pin/success`} component={PinSuccess} />\n\n      {/* Complete Profile Routes */}\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/get-started`} component={GetStarted} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/tax-status`} component={TaxStatus} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/pan`} component={PanScreen} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/name`} component={NameOnPan} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/personal-details`} component={PersonalDetails} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/address-details`} component={AddressDetails} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/fatca`} component={FatcaDetails} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/fatca2`} component={PoliticallyExposed} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/nominee`} component={NomineeDetails} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/guardian-pan`} component={GuardianPan} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/guardian-name`} component={GuardianName} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/guardian-DOB`} component={GuardianDob} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/bank-details`} component={BankDetails} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/document-upload`} component={DocumentUpload} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/activate-direct-mf/sign-upload`} component={SignUpload} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/register-KYC`} component={RegisterKYC} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/start-investing`} component={StartInvesting} />\n\n      {/* Invest Routes */}\n      <ProtectedRoutes bottom_tab={false} exact path={`/Invest`} component={InvestInMintboxes} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Invest/ETFs`} component={InvestInETFs} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Invest/MutualFunds`} component={InvestInMFs} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Invest/Search/:type`} component={FundSearch} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/list`} component={FundList} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/mintbox-detail/:MintboxId`} component={MintboxDetail} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/fund-detail/:FundId`} component={MutualFundDetail} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/ETF-detail/:FundId`} component={ETFDetail} />\n\n      {/* risk profile / wealth creator */}\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile`} component={RiskProfileIndex} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/1`} component={PresentAgeRisk} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/2`} component={FinancialDependents} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/3`} component={AnnualIncome} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/4`} component={EmergencyFund} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/5`} component={LifeInsurance} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/6`} component={HealthInsurance} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/7`} component={WillingnessQuestion1} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/8`} component={WillingnessQuestion2} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/result`} component={RiskResult} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/risk-horizon`} component={RiskHorizon} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/risk-profile/recommended-mintbox`} component={RiskRecommendation} />\n\n      {/* Build your own mintbox */}\n      <ProtectedRoutes bottom_tab={false} exact path={`/CreateMintbox`} component={BuildMintboxIndex} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/CreateMintbox/add-funds`} component={BuildMintbox} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/CreateMintbox/define-weights`} component={MintboxAllocation} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/CreateMintbox/replace-ETF`} component={ReplaceETF} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/CreateMintbox/rebalancing-strategy`} component={RebalancingStrategy} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/CreateMintbox/name-mintbox`} component={NameMintbox} />\n\n      {/* Goal Screens */}\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals`} component={GoalSteps} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/select-goal`} component={GoalsDashboard} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/goal-due`} component={GoalDue} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/present-cost`} component={PresentCost} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/invest-today`} component={InvestToday} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/monthly-increase`} component={MonthlyIncrease} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/goal-name`} component={GoalName} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/goal-details`} component={GoalDetails} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/recommended-allocation`} component={RecommendedMintbox} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/achieve-goal`} component={AchieveGoal} />\n        {/* custom goal */}\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/goal-relation`} component={GoalRelation} />\n        {/* retirement goal */}\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/present-age`} component={PresentAge} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/retirement-age`} component={RetirementAge} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/monthly-expense`} component={MonthlyExpense} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/include-pf`} component={IncludePf} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/pf-balance`} component={PfBalance} />\n      <ProtectedRoutes bottom_tab={false} exact path={`/Goals/pf-monthly-contribution`} component={PfMonthlyContribution} />\n\n      {/* Default Route */}\n    </Switch>\n      </Suspense>\n  );\n};\n\nexport default React.memo(HomeLayout);\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n"],"names":["Home","lazy","QRCode","TermConditions","UnderstandLesson","AuthProtectedRoutes","ProtectedRoutes","AllFunds","CreateWealth","DesignMintbox","FinancialGoals","InvestingGenius","InvestInMintbox","LongWealthCreator","Privacy","ShortWealthCreator","MarketingRoutes","MintboxBlack","LoginOTPScreen","NameScreen","OtherDetail","SignupScreen","VerifyOTP1","VerifyOTP2","BuildMintboxIndex","BuildMintbox","MintboxAllocation","NameMintbox","RebalancingStrategy","ReplaceETF","DashboardScreen","GoalsDashboard","GoalRelation","GoalSteps","GoalDue","PresentCost","InvestToday","MonthlyIncrease","GoalName","GoalDetails","RecommendedMintbox","AchieveGoal","PresentAge","RetirementAge","MonthlyExpense","IncludePf","PfBalance","PfMonthlyContribution","ConfirmAndInvestScreen","Failed","RedeemETF","RedeemGoal","RedeemMF","RedeemMintbox","Success","ETFDetail","FundList","FundSearch","InvestInETFs","InvestInMFs","InvestInMintboxes","MintboxDetail","MutualFundDetail","LinkDemat","MenuScreen","MFAccountDetails","Notifications","ConfirmNewPin","CurrentPin","MfTransactionPin","PinOtpScreen","PinSuccess","SetNewPin","ProfileDetails","CapitalGainsReport","DownloadReports","ElssReport","PortfolioScreen","ETFScreen","FundScreen","GoalScreen","MintboxScreen","AddressDetails","BankDetails","DocumentUpload","FatcaDetails","GetStarted","GuardianDob","GuardianName","GuardianPan","NameOnPan","NomineeDetails","PanScreen","PersonalDetails","PoliticallyExposed","RegisterKYC","SignUpload","StartInvesting","TaxStatus","RewardsScreen","RiskProfileIndex","RiskHorizon","RiskRecommendation","PresentAgeRisk","FinancialDependents","AnnualIncome","EmergencyFund","LifeInsurance","HealthInsurance","WillingnessQuestion1","WillingnessQuestion2","RiskResult","VideoPlayer","WatchlistScreen","RebalanceScreen","HomeLayout","Suspense","fallback","Switch","exact","path","component","bottom_tab","React","BrowserRouter","history","createHistory","_this","props","render","Router","this","children","Component","HashRouter","resolveToLocation","to","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","shiftKey","LinkAnchor","forwardedRef","innerRef","navigate","onClick","rest","target","event","ex","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","isModifiedEvent","ref","Link","replace","RouterContext","Consumer","context","invariant","location","href","createHref","isDuplicateNavigation","createPath","push","createElement","NavLink","ariaCurrent","t","r","activeClassName","activeStyle","classNameProp","className","isActiveProp","isActive","locationProp","sensitive","strict","styleProp","style","toLocation","pathname","escapedPath","match","matchPath","joinClassnames","classnames","filter","i","join","condition","message"],"sourceRoot":""}
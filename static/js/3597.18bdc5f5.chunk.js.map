{"version":3,"file":"static/js/3597.18bdc5f5.chunk.js","mappings":"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","sources":["views/mobileView/screens/mintboxpro/MenuScreens/Reports/DownloadReports.js"],"sourcesContent":["import React, { useState } from 'react';\nimport cssVar from 'views/mobileView/styles';\nimport db from 'libs/db';\nimport MainHeader from 'views/mobileView/components/molecules/Headers/MainHeader';\nimport TopPannel from '../TopPanel';\nimport { toast } from 'react-toastify';\nimport AdminServices from 'services/api/AdminServices';\nimport { AiOutlineRight } from 'react-icons/ai';\nimport { Backdrop } from '@material-ui/core';\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport { baseImgURL } from 'assets/Constant';\n\nexport default function DownloadReports(props) {\n  const [user, setUser] = useState({});\n  const [clientData, setClientData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [downloadingReport, setDownloadingReport] = useState(false);\n  const [isInvested, setIsInvested] = useState(false)\n\n  React.useEffect(() => {\n    try {\n      db.get(db.model.user).then(async (user) => {\n        await getPortfolio(user.userData.id)\n        setUser(user.userData)\n        setLoading(false)\n      })\n    } catch (error) {\n      toast.error(error);\n      setLoading(false)\n    }\n  }, [])\n\n  const getPortfolio = async (id) => {\n    await db.get(db.model.portfolio).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolio(id).then(res => res);\n        if (res.type === true) {\n          const a = await JSON.parse(res.data);\n          let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n          console.log(\"Get portfolio API :\", aa)\n          setIsInvested(aa.MintboxConsolidated.length + aa.ETFConsolidated.length + aa.FundsConsolidated.length !== 0)\n          await db.set(db.model.portfolio, JSON.stringify(aa))\n        }\n      } else {\n        setIsInvested(p.MintboxConsolidated.length + p.ETFConsolidated.length + p.FundsConsolidated.length !== 0)\n      }\n    })\n  }\n\n  const onClickPortfolioReport = async () => {\n    setDownloadingReport(true);\n    const res = await AdminServices.getPortfolioReport(user.id).then(res => res)\n    console.log(res)\n    if (res.type) {\n      window.open(res.data.Report_URL)\n      toast.success('Report downloaded')\n      setDownloadingReport(false)\n    } else {\n      toast.error('Report not found')\n      setDownloadingReport(false)\n    }\n  }\n\n  const onClickTransactionReport = async () => {\n    setDownloadingReport(true);\n    const res = await AdminServices.getTransactionReport(user.id).then(res => res)\n    console.log(res)\n    if (res.type) {\n      window.open(res.data.Report_URL)\n      toast.success('Report downloaded')\n      setDownloadingReport(false)\n    } else {\n      toast.error('Report not found')\n      setDownloadingReport(false)\n    }\n  }\n\n  return (\n    <div className='mainContainer'>\n      <MainHeader header='Menu' right='What are mintboxes?' rightAction={() => { }} navigation={props.history} />\n      {\n        loading ?\n          <ActivityLoaderMintbox />\n          :\n          <div className='dataContainer px-0'>\n            <TopPannel />\n            {\n              isInvested ?\n                <>\n                  <div className='menu-card'>\n                    <img src={baseImgURL+\"menu_report.webp\"} className='menu-card-icon' />\n                    <div className='menu-card-body'>\n                      <div className='bodyTextDark'>Portfolio report</div>\n                      <div className='header2dark secondaryGreen'\n                        onClick={() => onClickPortfolioReport()}>Tap to download <AiOutlineRight size={12} /></div>\n                    </div>\n                  </div>\n                  <div className='menu-card'>\n                    <img src={baseImgURL+\"menu_report.webp\"} className='menu-card-icon' />\n                    <div className='menu-card-body'>\n                      <div className='bodyTextDark'>Transaction report</div>\n                      <div className='header2dark secondaryGreen' onClick={() => onClickTransactionReport()}>Tap to download <AiOutlineRight size={12} /></div>\n                    </div>\n                  </div>\n                  {/* <div className='menu-card' onClick={() => props.history.push('/menu/reports/capital-gains')}>\n                    <img src={baseImgURL+\"menu_report.webp\"} className='menu-card-icon' />\n                    <div className='menu-card-body'>\n                      <div className='bodyTextDark'>Capital gains report</div>\n                      <div className='smallTextLight'>The report your CA needs every year</div>\n                      <div className='header2dark secondaryGreen'>Tap to select financial year <AiOutlineRight size={12} /></div>\n                    </div>\n                  </div>\n                  <div className='menu-card' onClick={() => props.history.push('/menu/reports/ELSS')}>\n                    <img src={baseImgURL+\"menu_report.webp\"} className='menu-card-icon' />\n                    <div className='menu-card-body'>\n                      <div className='bodyTextDark'>ELSS report</div>\n                      <div className='smallTextLight'>The report your HR needs every year</div>\n                      <div className='header2dark secondaryGreen'>Tap to select financial year <AiOutlineRight size={12} /></div>\n                    </div>\n                  </div> */}\n                </>\n                :\n                <div style={{display:'flex', padding:'4%', margin:'4%', border:'1px solid '+cssVar.getPropertyValue('--light'), borderRadius:'8px', backgroundColor:cssVar.getPropertyValue('--lightest')}}>\n                  <div className='bodyTextLight' style={{flex:1}}>Your reports will be available once you <span className='secondaryGreen' onClick={()=>props.history.push('/Invest')}>start investing</span></div>\n                  <img src={baseImgURL+\"menu_report.webp\"} width={30} height={30} style={{margin:'2% 4%'}}/>\n                </div>\n            }\n          </div>\n      }\n      <Backdrop style={{ color: '#fff', zIndex: 1021 }} open={downloadingReport}>\n        <ActivityLoaderMintbox />\n      </Backdrop>\n    </div>\n  )\n}\n"],"names":["DownloadReports","props","useState","user","setUser","loading","setLoading","downloadingReport","setDownloadingReport","isInvested","setIsInvested","React","db","then","getPortfolio","userData","id","error","toast","p","a","AdminServices","res","type","JSON","parse","data","aa","reduce","f","console","log","MintboxConsolidated","length","ETFConsolidated","FundsConsolidated","stringify","onClickPortfolioReport","window","open","Report_URL","onClickTransactionReport","className","header","right","rightAction","navigation","history","src","baseImgURL","onClick","size","style","display","padding","margin","border","cssVar","borderRadius","backgroundColor","flex","push","width","height","color","zIndex"],"sourceRoot":""}
{"version":3,"file":"static/js/1022.f3624e63.chunk.js","mappings":"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","sources":["views/mobileView/components/atoms/CountDown.js","views/mobileView/screens/mintboxpro/AuthScreen/VerifyOTP1.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { AiOutlineRight } from 'react-icons/ai';\n\nexport default function CountDown({ style, totalTime, onClick, dir }) {\n    // const { dir = 'down', style = {}, onClick = () => {}, time } = props;\n    let time = totalTime;\n    const [sec, setSec] = React.useState('00');\n    const [min] = React.useState('00');\n\n    const timify = (t) => {\n        t /= 1000;\n        if (t >= 0) {\n            if (t > 60) {\n                t = '00';\n            }\n            if (t <= 9) {\n                t = `0${t}`;\n            }\n            return t;\n        }\n        return '00';\n    };\n\n    React.useEffect(() => {\n        setSec(timify(time))\n        timer();\n    }, []);\n\n    const timer = () => {\n        setInterval(() => {\n            if (time >= 0) {\n                if (dir === 'down') {\n                    time -= 1000;\n                }\n                if (dir === 'up') {\n                    time += 1000;\n                }\n                setSec(timify(time));\n            }\n        }, 1000);\n    };\n\n    const resetTimer = () => {\n        setInterval(() => {\n            if (time >= 0) {\n                if (dir === 'down') {\n                    time -= 1000;\n                }\n                if (dir === 'up') {\n                    time += 1000;\n                }\n                setSec(timify(time));\n            }\n        }, 1000);\n    };\n\n    if (`${min}:${sec}` !== '00:00') {\n        return (\n            <div style={{ fontSize: \"14px\", fontWeight: \"400\", color: \"#333333\", marginTop: \"6%\" }}>Resend in {`${min}:${sec}`}</div>\n        );\n    }\n    return (\n        <div\n            className='header2dark secondaryGreen'\n            style={{ marginTop: \"6%\" }}\n            onClick={() => {\n                resetTimer();\n                onClick();\n            }}\n        >\n            Resend OTP <AiOutlineRight style={{ verticalAlign: \"unset\" }} size={10} />\n        </div>\n    );\n}\n","import React from 'react';\nimport { AiOutlineRight } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport FloatingTextInput from 'views/mobileView/components/atoms/FloatingTextInput';\nimport AdminServices from 'services/api/AdminServices';\nimport CountDown from 'views/mobileView/components/atoms/CountDown';\nimport AuthHeader from 'views/mobileView/components/molecules/Headers/AuthHeader';\n\nexport default function VerifyOTP1(props) {\n\n\tconst [otp, setOtp] = React.useState('');\n\tconst [invalidOTP, setinvalidOTP] = React.useState(false);\n\tconst [mainOTP, setmainOTP] = React.useState('');\n\tconst { state } = props.location\n\n\tReact.useEffect(async () => {\n\t\tif (state === null || state === undefined) {\n\t\t\tprops.history.push('/signup')\n\t\t} else {\n\t\t\tsendOTP();\n\t\t}\n\t}, [])\n\n\tconst validateInput = () => {\n\t\treturn otp.length === 6\n\t}\n\n\tconst onNextBtnPressed = () => {\n\t\tif (otp === `${mainOTP}` && mainOTP !== '') {\n\t\t\tprops.history.push({\n\t\t\t\tpathname: '/other-detail',\n\t\t\t\tstate: { ...state }\n\t\t\t})\n\t\t} else {\n\t\t\tsetinvalidOTP(true);\n\t\t}\n\t}\n\n\tconst sendOTP = async () => {\n\t\ttry {\n\t\t\tsetmainOTP('');\n\t\t\tconst res = await AdminServices.generateOTP(state.verify === 'EMAIL' ? state.email : state.mobile, state.verify).then((res) => res)\n\t\t\tif (res.type) {\n\t\t\t\tif (res.data.Result === 'success') {\n\t\t\t\t\tsetmainOTP(res.data.otpcode);\n\t\t\t\t} else {\n\t\t\t\t\ttoast.error(\"Try again ...\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttoast.error(\"Try again ...\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\ttoast.error(\"Try again ...\");\n\t\t}\n\t};\n\n\tconst resendOTP = () => {\n\t\tsetinvalidOTP(false);\n\t\tsetOtp('')\n\t\tsendOTP();\n\t}\n\treturn (\n\t\t<div className=\"mainContainer\">\n\t\t\t<AuthHeader navigation={props.history} left='login' />\n\t\t\t<div className=\"dataContainer\">\n\t\t\t\t<div className=\"login-header\">\n\t\t\t\t\t<div className=\"bigHeader\">{\"Nice to meet you, \" + state.name + \"!\"}</div>\n\t\t\t\t\t<div className=\"bodyTextDark\" style={{ marginTop: \"6px\" }}>\n\t\t\t\t\t\tPlease enter the OTP received on <span className='underlineGreen'>\n\t\t\t\t\t\t\t{state.verify === 'EMAIL' ? state.email : state.mobile}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<FloatingTextInput\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tid=\"typepass\"\n\t\t\t\t\tlabel=\"OTP\"\n\t\t\t\t\tstyle={{ letterSpacing: '16px' }}\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetinvalidOTP(false)\n\t\t\t\t\t\tconst n = e.target.value.replace(/\\D/g, '')\n\t\t\t\t\t\tsetOtp(n)\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={otp}\n\t\t\t\t\tmaxLength={6}\n\t\t\t\t/>\n\t\t\t\t{invalidOTP ? (\n\t\t\t\t\t<div className=\"errorMsg\">\n\t\t\t\t\t\tIncorrect OTP. Try again!\n\t\t\t\t\t</div>\n\t\t\t\t) : ''}\n\t\t\t\t<CountDown totalTime={30000} dir=\"down\" onClick={() => { resendOTP(); }} />\n\t\t\t</div>\n\t\t\t<div className=\"login-footer\">\n\t\t\t\t<button className=\"solidButton\" style={{ opacity: validateInput() ? 1 : 0.4 }}\n\t\t\t\t\tonClick={() => { validateInput() && onNextBtnPressed() }}>\n\t\t\t\t\tVerify <AiOutlineRight size={12} />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n"],"names":["CountDown","style","totalTime","onClick","dir","time","React","sec","setSec","min","timify","t","timer","setInterval","fontSize","fontWeight","color","marginTop","className","verticalAlign","size","VerifyOTP1","props","otp","setOtp","invalidOTP","setinvalidOTP","mainOTP","setmainOTP","state","location","undefined","history","push","sendOTP","validateInput","length","AdminServices","verify","email","mobile","then","res","type","data","Result","otpcode","toast","navigation","left","name","id","label","letterSpacing","autoFocus","onChange","e","n","target","value","replace","maxLength","opacity","pathname"],"sourceRoot":""}
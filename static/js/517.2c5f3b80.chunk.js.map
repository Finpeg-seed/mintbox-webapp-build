{"version":3,"file":"static/js/517.2c5f3b80.chunk.js","mappings":"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","sources":["pages/admin/app/dashboard/Dashboard.js","pages/admin/assets/styles/components/MintboxIcon.js"],"sourcesContent":["import React from 'react';\nimport { CurrencyFormat } from \"pages/admin/assets/styles/components/CurrencyFormat\";\nimport AdminServices from 'services/api/AdminServices';\nimport { Line } from 'react-chartjs-2';\nimport { convertAnyDatetoDDMMYYYY } from '../shared/components/DateFormatter';\nimport TableMain from 'pages/admin/assets/styles/components/TableMain';\nimport MintboxIcon from 'pages/admin/assets/styles/components/MintboxIcon';\nimport RedGreenText from 'pages/admin/assets/styles/components/RedGreenText';\n\nexport default function Dashboard() {\n  const [allMintboxes, setAllMintboxes] = React.useState([]);\n  const [allClients, setAllClients] = React.useState([])\n  const [loading, setLoading] = React.useState(true);\n\n  const startDate = new Date('2022-06-13')\n  const today = new Date();\n  Date.prototype.addDays = function (days) {\n    var date = new Date(this.valueOf());\n    date.setDate(date.getDate() + days);\n    return date;\n  }\n  function getDatesArray(startDate, stopDate) {\n    var dateArray = new Array();\n    var currentDate = startDate;\n    while (currentDate <= stopDate) {\n      dateArray.push(new Date(currentDate));\n      currentDate = currentDate.addDays(1);\n    }\n    return dateArray;\n  }\n  const getMonth = (n) => {\n    if (n === 0) return \"Jan\";\n    if (n === 1) return \"Feb\";\n    if (n === 2) return \"Mar\";\n    if (n === 3) return \"Apr\";\n    if (n === 4) return \"May\";\n    if (n === 5) return \"Jun\";\n    if (n === 6) return \"Jul\";\n    if (n === 7) return \"Aug\";\n    if (n === 8) return \"Sep\";\n    if (n === 9) return \"Oct\";\n    if (n === 1) return \"Nov\";\n    if (n === 1) return \"Dec\";\n  }\n\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: false\n        },\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          color: \"rgba(204, 204, 204,0.1)\",\n          display: false\n        },\n        ticks: {\n          callback: function (val, i) {\n            return i % 10 === 0 ? val.getDate() + \" \" + getMonth(val.getMonth()) : '';\n          }\n        }\n      }]\n    },\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    }\n  }\n  const data = {\n    labels: getDatesArray(startDate, today),\n    datasets: [{\n      label: '# of users',\n      borderColor: [\n        \"#58985F\"\n      ],\n      data: getDatesArray(startDate, today).map((d) => allClients?.filter(client => {\n        let d1 = new Date(client.CreatedOn).getTime()\n        let d2 = new Date(d).getTime()\n        return d1 <= d2\n      }).length),\n      borderWidth: 2,\n      fill: false\n    }],\n\n  };\n  console.log(data)\n\n\n  React.useEffect(() => {\n    getIFAClients(-1)\n    getAllMintbox();\n    setLoading(false)\n  }, []);\n\n  const getIFAClients = async (id) => {\n    let res = await AdminServices.getIFAClients(id).then(res => res);\n    if (res.type === true) {\n      const aa = res.data;\n      setAllClients(aa)\n      console.log(\"GetAllClients API :\", res)\n    }\n  }\n  const getAllMintbox = async () => {\n    try {\n      let res = await AdminServices.getAllMintboxes(0).then((res) => JSON.stringify(res));\n      res = await JSON.parse(res);\n      console.log(\"Get All Mintboxes API: \", res.data)\n      if (res.type === true) {\n        setAllMintboxes(res.data)\n      }\n    } catch (error) {\n    }\n  }\n\n  if (loading) {\n    return (<div className=\"circle-loader\" style={{ marginTop: '30%' }} role=\"status\"></div>)\n  }\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-sm-4 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5>Investments</h5>\n              <div className=\"row\">\n                <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                  <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                    <h2 className=\"mb-0\">{CurrencyFormat(0)}</h2>\n                    <p className=\"text-primary ml-2 mb-0 font-weight-medium\">+0%</p>\n                  </div>\n                  {/* <h6 className=\"text-muted font-weight-normal\">11.38% Since last month</h6> */}\n                </div>\n                <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                  <i className=\"icon-lg mdi mdi-cash-multiple text-primary ml-auto\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-4 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5>Active users</h5>\n              <div className=\"row\">\n                <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                  <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                    <h2 className=\"mb-0\">{allClients?.length}</h2>\n                    <p className=\"text-primary ml-2 mb-0 font-weight-medium\">+{allClients.filter(c => new Date(c.CreatedOn).toDateString() === new Date().toDateString()).length} today</p>\n                  </div>\n                  {/* <h6 className=\"text-muted font-weight-normal\"> 9.61% Since last month</h6> */}\n                </div>\n                <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                  <i className=\"icon-lg mdi mdi-account-multiple-plus text-primary ml-auto\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-4 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5>Black users</h5>\n              <div className=\"row\">\n                <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                  <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                    <h2 className=\"mb-0\">{allClients.filter(c => c.IsBlack === 1).length}</h2>\n                    <p className=\"text-primary ml-2 mb-0 font-weight-medium\">+0 today</p>\n                  </div>\n                  {/* <h6 className=\"text-muted font-weight-normal\">2.27% Since last month</h6> */}\n                </div>\n                <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                  <i className=\"icon-lg mdi mdi mdi-account-check ml-auto\" style={{ color: 'var(--darkGreen)' }}></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6 col-12 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Number of Users</h4>\n              <Line data={data} options={options} />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-12 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Top Mintboxes</h4>\n              <div className=\"preview-list\">\n                {\n                  allMintboxes.sort((a, b) => (a.XIRR < b.XIRR) ? 1 : -1).slice(0, 5)?.map((data) => {\n                    return <div className='border-bottom'>\n                      <div className=\"preview-item\">\n                        <div className=\"preview-thumbnail\">\n                          <MintboxIcon id={data.MintboxId} height='40px' width='40px' />\n                        </div>\n                        <div className=\"preview-item-content d-sm-flex flex-grow m-auto\">\n                          <div className=\"flex-grow\">\n                            <h6 className=\"preview-subject\">{data.MintboxName}</h6>\n                            {/* <div className='text-muted'>\n                              description\n                            </div> */}\n                          </div>\n                          <div className=\"mr-auto text-sm-right pt-2 pt-sm-0\">\n                            <div className='text-muted mb-2'>\n                              <RedGreenText text={data.XIRR.toFixed(2) + '%'} value={data.XIRR} />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nfunction MintboxIcon({id,height,width}) {\n  return(\n    Number(id) > 20?\n    <img src={`https://d3etfstcuyoos5.cloudfront.net/app-images/imgs/mintbox_boxLogo.webp`} style={{ height, width}}/>\n    :\n    <img src={`https://d3etfstcuyoos5.cloudfront.net/app-images/imgs/MintboxIcon${id}.webp`} style={{ height, width}}/>\n  )\n}\n\nexport default React.memo(MintboxIcon)"],"names":["Dashboard","React","allMintboxes","setAllMintboxes","allClients","setAllClients","loading","setLoading","startDate","Date","today","getDatesArray","stopDate","dateArray","Array","currentDate","push","addDays","prototype","days","date","this","valueOf","setDate","getDate","options","scales","yAxes","ticks","beginAtZero","gridLines","color","xAxes","display","callback","val","i","n","getMonth","legend","elements","point","radius","data","labels","datasets","label","borderColor","map","d","filter","client","CreatedOn","getTime","length","borderWidth","fill","console","log","getIFAClients","getAllMintbox","id","AdminServices","then","res","type","aa","JSON","stringify","parse","className","style","marginTop","role","CurrencyFormat","c","toDateString","IsBlack","sort","a","b","XIRR","slice","MintboxId","height","width","MintboxName","text","toFixed","value","MintboxIcon","Number","src"],"sourceRoot":""}
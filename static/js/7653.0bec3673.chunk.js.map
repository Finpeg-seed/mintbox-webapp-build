{"version":3,"file":"static/js/7653.0bec3673.chunk.js","mappings":"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","sources":["views/mobileView/components/molecules/Cards/PausedMFModal.js","views/mobileView/screens/mintboxpro/InvestScreen/MutualFundDetail.js"],"sourcesContent":["import Modal from \"react-bootstrap/Modal\"\nimport cssVar from \"views/mobileView/styles\"\n\nexport default function PauseMFModal({navigation,showModal, onClose}) {\n\n    return (\n        <Modal\n            className=\"bottom-drawer\"\n            show={showModal}\n            onHide={() => onClose()}\n            keyboard={false}\n        >\n            <Modal.Body>\n                <div className='header1dark' style={{marginBottom:'4%'}}>Attention</div>\n                <div style={{display:'flex',gap:'2%'}}>\n                    <div style={{flex:1}}>\n                        <div className=\"bodyTextLight\">The mutual fund investments are currently paused. We will let you know when you can invest in mutual funds</div>\n                        <br/>\n                        <div className=\"bodyTextLight\">\n                            Meanwhile, you can invest in <span onClick={()=>navigation.push('/Invest')} style={{borderBottom:'1px solid '+cssVar.getPropertyValue('--secondaryGreen') }}className='secondaryGreen'>Smart mintboxes</span> and <span onClick={()=>navigation.push('/Invest/ETFs')} style={{borderBottom:'1px solid '+cssVar.getPropertyValue('--secondaryGreen') }}className='secondaryGreen'>ETFs</span></div>\n                    </div>\n                    <img src='https://d3etfstcuyoos5.cloudfront.net/app-images/final_imgs/activate_mutual_funds.png' style={{ height:'150px'}}/>\n                </div>\n                \n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"solidButton\" onClick={() => onClose()}>\n                    Close\n                </button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n","import React, { useState } from 'react'\nimport AdminServices from 'services/api/AdminServices'\nimport MainHeader from \"views/mobileView/components/molecules/Headers/MainHeader\";\nimport cssVar from 'views/mobileView/styles';\nimport { toast } from 'react-toastify';\nimport db from 'libs/db';\nimport CustomAccordion from 'views/mobileView/components/atoms/Accordion';\nimport { Chip } from '@mui/material';\nimport { CurrencyFormat } from 'views/mobileView/components/atoms/CurrencyFormat';\nimport addToRecentlyViewed from 'views/mobileView/components/atoms/addToRecentlyViewed';\nimport DisplayRecentlyViewed from 'views/mobileView/components/atoms/DisplayRecentlyViewed';\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport AMCIcon from 'views/mobileView/components/atoms/AMCIcon';\nimport PauseMFModal from 'views/mobileView/components/molecules/Cards/PausedMFModal';\nimport PerformanceChart from 'views/mobileView/components/molecules/Cards/PerformanceChart';\n\nfunction MutualFundDetail(props) {\n    const FUNDCODE = props.match.params.FundId;\n\n    const [fund, setFund] = useState({});\n    const [peerReturns, setPeerReturns] = useState({})\n    const [rollingReturns, setRollingReturns] = useState({})\n    const [topHoldings, setTopHoldings] = useState([])\n    const [sectorHoldings, setSectorHoldings] = useState([])\n    const [isWatchlisted, setIsWatchlisted] = useState(false);\n    const [user, setUser] = useState({})\n    const [fundNotFound,setFundNotFound] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [showPausedMfModal, setShowPausedMFModal] = React.useState(false)\n\n    const defaultChartOptions = {\n        title: {\n            text: null\n        },\n        yAxis: {\n            title: {\n                text: ''\n            },\n            endOnTick: true,\n            startOnTick: true,\n            labels: {\n                align: 'left'\n            }\n        },\n\n        xAxis: {\n            type: 'datetime',\n            dateTimeLabelFormats: {\n                day: '%d %b %Y'    //ex- 01 Jan 2016\n            },\n            labels: {\n                format: \"{value:%Y}\",\n                style: {\n                    color: \"#ababab\",\n                    fontSize: \"12px\"\n                }\n            },\n            crosshair: {\n                width: 1,\n                color: 'grey'\n            },\n            lineColor: \"#e5e5e5\",\n            tickLength: 0,\n            startOnTick: true,\n            // endOnTick: false,\n        },\n\n        legend: {\n            enabled: false\n        },\n\n        plotOptions: {\n            series: {\n                label: {\n                    connectorAllowed: false\n                },\n                turboThreshold: 51000,//larger threshold or set to 0 to disable\n                marker: {\n                    enabled: false\n                }\n            }\n        },\n        tooltip: {\n            shared: true\n        },\n        credits: {\n            enabled: false\n        },\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 400\n                },\n            }]\n        }\n    }\n    React.useEffect(() => {\n        loadData();\n    }, [FUNDCODE])\n\n    const loadData = async () => {\n        try {\n            db.get(db.model.user).then(async (p) => {\n                setUser(p.userData)\n                await getWatchlist(p.userData.id)\n                await getMutualFundById().then((fund) => {\n                    if(Object.keys(fund).length){\n                        addToRecentlyViewed({\n                            type: 2,\n                            ID: FUNDCODE,\n                            Name: fund.SchemeName,\n                            XIRR: fund.FiveYrReturn,\n                            Category: fund.SubCategoryName,\n                            AMCName: fund.AMCName,\n                            MinInv: fund.MinSIPInvestAmount\n                        })\n                        getPeerReturnsByFundCode();\n                        // getRollingReturnsByFundCode();\n                        getTopHoldings();\n                        getSectorHoldings();\n                    } else {\n                        setFundNotFound(true)\n                    }\n                })\n                setLoading(false)\n            });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const getMutualFundById = async () => {\n        try {\n            let res = await AdminServices.getFundByFundCode(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get MF by id API\", res.data)\n                setFund(res.data)\n                return res.data\n            }\n            else {\n                setFund({})\n                toast.error(\"Could not find fund\")\n                return {}\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n\n    const getPeerReturnsByFundCode = async () => {\n        try {\n            let res = await AdminServices.getPeerReturnsByFundCode(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get Peer Returns by id API\", res.data)\n                setPeerReturns(res.data)\n            }\n            else {\n                setPeerReturns({})\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n    const getRollingReturnsByFundCode = async () => {\n        try {\n            let res = await AdminServices.getRollingReturnsByFundCode(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get Rolling Returns by id API\", res.data)\n                setRollingReturns(res.data)\n            }\n            else {\n                setRollingReturns({})\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n\n    const getTopHoldings = async () => {\n        try {\n            let res = await AdminServices.getTopHoldings(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get getTopHoldings by id API\", res.data)\n                setTopHoldings(res.data)\n            }\n            else {\n                setTopHoldings({})\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n\n    const getSectorHoldings = async () => {\n        try {\n            let res = await AdminServices.getSectorHoldings(FUNDCODE).then(res => res)\n            if (res.type) {\n                console.log(\"Get getSectorHoldings by id API\", res.data)\n                setSectorHoldings(res.data)\n            }\n            else {\n                setSectorHoldings({})\n            }\n        } catch (error) {\n            toast.error(error)\n        }\n    }\n    \n    const getWatchlist = async (id) => {\n        try {\n            db.get(db.model.watchlist).then(async (p) => {\n                if (p === null) {\n                    let res = await AdminServices.getWatchlist(id).then(res => res);\n                    if (res.type === true) {\n                        db.set(db.model.watchlist, JSON.stringify(res.data))\n                        setIsWatchlisted(res.data.some(f => f.FundType === 2 && f.FundCode === FUNDCODE))\n                    }\n                } else {\n                    setIsWatchlisted(p.some(f => f.FundType === 2 && f.FundCode === FUNDCODE))\n                }\n            });\n        } catch (error) {\n            toast.error(error);\n        }\n    }\n\n    const updateWatchlist = async () => {\n        const data = {\n            \"clientId\": user.id,\n            \"fundType\": 2,\n            \"fundCode\": FUNDCODE,\n            \"isActive\": isWatchlisted ? 0 : 1\n        }\n        try {\n            let res = await AdminServices.updateWatchlist(data).then(res => res)\n            if (res.type) {\n                setIsWatchlisted(!isWatchlisted)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const Summary = () => {\n        return (\n            <div style={{ background: cssVar.getPropertyValue('--darkGreen'), padding: \"4%\", display: \"flex\", gap: \"4%\" }}>\n                <AMCIcon amcName={fund.AMCName} height=\"42px\" width=\"42px\" />\n                <div style={{ flex: 1 }}>\n                    <div className='header1dark' style={{ color: cssVar.getPropertyValue('--white'), minHeight: \"44px\" }}>{fund.SchemeName}</div>\n                    <div style={{ display: \"flex\", marginTop: \"4%\" }}>\n                        <div style={{ flex: 1 }}>\n                            <div className=\"bodyTextLight\" style={{ color: cssVar.getPropertyValue('--subtle') }}>5Y CAGR</div>\n                            <div className=\"header1dark\" style={{ color: cssVar.getPropertyValue(\"--primaryGreen\") }}>{parseFloat(fund.FiveYrReturn || 0).toFixed(2)} %</div>\n                        </div>\n                        <div style={{ flex: 1 }}>\n                            <div className=\"bodyTextLight\" style={{ color: cssVar.getPropertyValue('--subtle') }}>Category</div>\n                            <div className='header1dark' style={{ color: cssVar.getPropertyValue('--white') }}>{fund.SubCategoryName}</div>\n                        </div>\n                    </div>\n                    <div style={{ display: \"flex\", marginTop: \"4%\" }}>\n                        <div style={{ flex: 1 }}>\n                            <div className=\"bodyTextLight\" style={{ color: cssVar.getPropertyValue('--subtle') }}>NAV</div>\n                            <div className='header1dark' style={{ color: cssVar.getPropertyValue('--white') }}>{CurrencyFormat(fund.NAV, 'long', 2)}</div>\n                        </div>\n                        <div style={{ flex: 1 }}>\n                            <div className=\"bodyTextLight\" style={{ color: cssVar.getPropertyValue('--subtle') }}>Min investment</div>\n                            <div className='header1dark' style={{ color: cssVar.getPropertyValue('--white') }}>{CurrencyFormat(fund.MinSIPInvestAmount, 'long', 2)}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const CompWithPeers = () => {\n        return (\n            <>\n                {Object.keys(peerReturns).length !== 0 ?\n                    <div style={{ textAlign: \"right\", padding: \"4%\" }}>\n                        <div style={{ display: \"flex\", paddingBottom: \"14px\" }}>\n                            <div style={{ flex: 2 }}></div>\n                            <div className='smallTextLight' style={{ flex: 1 }}>6 M</div>\n                            <div className='smallTextLight' style={{ flex: 1 }}>1 Y</div>\n                            <div className='smallTextLight' style={{ flex: 1 }}>3 Y</div>\n                            <div className='smallTextLight' style={{ flex: 1 }}>5 Y</div>\n                        </div>\n                        <div style={{ display: \"flex\", paddingBottom: \"14px\" }}>\n                            <div className='header2dark' style={{ flex: 2, color: cssVar.getPropertyValue('--darkGreen'), textAlign: \"left\" }}>This fund</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Fund6month?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Fund1year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Fund3year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Fund5year?.toFixed(1)}%</div>\n                        </div>\n                        <div style={{ display: \"flex\", paddingBottom: \"14px\" }}>\n                            <div className='header2light' style={{ flex: 2, textAlign: \"left\" }}>Category</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Cat6month?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Cat1year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Cat3year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Cat5year?.toFixed(1)}%</div>\n                        </div>\n                        <div style={{ display: \"flex\", paddingBottom: \"14px\" }}>\n                            <div className='header2dark' style={{ flex: 2, color: cssVar.getPropertyValue('--darkYellow'), textAlign: \"left\" }}>NIFTY 50</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Index6month?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Index1year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Index3year?.toFixed(1)}%</div>\n                            <div className='bodyTextDark' style={{ flex: 1 }}>{peerReturns.Index5year?.toFixed(1)}%</div>\n                        </div>\n                    </div>\n                    : \n                    <div className='text-center bodyTextLight my-4'>\n                        Data not avaliable\n                    </div>\n                }\n            </>\n        )\n    }\n    const AUM = () => {\n        return (\n            <>\n                <div style={{ display: \"flex\", padding: \"4%\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>AUM</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.AUM, 'long', 2)} crore</div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Expense ratio</div>\n                        <div className='bodyTextDark'>{parseFloat(fund.ExpenseRatio || 0).toFixed(2)} %</div>\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", padding: \"4%\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Fund manager</div>\n                        <div className='bodyTextDark'>\n                            {\n                                fund?.FundManager?.split(':').map((manager, i) => {\n                                    if (i === 0) { return manager }\n                                    else { return ', ' + manager }\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const RollingReturns = () => {\n        const chipset = [\n            { key: 1, name: \"1 year\" },\n            { key: 3, name: \"3 years\" },\n            { key: 5, name: \"5 years\" },\n            { key: 10, name: \"10 years\" },\n        ]\n        const [duration, setDuration] = React.useState(1);\n        const [graphArray, setGraphArray] = React.useState([]);\n        const [avgRR, setAvgRR] = React.useState();\n        const [sd, setSd] = React.useState();\n\n        React.useEffect(() => {\n            switch (duration) {\n                case 1: setGraphArray(rollingReturns.OneYrRRData);\n                    setAvgRR(rollingReturns.OneYrAvgRR?.toFixed(2));\n                    setSd(rollingReturns.OneYrSD?.toFixed(2));\n                    return;\n                case 3: setGraphArray(rollingReturns.ThreeYrRRData);\n                    setAvgRR(rollingReturns.ThreeYrAvgRR?.toFixed(2));\n                    setSd(rollingReturns.ThreeYrSD?.toFixed(2));\n                    return;\n                case 5: setGraphArray(rollingReturns.FiveYrRRData);\n                    setAvgRR(rollingReturns.FiveYrAvgRR?.toFixed(2));\n                    setSd(rollingReturns.FiveYrSD?.toFixed(2));\n                    return;\n                case 10: setGraphArray(rollingReturns.TenYrRRData);\n                    setAvgRR(rollingReturns.TenYrAvgRR?.toFixed(2));\n                    setSd(rollingReturns.TenYrSD?.toFixed(2));\n                    return;\n                default: setGraphArray([]);\n                    setAvgRR(0);\n                    setSd(0);\n            }\n        }, [duration, rollingReturns])\n\n        const options = {\n            ...defaultChartOptions,\n            series: [\n                {\n                    name: 'Rolling return',\n                    color: cssVar.getPropertyValue('--darkGreen'),\n                    data: graphArray?.map(d => [new Date(d[\"date\"]).getTime(), d[\"rr\"]])\n                },\n                {\n                    name: 'Avg rolling return',\n                    color: '#F5A447',\n                    data: graphArray?.map(d => [new Date(d[\"date\"]).getTime(), parseFloat(avgRR)])\n                },\n            ]\n        }\n        return (\n            <div style={{ padding: \"4%\" }}>\n                {chipset.map((item) => {\n                    return (\n                        <Chip\n                            className={duration === item.key ? \"normalChip selected\" : \"normalChip\"}\n                            key={item.key}\n                            label={item.name}\n                            onClick={() => {\n                                setDuration(item.key)\n                            }}\n                        />\n                    )\n                })}\n                <div className='bodyTextLight' style={{ paddingTop: \"4%\" }}>\n                    Avg rolling return<span style={{ color: cssVar.getPropertyValue('--darkGreen') }}> {avgRR}%</span>\n                </div>\n                <div className='bodyTextLight' style={{ paddingTop: \"2%\" }}>\n                    Standard deviation<span style={{ color: \"#F5A447\" }}> {sd}%</span>\n                </div>\n                {/* <div>\n                    <HighchartsReact\n                        highcharts={Highcharts}\n                        options={options}\n                    />\n                </div> */}\n            </div>\n        )\n    }\n    const MinSubscription = () => {\n        return (\n            <>\n                <div style={{ display: \"flex\", padding: \"4%\", borderBottom: \"1px solid #e5e5e5\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Minimum SIP</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.MinSIPInvestAmount, 'long', 2)}</div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Minimum lumpsum</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.MinLumpsumInvestAmount, 'long', 2)}</div>\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", padding: \"4%\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Minimum redemption</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.MinRedemptionAmount, 'long', 2)}</div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight' style={{ marginBottom: \"1%\" }}>Minimum additional</div>\n                        <div className='bodyTextDark'>{CurrencyFormat(fund.MinSubsequentAmount, 'long', 2)}</div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    const TopHolding = () => {\n        const [selection, setSelection] = useState(0)\n        return (\n            <>\n                <div style={{ display: \"flex\", padding: \"3% 4% 0 4%\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light'), alignItems: \"end\" }}>\n                    <div style={{ flex: 2 }}>\n                        <Chip\n                            style={{ marginRight: \"8%\" }}\n                            className={selection === 0 ? \"specialTab selected\" : \"specialTab\"}\n                            label=\"Companies\"\n                            onClick={() => {\n                                setSelection(0)\n                            }}\n                        />\n                        <Chip\n                            className={selection === 1 ? \"specialTab selected\" : \"specialTab\"}\n                            label=\"Sectors\"\n                            onClick={() => {\n                                setSelection(1)\n                            }}\n                        />\n                    </div>\n                    <div className='header2light' style={{ flex: 1, textAlign: \"right\",  paddingBottom:'2%' }}>\n                        Allocation (%)\n                    </div>\n                </div>\n                {\n                    selection === 0 ?\n                        <>\n                            {\n                                topHoldings?.lenght?\n                                    topHoldings?.map((c, i) => {\n                                        return <div key={i} style={{ display: \"flex\", padding: \"3% 4%\", alignItems: \"center\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }}>\n                                            <div style={{ flex: 2 }}>\n                                                <div className='bodyTextDark'>{c.ShortName}</div>\n                                            </div>\n                                            <div style={{ flex: 1 }}>\n                                                <div className='header1faint' style={{ textAlign: 'right' }}>{Number(c.Percentage).toFixed(1)}%</div>\n                                            </div>\n                                        </div>\n                                    })\n                                    :\n                                    <div className='bodyTextDark' style={{margin:'4%',textAlign:'center'}}>No data Available</div>\n                            }\n                        </>\n                        :\n                        <>\n                            {\n                                sectorHoldings?.length?\n                                    sectorHoldings?.map((s, i) => {\n                                        return <div key={i} style={{ display: \"flex\", padding: \"3% 4%\", alignItems: \"center\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }}>\n                                            <div style={{ flex: 2 }}>\n                                                <div className='bodyTextDark'>{s.Sector}</div>\n                                            </div>\n                                            <div style={{ flex: 1 }}>\n                                                <div className='header1faint' style={{ textAlign: 'right' }}>{Number(s.Percentage).toFixed(1)}%</div>\n                                            </div>\n                                        </div>\n                                    })\n                                    :\n                                    <div className='bodyTextDark' style={{margin:'4%',textAlign:'center'}}>No data Available</div>\n                        }\n                        </>\n                }\n            </>\n        )\n    }\n    const ExitLoad = () => {\n        return (\n            <>\n                <div style={{ display: \"flex\", padding: \"4%\", borderBottom: \"1px solid \" + cssVar.getPropertyValue('--light') }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight'>Exit load</div>\n                        <div className='bodyTextDark'>{fund.ExpenseNote || '-'}</div>\n                        {/* <div className='smallTextLight'>for units in excess of 10% of your investment value</div> */}\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", padding: \"4%\" }}>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight'>Lock-in</div>\n                        <div className='bodyTextDark'>{fund.LockIn || 'None'}</div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <div className='smallTextLight'>Taxation</div>\n                        <div className='bodyTextDark'>{fund.TaxTreatment}</div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    const accordionArray = [\n        { key: \"1\", title: \"Comparison with peers\", body: CompWithPeers() },\n        { key: \"2\", title: \"AUM, fund manager and expense ratio\", body: AUM() },\n        // { key: \"4\", title: \"Rolling returns and standard deviation\", body: RollingReturns() },\n        { key: \"5\", title: \"Minimum subscriptions\", body: MinSubscription() },\n        { key: \"6\", title: \"Top holdings in the fund\", body: TopHolding() },\n        { key: \"7\", title: \"Exit load, lock-in and taxation\", body: ExitLoad() },\n    ]\n    const Footer = () => {\n        return (\n            <div className='footer'>\n                <button\n                    className='solidButton'\n                    // onClick={() => props.history.push({\n                    //     pathname: '/portfolio/confirm-invest',\n                    //     state: {\n                    //         fundData: {...fund, MinSIPAmount: fund.MinLumpsumInvestAmount},\n                    //         type: 2\n                    //     }\n                    // })}\n                    onClick={()=>setShowPausedMFModal(true) }\n                >\n                    Invest in this fund\n                </button>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <div className='mainaContainer'>\n                {\n                    loading ?\n                        <>\n                            <MainHeader\n                                header=\"Mutual fund\"\n                                navigation={props.history}\n                            />\n                            <ActivityLoaderMintbox />\n                        </>\n                        :\n                        <>\n                            <MainHeader\n                                header=\"Direct mutual fund\"\n                                isWatchlisted={isWatchlisted}\n                                onWatchlistIconClick={() => { updateWatchlist() }}\n                                right={fundNotFound?'':\"bookmark-share\"}\n                                navigation={props.history}\n                            />\n                            {\n                                fundNotFound?\n                                    <div className='bigTextDark text-center mt-5'>Fund data not available</div>\n                                    :\n                                    <>\n                                        <div className=\"dataContainer px-0\">\n                                            <Summary />\n                                            <PerformanceChart type={2} fundCode={FUNDCODE} />\n\n                                            <CustomAccordion accordionArray={accordionArray} />\n                                            <DisplayRecentlyViewed navigation={props.history} header=\"Recently viewed Mutual Funds\" type={2} currentFundId={FUNDCODE} />\n                                        </div>\n                                        <Footer />\n                                    </>\n                            }\n                            <PauseMFModal navigation={props.history} showModal={showPausedMfModal} onClose={()=>setShowPausedMFModal(false)}/>\n\n                        </>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default MutualFundDetail"],"names":["PauseMFModal","navigation","showModal","onClose","className","show","onHide","keyboard","style","marginBottom","display","gap","flex","onClick","push","borderBottom","cssVar","src","height","props","FUNDCODE","match","params","FundId","useState","fund","setFund","peerReturns","setPeerReturns","topHoldings","setTopHoldings","sectorHoldings","setSectorHoldings","isWatchlisted","setIsWatchlisted","user","setUser","fundNotFound","setFundNotFound","loading","setLoading","React","showPausedMfModal","setShowPausedMFModal","loadData","db","then","p","userData","getWatchlist","id","getMutualFundById","Object","keys","length","addToRecentlyViewed","type","ID","Name","SchemeName","XIRR","FiveYrReturn","Category","SubCategoryName","AMCName","MinInv","MinSIPInvestAmount","getPeerReturnsByFundCode","getTopHoldings","getSectorHoldings","error","console","log","AdminServices","res","data","toast","JSON","stringify","some","f","FundType","FundCode","updateWatchlist","Summary","background","padding","amcName","width","color","minHeight","marginTop","parseFloat","toFixed","CurrencyFormat","NAV","accordionArray","key","title","body","textAlign","paddingBottom","Fund6month","Fund1year","Fund3year","Fund5year","Cat6month","Cat1year","Cat3year","Cat5year","Index6month","Index1year","Index3year","Index5year","CompWithPeers","AUM","ExpenseRatio","FundManager","split","map","manager","i","MinLumpsumInvestAmount","MinRedemptionAmount","MinSubsequentAmount","selection","setSelection","alignItems","marginRight","label","lenght","c","ShortName","Number","Percentage","margin","s","Sector","TopHolding","ExpenseNote","LockIn","TaxTreatment","Footer","header","history","onWatchlistIconClick","right","fundCode","currentFundId"],"sourceRoot":""}
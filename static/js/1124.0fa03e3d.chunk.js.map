{"version":3,"file":"static/js/1124.0fa03e3d.chunk.js","mappings":"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","sources":["services/api/DataServicePY.js","services/api/AdminServicesPY.js","views/mobileView/components/atoms/CurrencyFormat.js","views/mobileView/components/atoms/DateFormatter.js","views/mobileView/components/atoms/MinInvestment.js","views/mobileView/components/molecules/Headers/MainHeader.js","views/mobileView/screens/mintboxpro/GoalScreens/GS6_GoalDetails.js","views/mobileView/screens/mintboxpro/GoalScreens/Modals/PlanDetailsModal.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import axios from 'axios';\nimport { DataService } from './DataService';\n\nconst MINTBOX_CLIENT_ID = 'Li2L9VO1eawEbsgLrHdpZjhmUdW6N8Cm';\n\nconst API_ENDPOINT = 'https://api.mintbox.ai/py-api';\n\nconst client = axios.create({\n\tbaseURL: API_ENDPOINT,\n\twithCredentials: false\n});\n\nclass DataServicePY {\n\tstatic get(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'GET',\n\t\t\turl: path,\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n\n\tstatic post(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'POST',\n\t\t\turl: path,\n\t\t\tdata: JSON.stringify(data),\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n\n\tstatic postImg(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'multipart/form-data; charset=utf-8;' };\n\n\t\treturn fetch(API_ENDPOINT + path, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: data\n\t\t}).then(r => r.json())\n\t\t\t.then(data => {\n\t\t\t\tif (data.statusCode === 200) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmsg: 'Success',\n\t\t\t\t\t\tdata: data.response,\n\t\t\t\t\t\ttype: true\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t})\n\t}\n\n\tstatic patch(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'PATCH',\n\t\t\turl: path,\n\t\t\tdata: JSON.stringify(data),\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n\n\tstatic put(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'PUT',\n\t\t\turl: path,\n\t\t\tdata: JSON.stringify(data),\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n\n\tstatic delete(path = '', data = {}) {\n\t\tconst optional = { 'Content-Type': 'application/json' };\n\n\t\treturn client({\n\t\t\tmethod: 'DELETE',\n\t\t\turl: path,\n\t\t\theaders: { ...axios.defaults.headers, ...optional }\n\t\t});\n\t}\n}\n\nconst getAccessToken = async () => {\n\tconst token = await localStorage.getItem('access_token');\n\treturn JSON.stringify({ access_token: token || '' });\n};\n\nconst refreshAccessToken = async () => {\n\tconst res = await DataService.get(`/Auth/getToken?clientId=${MINTBOX_CLIENT_ID}`).then((d) => d);\n\tif (res.type) {\n\t\tawait localStorage.setItem('access_token', res.data.accessToken);\n\t\treturn res.data.accessToken;\n\t}\n\treturn '';\n};\n\nclient.interceptors.request.use(\n\tasync (config) => {\n\t\tconst value = await getAccessToken();\n\t\tconst keys = JSON.parse(value);\n\n\t\tconfig.headers.Authorization = `Bearer ${keys.access_token}`\n\n\t\treturn config;\n\t},\n\t(error) => {\n\t\tPromise.reject(error);\n\t}\n);\n\nclient.interceptors.response.use(\n\t(response) => {\n\t\tif (response.status === 200) {\n\t\t\treturn {\n\t\t\t\tmsg: 'Success',\n\t\t\t\tdata: response.data,\n\t\t\t\ttype: true\n\t\t\t};\n\t\t}\n\t\t// Toast.show({\n\t\t//   text1: 'Error Occured!!',\n\t\t//   text2: 'Try again ...',\n\t\t//   type: 'error'\n\t\t// });\n\t\treturn {\n\t\t\tmsg: response.statusText,\n\t\t\tdata: response.data,\n\t\t\ttype: false\n\t\t};\n\t},\n\n\tasync (error) => {\n\t\tconst { response } = error;\n\t\tconst originalRequest = error.config;\n\n\t\tconsole.log(response)\n\n\t\tif (response) {\n\t\t\t// if (response.status === 401) {\n\t\t\t// \toriginalRequest._retry = true;\n\t\t\t// \tconst access_token = await refreshAccessToken();\n\t\t\t// \tconsole.log('aaac = ', access_token);\n\t\t\t// \taxios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n\t\t\t// \treturn client(originalRequest);\n\t\t\t// } if (response.status === 500) {\n\t\t\t// \toriginalRequest._retry = true;\n\t\t\t// \tconst access_token = await refreshAccessToken();\n\t\t\t// \tconsole.log('aaac = ', access_token);\n\t\t\t// \taxios.defaults.headers.common.Authorization = `Bearer ${access_token}`;\n\t\t\t// \treturn client(originalRequest);\n\t\t\t// }\n\t\t\t// Toast.show({\n\t\t\t//   text1: 'Error Occured!!',\n\t\t\t//   text2: 'Try again ...',\n\t\t\t//   type: 'error'\n\t\t\t// });\n\t\t\treturn response;\n\t\t}\n\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport { DataServicePY, API_ENDPOINT };\n","import { DataServicePY } from \"./DataServicePY\";\n\nconst MINTBOX_CLIENT_ID = \"Li2L9VO1eawEbsgLrHdpZjhmUdW6N8Cm\";\n\nexport default {\n\n\tget_goal_scenarios: async (data) => {\n\t\treturn DataServicePY.post('/get_goal_scenarios', data);\n\t},\n\n\tgetGoalCorpus: async (data) => {\n\t\treturn DataServicePY.post('/getGoalTargetCorpus', data);\n\t},\n\n\tgetGoalSIP: async (data) => {\n\t\treturn DataServicePY.post('/getGoalSIP', data);\n\t},\n\n\tgetGoalReturnAndMintbox: async (data) => {\n\t\treturn DataServicePY.post('/getGoalReturnAndMintbox', data);\n\t},\n\n\tgetMintboxChartData: async (id) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getMintboxPerformanceById/${id}`\n\t\t);\n\t},\n\n\tgetETFChartDataBySymbol: async (symbol) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getETFPerformanceBySymbol/${symbol}`\n\t\t);\n\t},\n\n\tgetMFPerformanceById: async (id) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getMFPerformanceById/${id}`\n\t\t);\n\t},\n\n\n\tgetCustomMintboxChartData: async (data) => {\n\t\treturn DataServicePY.post(\n\t\t\t`/core/getCustomMintboxPerformance`,data\n\t\t);\n\t},\n\n\tgetETFTrailingReturns: async (id) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getETFTrailingReturns/${id}`\n\t\t);\n\t},\n\n\tgetETFTrackingError: async (id) => {\n\t\treturn DataServicePY.get(\n\t\t\t`/core/getETFTrackingError/${id}`\n\t\t);\n\t},\n};\n","function kFormatter(val) {\n  if (val >= 10000000) {val = `₹ ${(val / 10000000).toFixed(2)} cr`}\n  else if (val >= 100000) {val = `₹ ${(val / 100000).toFixed(2)} lac`}\n  else if (val >= 1000) {val = `₹ ${(val / 1000).toFixed(2)} k`}\n  else {val = normalFormatter(val)}\n  return val.replace('-', '');\n}\n\nfunction normalFormatter(num,fractionDigits=0) {\n  const a = new Intl.NumberFormat(\"en-IN\", {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: fractionDigits,\n  }).format(num);\n  return `₹ ${a}`;\n}\n\nexport function CurrencyFormat(num=0, type=\"long\",fractionDigits=0) {\n  return type === \"short\" ? kFormatter(Number(num),fractionDigits) : normalFormatter(Number(num),fractionDigits)\n}\n","function formatDate(d, skip = \"\", seperator = \" \") {\n    var date = \"\";\n    try {\n        date = new Date(d.replace(\" \", \"T\"));\n    } catch (error) {\n        date = new Date(d);\n    }\n\n    if (isNaN(date.getTime())) {\n        return d;\n    }\n    else {\n\n        var month = new Array();\n        month[0] = \"Jan\";\n        month[1] = \"Feb\";\n        month[2] = \"Mar\";\n        month[3] = \"Apr\";\n        month[4] = \"May\";\n        month[5] = \"Jun\";\n        month[6] = \"Jul\";\n        month[7] = \"Aug\";\n        month[8] = \"Sep\";\n        month[9] = \"Oct\";\n        month[10] = \"Nov\";\n        month[11] = \"Dec\";\n\n        let day = date.getDate();\n\n        if (day < 10) {\n            day = \"0\" + day;\n        }\n\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        var strTime = hours + ':' + minutes + ' ' + ampm;\n        // return day + \" \" + month[date.getMonth()] + \" \" + date.getFullYear() + \" - \" + strTime;\n        var finalStr = skip === \"date\" ? month[date.getMonth()] + seperator + date.getFullYear() : day + seperator + month[date.getMonth()] + seperator + date.getFullYear()\n        return finalStr;\n    }\n\n}\n\n\nfunction formatDateddmmyyyy(today) {\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n\n    return dd + '/' + mm + '/' + yyyy;\n}\n\nfunction formatDateyyyymmdd(today) {\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n\n    return yyyy + '-' + mm + '-' + dd;\n}\n\nfunction addMonths(date, months) {\n    date.setMonth(date.getMonth() + months);\n    return date;\n}\nfunction getNextSIPDate(sipDate, freq = 1) {\n    if (freq !== 1) {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), freq)).toISOString())\n    }\n    const date1 = new Date();\n    const date2 = new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 1));\n    const diffTime = Math.abs(date2 - date1);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays < 27) {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 2)).toISOString())\n    } else {\n        return formatDate(new Date(addMonths(new Date(new Date().getFullYear(), new Date().getMonth(), sipDate), 1)).toISOString())\n    }\n}\n\nexport { formatDate, formatDateddmmyyyy, formatDateyyyymmdd, getNextSIPDate }","const allowedError = 2;\nconst minInvestment = (arr, type = 0) => {\n  if (arr.length === 0) {\n    return 0\n  } else if (arr.length === 1) {\n    return arr[0].NAV\n  } else {\n    // initialize equal weights\n    if (type) {\n      if (100 % arr.length === 0) {\n        arr = arr.map((obj) => ({ ...obj, allocation: (100 / arr.length).toFixed(0) }))\n      } else {\n        arr = arr.map((obj) => ({ ...obj, allocation: ((100 - (100 % arr.length)) / arr.length).toFixed(0) }))\n        arr[0].allocation = Number(arr[0].allocation) + (100 % arr.length)\n      }\n    }\n\n    const requiredAllocation = arr.map(e => e.allocation)\n    let quantities = arr.map(e => 1)\n    let t = 0\n    while (t < 10000) {\n      t++\n      const totalAmount = arr.reduce((sum, e, i) => sum + (e.NAV * quantities[i]), 0)\n      const actualAllocation = arr.map((e, i) => e.NAV * quantities[i] * 100 / totalAmount)\n      const diffArr = actualAllocation.map((a, i) => requiredAllocation[i] - a)\n      const maxDiff = Math.max.apply(Math, diffArr)\n      const minDiff = Math.min.apply(Math, diffArr)\n      // console.log(quantities, diffArr, actualAllocation)\n      if (minDiff > -1 * allowedError && maxDiff < allowedError) {\n        return totalAmount\n      } else {\n        const indexOfMaxDiff = diffArr.indexOf(maxDiff);\n        quantities[indexOfMaxDiff]++\n      }\n    }\n  }\n}\nexport { minInvestment }","import React from 'react';\nimport { AiOutlineDown } from 'react-icons/ai';\nimport { BsBookmark, BsBookmarkFill } from 'react-icons/bs';\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { HiOutlineShare } from 'react-icons/hi';\nimport cssVar from 'views/mobileView/styles';\n\nconst MainHeader = ({\n    header,\n    navigation,\n    screenType,\n    backAction=()=>{navigation.goBack()},\n    right,\n    rightAction = () => {},\n    isWatchlisted = false,\n    onWatchlistIconClick = ()=>{},\n    onShareIconClick = ()=>{},\n    onHeaderClick = ()=>{}\n}) => {\n    \n    const renderRightSide = () => {\n        switch (right) {\n            case 'bookmark-share':\n                return (\n                    <span>  \n                        {\n                            isWatchlisted?\n                            <BsBookmarkFill\n                                className='secondaryGreen'\n                                size={24}\n                                onClick={onWatchlistIconClick}\n                            />\n                            :\n                            <BsBookmark\n                                className='secondaryGreen'\n                                size={24}\n                                onClick={onWatchlistIconClick}\n                            />\n                        }\n                        <HiOutlineShare\n                            className='secondaryGreen'\n                            size={24}\n                            style={{marginLeft:\"20px\"}}\n                            onClick={onShareIconClick}\n                            />\n                    </span>\n                );\n            case 'tip': \n                    return <span className='header3dark secondaryGreen' onClick={()=> rightAction()}>Tip <AiOutlineDown size={10}/></span>\n            default:\n                if(!right){\n                    return <></>\n                } else {\n                    return (\n                        <span className='greenChipHeader' onClick={()=>{ rightAction ()}}>\n                            {right}\n                        </span>\n                    );\n                }\n        }\n    };\n\n    return (\n        <div className=\"mainHeader sticky-top\">\n            {screenType !== 'Home' && (\n                <div style={{marginRight:\"4%\",minWidth:\"8%\"}}>\n                    <FiArrowLeft\n                    color={cssVar.getPropertyValue(\"--secondaryGreen\")}\n                    size={24} onClick={() => backAction()} />\n                </div>\n            )}\n            <div style={{flex:1}}>\n                <span className=\"screenTitle\" onClick={()=>onHeaderClick()}>{header}</span>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                {renderRightSide()}\n            </div>\n        </div>\n    );\n};\n\nexport default MainHeader;","import React from 'react';\nimport MainHeader from 'views/mobileView/components/molecules/Headers/MainHeader';\nimport Modal from 'react-bootstrap/Modal';\nimport { AiFillExclamationCircle, AiOutlineDown, AiOutlineUp } from 'react-icons/ai'\nimport { BsGraphUp } from 'react-icons/bs'\nimport { BiPencil } from 'react-icons/bi'\nimport AdminServices from 'services/api/AdminServices';\nimport AdminServicesPY from 'services/api/AdminServicesPY';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from \"highcharts-react-official\";\nimport cssVar from 'views/mobileView/styles';\nimport { CurrencyFormat } from 'views/mobileView/components/atoms/CurrencyFormat';\nimport PlanDetailsModal from './Modals/PlanDetailsModal';\nimport db from 'libs/db';\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport CurrencyInput from 'react-currency-input-field';\nimport { minInvestment } from 'views/mobileView/components/atoms/MinInvestment';\nimport { formatDate } from 'views/mobileView/components/atoms/DateFormatter';\n\nexport default function GoalDetails(props) {\n\n\tconst [sip, setSip] = React.useState();\n\tconst [oneTime, setOneTime] = React.useState();\n\tconst [annR, setAnnR] = React.useState();\n\tconst [fundData, setFundData] = React.useState({});\n\tconst [mintboxId, setMintboxId] = React.useState();\n\tconst [mintboxConstituents, setMintboxConstituents] = React.useState([]);\n\tconst [finalCorpus, setFinalCorpus] = React.useState()\n\tconst [pfCorpus, setPfCorpus] = React.useState(0)\n\tconst [inflationCorpus, setInflationCorpus] = React.useState(0)\n\tconst [goalWarnColor, setGoalWarnColor] = React.useState();\n\tconst [goalProbability, setGoalProbability] = React.useState(0);\n\tconst [isPriceBreakUp, setIsPriceBreakup] = React.useState(false);\n\tconst [minInvestmentAmt, setminInvestmentAmt] = React.useState(0);\n    const [goalPerformanceProjection, setGoalPerformanceProjection] = React.useState([]);\n    const [goalSuccessRate, setGoalSuccessRate] = React.useState(0);\n\n\tconst STATE = props.location.state;\n\tconst INITIAL_TARGET_RETURN = STATE.goalDue <= 3 ? 5 + (STATE.goalDue - 1) : STATE.goalDue <= 5 ? 9 : 12\n\tconst INFLATION = STATE.type === 'education' ? 10 : STATE.type === 'house' ? 8 : STATE.type === 'custom' ? STATE.inflation : 6\n\n\tconst [showDetailsModal, setShowDetailsModal] = React.useState(false)\n\tconst [showSipAmountModal, setShowSipAmountModal] = React.useState(false)\n\tconst [showOneTimeAmountModal, setShowOneTimeAmountModal] = React.useState(false)\n\tconst [showProjectedInvestmentModal, setShowProjectedInvestmentModal] = React.useState(false)\n\tconst [showSIPWarningModal, setShowSIPWarningModal] = React.useState(false)\n\tconst [showOnetimeWarningModal, setShowOneTimeWarningModal] = React.useState(false)\n\tconst [showAlert, setShowAlert] = React.useState(false)\n\tconst [loading, setLoading] = React.useState(true);\n\tconst [loadingMintboxData, setLoadingMintboxData] = React.useState(false);\n\tconst [nextDisabled, setNextDisabled] = React.useState(false)\n    const [chartLoad, setChartLoad] = React.useState(true)\n\n\tReact.useEffect(async () => {\n\t\tawait getGoalCorpus();\n\t\tawait db.get(db.model.createGoal).then(async p => {\n\t\t\tif (p) {\n\t\t\t\tif (p.oneTime !== undefined) {\n\t\t\t\t\tsetOneTime(p.oneTime)\n\t\t\t\t} else {\n\t\t\t\t\tsetOneTime(STATE.investToday)\n\t\t\t\t}\n\t\t\t\tif (p.sip !== undefined) {\n\t\t\t\t\tsetSip(p.sip)\n\t\t\t\t} else {\n\t\t\t\t\tawait getGoalSIP();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tsetLoading(false)\n\t}, [])\n\n\tReact.useEffect(async () => {\n\t\tsetChartLoad(true)\n\t\tif (finalCorpus !== undefined && finalCorpus !== null && sip !== undefined && sip !== null && oneTime !== undefined && oneTime !== null) {\n\t\t\tgetGoalReturnAndMintbox()\n\t\t}\n\t}, [sip, oneTime])\n\n\tconst getMintboxData = async (mintboxId) => {\n\t\tif (mintboxId) {\n\t\t\tconsole.log(\"mintboxID\",mintboxId)\n\t\t\tsetFundData({})\n\t\t\tsetMintboxConstituents([])\n\t\t\tlet res = await AdminServices.getMintboxById(mintboxId).then(res => res)\n\t\t\tif (res.type) {\n\t\t\t\tconst a = JSON.parse(res.data)\n\t\t\t\tlet aa = await a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n\t\t\t\tsetFundData(aa.MintboxInfo[0])\n\t\t\t}\n\n\t\t\tlet res2 = await AdminServices.getMintboxConstituentsById(mintboxId).then(res => res)\n\t\t\tif (res2.type) {\n\t\t\t\tconsole.log(\"Get mintbox constituents API\", res2.data)\n\t\t\t\tsetMintboxConstituents(res2.data)\n\t\t\t\t// min investment\n\t\t\t\tlet etfsData = await AdminServices.getETFsById(res2.data?.map(etf => etf.Symbol).toString()).then(res => res)\n\t\t\t\tlet currentNav = {};\n\t\t\t\tif (etfsData.type) {\n\t\t\t\t\tetfsData.data.map(item => {\n\t\t\t\t\t\tcurrentNav[item.Symbol] = item.NAV\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tconst selectedETFs = res2.data.map(f => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...f,\n\t\t\t\t\t\tallocation: f.CurrentWeightage,\n\t\t\t\t\t\tNAV: currentNav[f.Symbol]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tsetminInvestmentAmt(minInvestment(selectedETFs.filter(f=>f.CurrentWeightage!==0)) * 1.2 || 5000)\n\t\t\t\tsetLoadingMintboxData(false)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst getGoalCorpus = async () => {\n\t\tvar data = {\n\t\t\t\"inflation\": Number(INFLATION) / 100,\n\t\t\t\"pCost_or_mExpense\": STATE.type === \"retirement\" ? Number(STATE.monthlyExpense) : Number(STATE.presentCost),\n\t\t\t\"age_of_retirement\":STATE.retirementAge,\n\t\t\t\"horizon\": Number(STATE.goalDue),\n\t\t\t\"pf_balance\": STATE.type === \"retirement\" ? STATE.includePf ? Number(STATE.pfBalance) : 0 : 0,\n\t\t\t\"monthly_pf_contri\": STATE.type === \"retirement\" ? STATE.includePf ? Number(STATE.pfMonthlyContribution) : 0 : 0,\n\t\t\t\"type\": STATE.type === \"retirement\" ? 1 : 0\n\t\t}\n\t\tvar res = await AdminServicesPY.getGoalCorpus(data).then(res => res)\n\n\t\tif (STATE.type === \"retirement\") {\n\t\t\tvar d = await JSON.parse(res.data)[0]\n\t\t\tsetFinalCorpus(Number(d.required_corpus) - Number(d.pf_corpus))\n\t\t\tsetPfCorpus(d.pf_corpus)\n\t\t\tsetInflationCorpus(d.required_corpus)\n\t\t} else {\n\t\t\tsetFinalCorpus(res.data)\n\t\t}\n\t}\n\n\tconst getGoalSIP = async () => {\n\t\tvar data = {\n\t\t\t\"investment_growth\": Number(INITIAL_TARGET_RETURN) / 100,\n\t\t\t\"inflation\": Number(INFLATION) / 100,\n\t\t\t\"horizon\": Number(STATE.goalDue),\n\t\t\t\"age_of_retirement\":STATE.retirementAge,\n\t\t\t\"pCost_or_mExpense\": STATE.type === \"retirement\" ? Number(STATE.monthlyExpense) : Number(STATE.presentCost),\n\t\t\t\"lumpsum\": Number(STATE.investToday),\n\t\t\t\"sip_growth\": Number(STATE.monthlyIncrease) / 100,\n\t\t\t\"pf_balance\": STATE.type === \"retirement\" ? STATE.includePf ? Number(STATE.pfBalance) : 0 : 0,\n\t\t\t\"monthly_pf_contri\": STATE.type === \"retirement\" ? STATE.includePf ? Number(STATE.pfMonthlyContribution) : 0 : 0,\n\t\t\t\"type\": STATE.type === \"retirement\" ? 1 : 0\n\t\t}\n\t\tvar res = await AdminServicesPY.getGoalSIP(data).then(res => res)\n\t\tif (res.type) {\n\t\t\tsetSip(parseInt(res.data))\n\t\t}\n\t}\n\n\tconst getGoalPerformance = async (MintboxId) => {\n        try {\n            var goalPer = {\n                \"current_value\": Number(oneTime),\n                \"target_value\": Number(finalCorpus),\n                \"months_to_goal\": Number(STATE.goalDue) * 12,\n                \"mintbox_id\": MintboxId,\n                \"sip\": sip || 0,\n                \"growth\": Number(STATE.monthlyIncrease) / 100\n            }\n            var res2 = await AdminServicesPY.get_goal_scenarios(goalPer).then((res) => { return res })\n\t\t\tconsole.log(res2)\n            if (res2.type === true) {\n\t\t\t\tsetGoalSuccessRate(res2.data.successRate)\n                let finalData = Object.values(res2.data.data).map((obj) => {\n                    return Object.keys(obj).map((key) => {\n                        return {\n                            y: obj[key],\n                            x: new Date(key.toString().replace(\"T00:00:00Z\", \"\")).getTime(),\n                            name: \"Date:- \" + formatDate(key.toString().replace(\"T00:00:00Z\", \"\"))\n                        }\n                    });\n                })\n                let bestPerformer = 0\n                let worstPerformer = 0\n                let lastData = finalData.map(obj => Number(obj[obj.length - 1].y))\n                bestPerformer = lastData.indexOf(Math.max(...lastData))\n                worstPerformer = lastData.indexOf(Math.min(...lastData))\n\n                finalData = finalData.map((obj, i) => {\n                    return {\n                        name: i === bestPerformer && Number(obj[obj.length - 1].y) >= Number(finalCorpus) ? \"Best Scenario\" : (i === worstPerformer && Number(obj[obj.length - 1].y) < Number(finalCorpus) ? \"Worst Scenario\" : \"Scenario:- \" + (i + 1)),\n                        color: Number(obj[obj.length - 1].y) >= Number(finalCorpus) ? cssVar.getPropertyValue('--secondaryGreen') + \"55\" : cssVar.getPropertyValue('--red') + \"77\",\n                        data: obj,\n                        // lineWidth: i === bestPerformer && Number(obj[obj.length - 1].y) >= Number(finalCorpus) || i === worstPerformer && Number(obj[obj.length - 1].y) < Number(finalCorpus) ? 3 : 1\n                    }\n                })\n                setGoalPerformanceProjection(finalData)\n\t\t\t\tsetChartLoad(false)\n            } else {\n                setGoalPerformanceProjection([])\n\t\t\t\tsetChartLoad(false)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\tconst getGoalReturnAndMintbox = async () => {\n\t\tsetLoadingMintboxData(true)\n\t\tvar data = {\n\t\t\t\"sip_amount\": Number(sip),\n\t\t\t\"target_corpus\": Number(finalCorpus),\n\t\t\t\"horizon\": Number(STATE.goalDue),\n\t\t\t\"lumpsum\": Number(oneTime),\n\t\t\t\"sip_growth\": Number(STATE.monthlyIncrease) / 100\n\t\t}\n\t\tconsole.log(data)\n\t\tvar res = await AdminServicesPY.getGoalReturnAndMintbox(data).then(res => res)\n\t\tconsole.log(res)\n\t\tvar d = await JSON.parse(res.data)[0]\n\t\tsetAnnR(Number(d.returns))\n\t\tsetMintboxId(Number(d.mintbox_id))\n\t\tif(Number(d.returns<=0)){\n\t\t\tsetGoalWarnColor(0)\n\t\t} else {\n\t\t\tsetGoalWarnColor(d.color)\n\t\t}\n\t\tsetGoalProbability(d.probaility)\n\t\tawait getMintboxData(Number(d.returns) < 0? 1: Number(d.mintbox_id))\n\t\tawait getGoalPerformance(Number(d.returns) < 0? 1:Number(d.mintbox_id))\n\t}\n\n\tconst onNextPress = () => {\n\t\tif(mintboxId){\n\t\t\tif(goalWarnColor===3){\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// else if(oneTime<minInvestmentAmt && oneTime!==0){\n\t\t\t// \tsetShowOneTimeWarningModal(true);\n\t\t\t// }\n\t\t\telse if(sip<minInvestmentAmt){\n\t\t\t\tsetShowSIPWarningModal(true);\n\t\t\t} else {\n\t\t\t\tgoNext()\n\t\t\t}\n\t\t}\n\t}\n\n\tconst goNext = async (f=1) => {\n\t\tlet frequency = 12;\n\t\tif(f<=1){\n\t\t\tfrequency = 1;\n\t\t} else if(f<=3){\n\t\t\tfrequency = 3\n\t\t} else if(f<=6){\n\t\t\tfrequency = 6\n\t\t}\n\t\tconst state={ ...STATE, annR, sip, oneTime, frequency, fundData: {MintboxId: mintboxId,...STATE.fundData,Constituents: mintboxConstituents}, finalCorpus }\n\t\tconst saveData = { sip, oneTime  }\n\t\tawait db.get(db.model.createGoal).then(async (p)=>{\n\t\t\tconsole.log({...p,...saveData})\n\t\t\tawait db.set(db.model.createGoal,JSON.stringify({...p,...saveData}))\n\t\t  })\n\t\tprops.history.push({ pathname: '/Goals/recommended-allocation', state })\n\t}\n\n\tconst SIPWarningModal = () => {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tclassName=\"bottom-drawer\"\n\t\t\t\tshow={showSIPWarningModal}\n\t\t\t\tonHide={() => setShowSIPWarningModal(false)}\n\t\t\t\tkeyboard={false}\n\t\t\t>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div style={{ display: \"flex\", gap: \"4%\", paddingBottom: \"4%\" }}>\n\t\t\t\t\t\t<AiFillExclamationCircle size={20} color={cssVar.getPropertyValue('--yellow')} />\n\t\t\t\t\t\t<div className=\"header1dark\" style={{ flex: 1 }}>Warning <span className='header2dark'>(Low SIP amount)</span></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bodyTextDark\" style={{ paddingBottom: \"4%\" }}>\n\t\t\t\t\t\tMin SIP required for recommended portfolio is: {CurrencyFormat(minInvestmentAmt)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bodyTextDark\" style={{ paddingBottom: \"4%\" }}>\n\t\t\t\t\t\tTo continue we recommend that you increase the SIP amount\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className=\"solidButton\" onClick={() => {\n\t\t\t\t\t\tsetShowSIPWarningModal(false);\n\t\t\t\t\t\tsetShowSipAmountModal(true)\n\t\t\t\t\t}}>\n\t\t\t\t\t\tUpdate SIP\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"outlineButton\" onClick={() => {\n\t\t\t\t\t\tgoNext(Math.ceil(minInvestmentAmt/sip))\t\t\t\t\t\t\n\t\t\t\t\t\tsetShowSIPWarningModal(false);\n\t\t\t\t\t}}>\n\t\t\t\t\t\tProceed anyway\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tconst OnetimeWarningModal = () => {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tclassName=\"bottom-drawer\"\n\t\t\t\tshow={showOnetimeWarningModal}\n\t\t\t\tonHide={() => setShowOneTimeWarningModal(false)}\n\t\t\t\tkeyboard={false}\n\t\t\t>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div style={{ display: \"flex\", gap: \"4%\", paddingBottom: \"4%\" }}>\n\t\t\t\t\t\t<AiFillExclamationCircle size={20} color={cssVar.getPropertyValue('--red')} />\n\t\t\t\t\t\t<div className=\"header1dark\" style={{ flex: 1 }}>Warning <span className='header2dark'>(Low one-time amount)</span></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ display: \"flex\", gap: \"4%\", paddingBottom: \"4%\" }}>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bodyTextDark\" style={{ paddingBottom: \"4%\" }}>\n\t\t\t\t\t\tMin One-time required for recommended portfolio is: {CurrencyFormat(minInvestmentAmt)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bodyTextDark\" style={{ paddingBottom: \"4%\" }}>\n\t\t\t\t\t\tTo continue we recommend that you increase one-time amount\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className=\"solidButton\" onClick={() => {\n\t\t\t\t\t\tsetShowOneTimeWarningModal(false);\n\t\t\t\t\t\tsetShowOneTimeAmountModal(true)\n\t\t\t\t\t}}>\n\t\t\t\t\t\tIncreast One-time\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tconst ProjectedInvestmentModal = () => {\n\t\tvar options = {\n            chart: {\n                backgroundColor: 'transparent',\n\t\t\t  height: 220,\n            },\n            boost: {\n                useGPUTranslations: true,\n                seriesThreshold: 5\n            },\n            title: {\n                text: ''\n            },\n            exporting: {\n                enabled: false\n            },\n            yAxis: {\n                title: {\n                    text: ''\n                },\n                plotLines: [{\n                    color: '#000',\n                    value: Number(finalCorpus), // Position, you'll have to translate this to the values on your x axis\n                    dashStyle: 'dash',\n                    width: 1,\n                    label: {\n                        text: \"Target:- \" + (CurrencyFormat(Number(finalCorpus),'short',2)), y: -5, x: -2,\n                        style: {\n                            color: cssVar.getPropertyValue('--secondaryGreen'),\n                            fontWeight: 'bold'\n                        }\n                    }\n                }]\n            },\n            xAxis: [{\n                type: 'datetime',\n                dateTimeLabelFormats: {\n                    millisecond: '%H:%M:%S.%L',\n                    second: '%H:%M:%S',\n                    minute: '%H:%M',\n                    hour: '%H:%M',\n                    day: '%eth %b',\n                    week: '%eth %b',\n                    month: '%b \\'%y',\n                    year: '%Y'\n                },\n                crosshair: {\n                    width: 1,\n                    color: 'grey'\n                },\n                endOnTick: true,\n                startOnTick: true,\n            }\n            ],\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    label: {\n                        connectorAllowed: false\n                    },\n                }\n            },\n            plotOptions: {\n                series: {\n                    turboThreshold: 51000,//larger threshold or set to 0 to disable\n                    marker: {\n                        enabled: false\n                    }\n                }\n            },\n            tooltip: {\n                valueDecimals: 0,\n                valuePrefix: '₹',\n\n            },\n            credits: {\n                enabled: false\n            },\n            series: goalPerformanceProjection,\n            scrollbar: {\n                enabled: false\n            },\n            responsive: {\n                rules: [{\n                    condition: {\n                        maxWidth: 400\n                    },\n                }]\n            },\n\n        };\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tclassName=\"bottom-drawer\"\n\t\t\t\tshow={showProjectedInvestmentModal}\n\t\t\t\tonHide={() => setShowProjectedInvestmentModal(false)}\n\t\t\t\tkeyboard={false}\n\t\t\t>\n\t\t\t\t<Modal.Body style={{padding:'4% 2%'}}>\n\t\t\t\t\t<div className=\"header2dark\" style={{margin:'4% 2%'}}>Projected investment journey</div>\n\t\t\t\t\t{chartLoad || goalPerformanceProjection.length === 0 ? \n\t\t\t\t\t\t<div style={{height:'145px'}}>\n\t\t\t\t\t\t\t<ActivityLoaderMintbox margin='75px'/> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t<HighchartsReact\n\t\t\t\t\t\t\thighcharts={Highcharts}\n\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"smallTextLight\" style={{padding:'2%'}}>We have shown 100 potential scenarios of how your financial goal could pan out under our dynamic goal planning approach. <span className='secondaryGreen'>Green</span> lines imply goal target being achieved while <span style={{color:cssVar.getPropertyValue('--red')}}>red</span> lines imply a miss. Based on these projections, you have a <b>{goalSuccessRate.toFixed(0) || '-'}%</b> chance of achieving this goal. These scenarios are built using a technique called historical bootstrapping.</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className=\"solidButton\" onClick={() => setShowProjectedInvestmentModal(false)}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tconst SipAmountModal = () => {\n\t\tconst [s, setS] = React.useState(sip)\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tclassName=\"bottom-drawer\"\n\t\t\t\tshow={showSipAmountModal}\n\t\t\t\tonHide={() => setShowSipAmountModal(false)}\n\t\t\t>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className='header1dark'>Select monthly SIP amount</div>\n\t\t\t\t\t<div className='smallTextDark' style={{marginTop:'2%'}}>Min. {CurrencyFormat(500)} | Required {CurrencyFormat(minInvestmentAmt)}</div>\n\t\t\t\t\t<CurrencyInput\n\t\t\t\t\t\tclassName='normalInput rupee'\n\t\t\t\t\t\tid=\"monthlySip\"\n\t\t\t\t\t\tname=\"monthlySip\"\n\t\t\t\t\t\tplaceholder='15,000'\n\t\t\t\t\t\tvalue={s}\n\t\t\t\t\t\tallowDecimals={false}\n\t\t\t\t\t\tallowNegativeValue={false}\n\t\t\t\t\t\tdisableAbbreviations={false}\n\t\t\t\t\t\tprefix=' '\n\t\t\t\t\t\tintlConfig={{ locale: 'en-IN', currency: 'INR' }}\n\t\t\t\t\t\tonValueChange={(value) => setS(Number(value) || '')}\n\t\t\t\t\t/>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className=\"outlineButton\" onClick={() => setShowSipAmountModal(false)}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"solidButton\"\n\t\t\t\t\t\tstyle={{ opacity: s === '' ? 0.4 : 1 }}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (s !== '' && Number(s)>=500) {\n\t\t\t\t\t\t\t\tsetSip(s)\n\t\t\t\t\t\t\t\tsetShowSipAmountModal(false)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tConfirm\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tconst OneTimeAmountModal = () => {\n\t\tconst [o, setO] = React.useState(oneTime || 0);\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tclassName=\"bottom-drawer\"\n\t\t\t\tshow={showOneTimeAmountModal}\n\t\t\t\tonHide={() => setShowOneTimeAmountModal(false)}\n\t\t\t>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className='header1dark'>Select monthly SIP amount</div>\n\t\t\t\t\t<CurrencyInput\n\t\t\t\t\t\tclassName='normalInput rupee'\n\t\t\t\t\t\tid=\"oneTime\"\n\t\t\t\t\t\tname=\"oneTime\"\n\t\t\t\t\t\tplaceholder='50,000'\n\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\tallowDecimals={false}\n\t\t\t\t\t\tallowNegativeValue={false}\n\t\t\t\t\t\tdisableAbbreviations={false}\n\t\t\t\t\t\tprefix=' '\n\t\t\t\t\t\tonValueChange={(value) => setO(Number(value) || 0)}\n\t\t\t\t\t\tintlConfig={{ locale: 'en-IN', currency: 'INR' }}\n\t\t\t\t\t/>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<button className=\"outlineButton\" onClick={() => setShowOneTimeAmountModal(false)}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"solidButton\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetOneTime(o)\n\t\t\t\t\t\t\tsetShowOneTimeAmountModal(false)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tConfirm\n\t\t\t\t\t</button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tif (STATE === undefined) {\n\t\tprops.history.push('/Goals')\n\t\treturn <></>\n\t}\n\treturn (\n\t\t<div className='mainContainer'>\n\t\t\t<MainHeader\n\t\t\t\theader={STATE.header}\n\t\t\t\tright=\"Plan details\"\n\t\t\t\trightAction={() => { setShowDetailsModal(true) }}\n\t\t\t\tnavigation={props.history}\n\t\t\t/>\n\t\t\t<div className='dataContainer' style={{paddingBottom:'110px'}}>\n\t\t\t\t{\n\t\t\t\t\tloading || loadingMintboxData?\n\t\t\t\t\t\t<ActivityLoaderMintbox type='goal'/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='header1dark' style={{ marginTop: \"6%\" }}>Corpus required in {new Date().getFullYear() + STATE.goalDue}</div>\n\t\t\t\t\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t\t\t\t\t<div className='secondaryGreen' style={{ flex: 1, fontSize: \"22px\", fontWeight: \"500\", marginTop: \"2%\" }}>\n\t\t\t\t\t\t\t\t\t<span>{CurrencyFormat(finalCorpus)}</span> \n\t\t\t\t\t\t\t\t\t<span style={{fontSize:'16px'}}> ({CurrencyFormat(finalCorpus, 'short', 1)})</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tSTATE.type === 'retirement' && STATE.includePf?\n\t\t\t\t\t\t\t\t\t\t<div className='secondaryGreen' onClick={() => setIsPriceBreakup(!isPriceBreakUp)}>\n\t\t\t\t\t\t\t\t\t\t\tView breakup {isPriceBreakUp ? <AiOutlineUp size={12} /> : <AiOutlineDown size={12} />}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tisPriceBreakUp?\n\t\t\t\t\t\t\t\t\t<div style={{padding:'2% 4%',marginTop:'4%', border:'1px solid '+cssVar.getPropertyValue('--light'),borderRadius:'8px'}}>\n\t\t\t\t\t\t\t\t\t\t<div className='bodyTextDark' style={{display:'flex', borderBottom:'1px solid '+cssVar.getPropertyValue('--light'), padding:'2%'}}>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{flex:1}}>Total corpus required</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>{CurrencyFormat(inflationCorpus) + \" (\" + CurrencyFormat(inflationCorpus, 'short', 1) + \")\"}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='bodyTextDark' style={{display:'flex', borderBottom:'1px solid '+cssVar.getPropertyValue('--light'), padding:'2%'}}>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{flex:1}}>Projected PF corpus</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>{CurrencyFormat(pfCorpus) + \" (\" + CurrencyFormat(pfCorpus, 'short', 1) + \")\"}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='header2dark' style={{display:'flex', borderBottom:'1px solid '+cssVar.getPropertyValue('--light'), padding:'2%'}}>\n\t\t\t\t\t\t\t\t\t\t\t<div style={{flex:1}}>*Adjusted corpus</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>{CurrencyFormat(finalCorpus) + \" (\" + CurrencyFormat(finalCorpus, 'short', 1) + \")\"}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"smallTextLight\" style={{padding:'2%'}}>\n\t\t\t\t\t\t\t\t\t\t\t*Adjusted corpus = Total corpus - Projected corpus\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<div className='header1dark' style={{ marginTop: \"40px\" }}>Investment required</div>\n\t\t\t\t\t\t\t<div style={{ marginTop: \"3%\", display: \"flex\", textAlign: \"center\", whiteSpace: \"nowrap\" }}>\n\t\t\t\t\t\t\t\t<div style={{ padding: \"4% 6%\", border: \"1px solid \" + cssVar.getPropertyValue('--light'), borderRadius: \"8px\", background: cssVar.getPropertyValue('--lighter'), textAlign: \"center\", minWidth: '40%' }}\n\t\t\t\t\t\t\t\t\tonClick={() => setShowSipAmountModal(true)}>\n\t\t\t\t\t\t\t\t\t<div className='bodyTextLight' style={{ marginBottom: \"4px\" }}>Monthly SIP</div>\n\t\t\t\t\t\t\t\t\t<div className='header1dark'>{CurrencyFormat(sip)} <BiPencil size={14} className=\"secondaryGreen\" /></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div style={{ flex: 1, fontSize: \"24px\", fontWeight: \"500\", color: cssVar.getPropertyValue('--black'), margin: \"auto\" }}>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div style={{ padding: \"4% 6%\", border: \"1px solid \" + cssVar.getPropertyValue('--light'), borderRadius: \"8px\", background: cssVar.getPropertyValue('--lighter'), minWidth: '40%' }} onClick={() => setShowOneTimeAmountModal(true)}>\n\t\t\t\t\t\t\t\t\t<div className='bodyTextLight' style={{ marginBottom: \"4px\" }}>One-time lumpsum</div>\n\t\t\t\t\t\t\t\t\t<div className='header1dark'>{CurrencyFormat(oneTime)} <BiPencil size={14} className=\"secondaryGreen\" /></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='header1dark' style={{ marginTop: \"40px\" }}>Annual growth required</div>\n\t\t\t\t\t\t\t<div style={{ fontSize: \"24px\", fontWeight: \"500\", marginTop: \"2%\",\n\t\t\t\t\t\t\t\tcolor: goalWarnColor===3?cssVar.getPropertyValue('--red'):goalWarnColor===2?cssVar.getPropertyValue('--yellow'):goalWarnColor===1?cssVar.getPropertyValue('--secondaryGreen'):cssVar.getPropertyValue('--primaryGreen')}}\n\t\t\t\t\t\t\t>{annR} %</div>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgoalWarnColor === 0?\n\t\t\t\t\t\t\t\t<div style={{ marginTop: \"5%\", padding: \"4%\", background: cssVar.getPropertyValue('--lightest'), border: \"1px solid \" + cssVar.getPropertyValue('--light'), borderRadius: \"8px\" }}>\n\t\t\t\t\t\t\t\t\t<div style={{ display: \"flex\", gap: \"4%\", paddingBottom: \"4%\" }}>\n\t\t\t\t\t\t\t\t\t\t<AiFillExclamationCircle size={20} color={cssVar.getPropertyValue('--primaryGreen')} />\n\t\t\t\t\t\t\t\t\t\t<div className=\"header1dark\" style={{ flex: 1 }}>Alert!</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='bodyTextLight'>\n\t\t\t\t\t\t\t\t\tIt seems that with your current plan, you will overshoot your target. We are recommending you a near risk free portfolio. You can also go back and revise your inputs\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tgoalWarnColor === 2 ?\n\t\t\t\t\t\t\t\t\t<div style={{ marginTop: \"5%\", padding: \"4%\", background: cssVar.getPropertyValue('--lightest'), border: \"1px solid \" + cssVar.getPropertyValue('--light'), borderRadius: \"8px\" }}>\n\t\t\t\t\t\t\t\t\t\t<div style={{ display: \"flex\", gap: \"4%\", paddingBottom: \"4%\" }}>\n\t\t\t\t\t\t\t\t\t\t\t<AiFillExclamationCircle size={20} color={cssVar.getPropertyValue('--yellow')} />\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"header1dark\" style={{ flex: 1 }}>Alert!</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='bodyTextLight'>\n\t\t\t\t\t\t\t\t\t\tThe required annualized rate of return of {Number(annR).toFixed(2)}% implies an estimated chances of less than 65% of achieving your goal. We recommend that you increase the monthly SIP amount or one-time lumpsum to reduce the required return.\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tgoalWarnColor === 3 ?\n\t\t\t\t\t\t\t\t\t<div style={{ marginTop: \"5%\", padding: \"4%\", background: cssVar.getPropertyValue('--lightest'), border: \"1px solid \" + cssVar.getPropertyValue('--light'), borderRadius: \"8px\" }}>\n\t\t\t\t\t\t\t\t\t\t<div style={{ display: \"flex\", gap: \"4%\", paddingBottom: \"4%\" }}>\n\t\t\t\t\t\t\t\t\t\t\t<AiFillExclamationCircle size={20} color={cssVar.getPropertyValue('--red')} />\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"header1dark\" style={{ flex: 1 }}>Alert!</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='bodyTextLight'>\n\t\t\t\t\t\t\t\t\t\tThe required annualized rate of return of {Number(annR).toFixed(2)}% implies an estimated chances of less than 50% of achieving your goal. You need to increase the monthly SIP amount or one-time lumpsum to proceed.\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className=\"header2dark secondaryGreen\" style={{ position: \"fixed\", bottom: '70px', width: \"100%\", textAlign: \"center\", borderTop: \"1px solid \" + cssVar.getPropertyValue('--light'), padding: \"2% 4%\", backgroundColor: cssVar.getPropertyValue('--white') }} onClick={() => setShowProjectedInvestmentModal(true)}>\n\t\t\t\tProjected investment journey <BsGraphUp size={14} className='secondaryGreen' />\n\t\t\t</div>\n\t\t\t{/* <Footer\n\t\t\t\tnavigation={props.history}\n\t\t\t\tnext='/Goals/recommended-allocation'\n\t\t\t\tstate={{ ...STATE, annR, sip, oneTime, fundData, mintboxId }}\n\t\t\t\tsaveData={{ sip, oneTime }}\n\t\t\t\tbuttonText=\"Recommend a portfolio\"\n\t\t\t\tnextDisabled={goalWarnColor === 3?true:false}\n\t\t\t/> */}\n\t\t\t<div className='footer'>\n\t\t\t\t<button\n\t\t\t\t\tclassName='solidButton'\n\t\t\t\t\tstyle={{ opacity: goalWarnColor === 3 ? 0.4 : 1 }}\n\t\t\t\t\tonClick={() => onNextPress()}\n\t\t\t\t>\n\t\t\t\t\tRecommend a portfolio\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<OneTimeAmountModal />\n\t\t\t<SipAmountModal />\n\t\t\t<PlanDetailsModal STATE={STATE} showDetailsModal={showDetailsModal} onClose={() => setShowDetailsModal(false)} lumpsum={oneTime} />\n\t\t\t<OnetimeWarningModal />\n\t\t\t<SIPWarningModal />\n\t\t\t<ProjectedInvestmentModal />\n\t\t</div>\n\t)\n}\n","import Modal from \"react-bootstrap/Modal\"\nimport { CurrencyFormat } from \"views/mobileView/components/atoms/CurrencyFormat\"\n\nexport default function PlanDetailsModal({STATE, showDetailsModal, onClose, lumpsum}) {\n\n    const yourResponse = STATE?.type === 'retirement'? \n    [\n        {key: \"Monthly expenses\", value: CurrencyFormat(STATE?.monthlyExpenses)},\n        {key: \"Present age\", value: STATE?.presentAge + ' years'},\n        {key: \"Retirement age\", value: STATE?.retirementAge + ' years'},\n        {key: 'Upfront investment', value: CurrencyFormat(lumpsum || STATE?.onetime)},\n        {key: 'Annual increase in SIP', value: STATE?.monthlyIncrease + '%'},\n        {key: \"PF balance\", value: CurrencyFormat(STATE?.pfBalance)},\n        {key: \"Monthly PF contribution\", value: CurrencyFormat(STATE?.pfMonthlyContribution)},\n    ]\n    :\n    [\n        {key: STATE?.planDetails?.presentCost, value: CurrencyFormat(STATE?.presentCost)},\n        {key: STATE?.planDetails?.goalDue, value: STATE?.goalDue + ' years'},\n        {key: 'Upfront investment', value: CurrencyFormat(lumpsum || STATE?.onetime)},\n        {key: 'Annual increase in SIP', value: STATE?.monthlyIncrease + '%'},\n    ]\n    const ourAssumption = STATE?.type === 'retirement'? \n    [\n        {key: 'Inflation', value: '6%'},\n        {key: 'Capital gains tax', value: '10%'},\n        {key: 'PF intrest rate', value: '8%'},\n        {key: 'Life expenctancy', value: '90 years'},\n    ]\n    :\n    [\n        {key: STATE?.planDetails?.inflation, value: (STATE.type === 'education' ? 10 : STATE.type === 'house' ? 8 : STATE.type === 'custom' ? STATE.inflation:6) + '%'},\n        {key: 'Capital gains tax', value: '10%'},\n    ]\n\n    return (\n        <Modal\n            className=\"bottom-drawer\"\n            show={showDetailsModal}\n            onHide={() => onClose()}\n            keyboard={false}\n        >\n            <Modal.Body>\n                <div className='header1dark'>Your responses</div>\n                <ul>\n                    {\n                        yourResponse.map((a,i) => {\n                            return <li key={i} style={{ margin: \"4% 0\" }} className='bodyTextLight'>{a.key + ':'}\n                                <span className='bodyTextDark'> {a.value}</span></li>\n                        })\n                    }\n                </ul>\n                <div className=\"header1dark\">Our assumptions</div>\n                <ul>\n                    {\n                        ourAssumption.map((a,i) => {\n                            return <li key={i} style={{ margin: \"4% 0\" }} className='bodyTextLight'>{a.key + ':'}\n                            <span className='bodyTextDark'> {a.value}</span></li>\n                        })\n                    }\n                </ul>\n            </Modal.Body>\n            <Modal.Footer>\n                <button className=\"solidButton\" onClick={() => onClose()}>\n                    Close\n                </button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["API_ENDPOINT","client","axios","baseURL","withCredentials","DataServicePY","path","optional","method","url","headers","data","JSON","stringify","fetch","body","then","r","json","statusCode","msg","response","type","getAccessToken","localStorage","getItem","token","access_token","interceptors","request","use","config","value","keys","parse","Authorization","error","Promise","reject","status","statusText","console","log","get_goal_scenarios","post","getGoalCorpus","getGoalSIP","getGoalReturnAndMintbox","getMintboxChartData","id","get","getETFChartDataBySymbol","symbol","getMFPerformanceById","getCustomMintboxChartData","getETFTrailingReturns","getETFTrackingError","kFormatter","val","toFixed","normalFormatter","replace","num","fractionDigits","a","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","CurrencyFormat","Number","formatDate","d","skip","seperator","date","Date","isNaN","getTime","month","Array","day","getDate","hours","getHours","minutes","getMinutes","ampm","finalStr","getMonth","getFullYear","addMonths","months","setMonth","getNextSIPDate","sipDate","freq","toISOString","date1","date2","diffTime","Math","abs","diffDays","ceil","minInvestment","arr","length","NAV","map","obj","allocation","requiredAllocation","e","quantities","t","totalAmount","reduce","sum","i","diffArr","maxDiff","max","apply","min","indexOfMaxDiff","indexOf","header","navigation","screenType","backAction","goBack","right","rightAction","isWatchlisted","onWatchlistIconClick","onShareIconClick","onHeaderClick","className","style","marginRight","minWidth","color","cssVar","size","onClick","flex","display","marginLeft","renderRightSide","GoalDetails","props","React","sip","setSip","oneTime","setOneTime","annR","setAnnR","setFundData","mintboxId","setMintboxId","mintboxConstituents","setMintboxConstituents","finalCorpus","setFinalCorpus","pfCorpus","setPfCorpus","inflationCorpus","setInflationCorpus","goalWarnColor","setGoalWarnColor","setGoalProbability","isPriceBreakUp","setIsPriceBreakup","minInvestmentAmt","setminInvestmentAmt","goalPerformanceProjection","setGoalPerformanceProjection","goalSuccessRate","setGoalSuccessRate","STATE","location","state","INITIAL_TARGET_RETURN","goalDue","INFLATION","inflation","showDetailsModal","setShowDetailsModal","showSipAmountModal","setShowSipAmountModal","showOneTimeAmountModal","setShowOneTimeAmountModal","showProjectedInvestmentModal","setShowProjectedInvestmentModal","showSIPWarningModal","setShowSIPWarningModal","showOnetimeWarningModal","setShowOneTimeWarningModal","loading","setLoading","loadingMintboxData","setLoadingMintboxData","chartLoad","setChartLoad","db","p","undefined","investToday","getMintboxData","AdminServices","res","aa","f","MintboxInfo","res2","etf","Symbol","toString","etfsData","currentNav","item","selectedETFs","CurrentWeightage","filter","monthlyExpense","presentCost","retirementAge","includePf","pfBalance","pfMonthlyContribution","AdminServicesPY","required_corpus","pf_corpus","monthlyIncrease","parseInt","getGoalPerformance","MintboxId","goalPer","successRate","finalData","Object","values","key","y","x","name","lastData","bestPerformer","worstPerformer","returns","mintbox_id","probaility","goNext","frequency","fundData","Constituents","saveData","history","push","pathname","SIPWarningModal","show","onHide","keyboard","gap","paddingBottom","OnetimeWarningModal","ProjectedInvestmentModal","options","chart","backgroundColor","height","boost","useGPUTranslations","seriesThreshold","title","text","exporting","enabled","yAxis","plotLines","dashStyle","width","label","fontWeight","xAxis","dateTimeLabelFormats","millisecond","second","minute","hour","week","year","crosshair","endOnTick","startOnTick","legend","plotOptions","series","connectorAllowed","turboThreshold","marker","valueDecimals","valuePrefix","rules","condition","maxWidth","padding","margin","highcharts","Highcharts","SipAmountModal","s","setS","marginTop","placeholder","allowDecimals","allowNegativeValue","disableAbbreviations","prefix","intlConfig","locale","currency","onValueChange","opacity","OneTimeAmountModal","o","setO","fontSize","border","borderRadius","borderBottom","textAlign","whiteSpace","background","marginBottom","position","bottom","borderTop","onNextPress","onClose","lumpsum","PlanDetailsModal","yourResponse","monthlyExpenses","presentAge","onetime","planDetails","ourAssumption","_iterableToArray","iter","iterator","from","_toConsumableArray","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError"],"sourceRoot":""}
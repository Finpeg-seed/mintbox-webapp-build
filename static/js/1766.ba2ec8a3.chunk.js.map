{"version":3,"file":"static/js/1766.ba2ec8a3.chunk.js","mappings":"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","sources":["views/marketing/AllFundsDesktop.js","views/mobileView/components/atoms/CurrencyFormat.js","views/mobileView/components/atoms/MintboxIcon.js","views/mobileView/components/atoms/ReadMoreText.js","views/mobileView/components/atoms/RiskFunctions.js"],"sourcesContent":["import db from \"libs/db\";\nimport React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { isMobileOnly } from \"react-device-detect\";\nimport { FaChartLine } from \"react-icons/fa\";\nimport { FiSearch } from 'react-icons/fi';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { toast } from \"react-toastify\";\nimport AdminServices from \"services/api/AdminServices\";\nimport { CurrencyFormat } from \"views/mobileView/components/atoms/CurrencyFormat\";\nimport MintboxIcon from 'views/mobileView/components/atoms/MintboxIcon';\nimport { MxButton, MxButtonGroup } from \"views/mobileView/components/atoms/MxButton\";\nimport ReadMoreText from \"views/mobileView/components/atoms/ReadMoreText\";\nimport { RiskFormat } from \"views/mobileView/components/atoms/RiskFunctions\";\nimport MxDialog from \"views/mobileView/components/molecules/Cards/MxDialog\";\nimport MarketingFooter from \"views/mobileView/components/molecules/Footers/MarketingFooter\";\nimport MarketingHeader from \"views/mobileView/components/molecules/Headers/MarketingHeader\";\nimport cssVar from 'views/mobileView/styles';\n\n\n\nexport default function AllFunds(props) {\n\n\n    const [showDownload, setShowDownload] = React.useState(false);\n    const [currentMint, setcurrentMint] = React.useState(0);\n\n\n    const [open, setOpen] = React.useState(false)\n\n    const handleClickToOpen = () => {\n        if (isMobileOnly) {\n            const win = window.open(\"/qr-custom/app-link\", \"_blank\");\n            win.focus();\n        } else {\n            setOpen(true);\n        }\n    }\n\n    const handleToClose = () => {\n        setOpen(false);\n    };\n\n\n    const [loading, setLoading] = React.useState(false)\n    const [searchText, setSearchText] = React.useState('');\n\n    const [mintFunds, setMintFunds] = React.useState([])\n    const [filteredFunds, setFilteredFunds] = React.useState([])\n    const [searchResult, setSearchResult] = React.useState([])\n    const [data, setData] = React.useState([]) // used to display\n\n    const [allSelected, setAllSelected] = React.useState(true)\n    const [riskSelected, setRiskSelected] = React.useState('')\n    const [durationSelected, setDurationSelected] = React.useState('')\n\n    const type = props.location.state?.type ? props.location.state?.type : 3\n\n    const riskChipset = [\n        { \"key\": \"1\", \"name\": RiskFormat(1) },\n        { \"key\": \"2\", \"name\": RiskFormat(2) },\n        { \"key\": \"3\", \"name\": RiskFormat(3) },\n        { \"key\": \"4\", \"name\": RiskFormat(4) },\n        { \"key\": \"5\", \"name\": RiskFormat(5) },\n    ]\n\n    const durationChipset = [\n        { \"key\": \"1\", \"name\": \"1-3 year\" },\n        { \"key\": \"2\", \"name\": \"3-5 year\" },\n        { \"key\": \"3\", \"name\": \"5+ year\" },\n    ]\n\n\n    React.useEffect(async () => {\n        await loadData()\n    }, []);\n\n    React.useEffect(async () => {\n        if (mintFunds !== []) {\n            const query = props.location.state?.query ? props.location.state?.query : 'All';\n\n            if (query !== \"All\") {\n                setDurationSelected(query);\n                setAllSelected(false)\n                filterFunds(false, '', query)\n            } else {\n                filterFunds(true, '', '')\n            }\n        }\n    }, [mintFunds])\n\n    React.useEffect(async () => {\n        onSearch();\n    }, [filteredFunds, searchText])\n\n    React.useEffect(async () => {\n        setData(searchResult.slice(0, 25))\n    }, [searchResult])\n\n    const filterFunds = async (isAll, riskScore, durationId) => {\n        if (isAll) {\n            setFilteredFunds(mintFunds)\n        } else {\n            console.log(riskScore, durationId)\n            if (riskScore !== '' && durationId !== '') {\n                console.log('sdjknksjd')\n                setFilteredFunds(mintFunds.filter(m => m.RiskLevel === Number(riskScore) && m.DurationId === Number(durationId)))\n            } else if (riskScore !== '') {\n                setFilteredFunds(mintFunds.filter(m => m.RiskLevel === Number(riskScore)))\n            } else if (durationId !== '') {\n                setFilteredFunds(mintFunds.filter(m => m.DurationId === Number(durationId)))\n            } else {\n                setFilteredFunds(mintFunds)\n            }\n        }\n    }\n\n    const onSearch = async () => {\n        // setLoadingFilter(true)\n        let res = [].concat(filteredFunds)\n        if (searchText.length > 0) {\n            const textArray = searchText.split(' ');\n            if (type === 1) {\n                res = filteredFunds.filter(fund => textArray.every(text => fund.ETFName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n            } else if (type === 2) {\n                res = filteredFunds.filter(fund => textArray.every(text => fund.FundName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n            } else {\n                res = filteredFunds.filter(fund => textArray.every(text => fund.MintboxName.toLowerCase().indexOf(text.toLowerCase()) > -1))\n            }\n        }\n        console.log(res)\n        setSearchResult(res)\n    }\n\n    const loadData = async () => {\n        setLoading(true);\n        await db.get(db.model.allMintboxes).then(async (u) => {\n            if (u) {\n                console.log(\"mint\")\n                setMintFunds(u);\n                setLoading(false);\n            } else {\n                try {\n                    let res3 = await AdminServices.getAllMintboxes(0).then(res3 => res3);\n                    if (res3.type === true) {\n                        console.log(\"Get All Mintbox API: \", res3.data)\n                        db.set(db.model.allMintboxes, JSON.stringify(res3.data))\n                        setMintFunds(res3.data)\n                        setLoading(false);\n                    }\n                } catch (error) {\n                    setLoading(false);\n                    toast.error(error);\n                }\n            }\n        })\n    }\n\n    const loadMoreFunds = () => {\n        setData(searchResult.slice(0, data.length + 10)) // set data with 10 additionalfunds\n    };\n\n    if (loading) {\n        return (\n            <div style={{ flex: 1 }}>\n                <div style={{ flex: 1, justifyContent: 'center', alignContent: 'center' }}>\n                    <Spinner\n                        as=\"span\"\n                        animation=\"grow\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                    />\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <MarketingHeader props={props} />\n                <section id=\"section1\">\n                    <div style={{ backgroundColor: \"#285e4d\" }}>\n                        <div className=\"mxContainerData\" style={{ paddingBottom: 100, height: \"100%\", backgroundColor: \"#fff\" }} >\n                            <div className=\"mxSubContainer\" style={{ width: \"100%\", justifyContent: \"space-between\" }}>\n                                <div style={{ display: \"flex\", flexDirection: \"column\", minWidth: \"25%\", paddingTop: \"1%\" }}>\n                                    <div style={{ display: \"flex\" }}>\n                                        <input\n                                            type=\"checkbox\"\n                                            id=\"checkbox\"\n                                            name=\"checkbox\"\n                                            checked={allSelected}\n                                            onChange={() => {\n                                                setAllSelected(true);\n                                                setRiskSelected('');\n                                                setDurationSelected('');\n                                                filterFunds(true, '', '')\n                                            }}\n                                            className='greenCheckbox'\n                                        />\n                                        <label htmlFor=\"checkbox\" style={{ flex: 1 }}>\n                                            All mintboxes\n                                        </label>\n                                    </div>\n                                    <div className='header1dark' style={{ margin: '10% 0 0 0' }}>Risk level</div>\n                                    {\n                                        riskChipset.map(r => {\n                                            return <div className=\"\" style={{ marginTop: \"6%\" }}>\n                                                <input className='greenCheckbox' type=\"checkbox\" name=\"risk\" value={r.key} id={r.key + 'r'} checked={riskSelected === r.key}\n                                                    onChange={(e) => {\n                                                        if (riskSelected === r.key) {\n                                                            setRiskSelected('')\n                                                            filterFunds(false, '', durationSelected)\n                                                        }\n                                                        else {\n                                                            setRiskSelected(e.target.value);\n                                                            filterFunds(false, r.key, durationSelected)\n                                                        }\n                                                        setAllSelected(false);\n                                                    }} />\n                                                <label className=\"checkbox\" htmlFor={r.key + 'r'}>{r.name}</label>\n                                            </div>\n                                        })\n                                    }\n                                    <div className='header1dark' style={{ margin: '10% 0 0 0' }}>Investment horizon</div>\n                                    {\n                                        durationChipset.map(r => {\n                                            return <div className=\"\" style={{ marginTop: \"6%\" }}>\n                                                <input className='greenCheckbox' type=\"checkbox\" name=\"horizon\" value={r.key} id={r.key + 'h'} checked={durationSelected === r.key}\n                                                    onChange={(e) => {\n                                                        if (durationSelected === r.key) {\n                                                            setDurationSelected('');\n                                                            filterFunds(false, riskSelected, '')\n                                                        } else {\n                                                            setDurationSelected(e.target.value);\n                                                            filterFunds(false, riskSelected, r.key)\n                                                        }\n                                                        setAllSelected(false)\n                                                    }} />\n                                                <label className=\"checkbox\" htmlFor={r.key + 'h'}>{r.name}</label>\n                                            </div>\n                                        })\n                                    }\n                                </div>\n\n                                <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\", maxWidth: \"75%\", position: \"sticky\", top: 0 }}>\n                                    <div style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        justifyContent: \"space-between\",\n                                        alignItems: \"center\",\n                                        marginBottom: \"20px\"\n                                    }}>\n                                        <div style={{ padding: \"4px\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\", border: \"1px solid #E5E5E5 \" + cssVar.getPropertyValue(\"--divider\"), borderRadius: '4px', height: \"35px\", width: \"40%\", backgroundColor: \"#FAFAFA\" }}>\n                                            <FiSearch size={20} style={{ margin: \"0 4%\", color: \"#294C88\" }} />\n                                            <input\n                                                placeholder={type === 1 ? 'Search by ETF name' : type === 2 ? 'Search by mutual fund name' : 'Search by mintbox name'}\n                                                style={{ fontSize: 15, color: cssVar.getPropertyValue(\"--text\"), border: \"none\", outline: \"none\", width: \"100%\", marginTop: 2, backgroundColor: \"#FAFAFA\" }} value={searchText}\n                                                onChange={(e) => { setSearchText(e.target.value) }}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <InfiniteScroll\n                                        dataLength={searchResult.length} //This is important field to render the next data\n                                        next={() => loadMoreFunds()}\n                                        hasMore={data.length < searchResult.length}\n                                        loader={<center>\n                                            <Spinner\n                                                as=\"span\"\n                                                animation=\"grow\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\" />\n                                        </center>}\n                                    >\n                                        {\n                                            data.map((mintbox, index) =>\n                                                <div key={mintbox.MintboxId}\n                                                    // onClick={() => props.history.push(\"/mintbox-description/\" + mintbox.MintboxId)}\n                                                    className=\"py-4\" style={{ display: \"flex\", flexDirection: \"row\", borderBottom: \"1px solid #E5E5E5\", cursor: \"pointer\" }}>\n\n                                                    <MintboxIcon risk={mintbox.RiskLevel} height=\"56px\" width=\"55px\" />\n                                                    <div className=\"mx-4\" style={{ overflow: \"hidden\", display: \"flex\", flexDirection: \"column\", minWidth: \"30%\", flex: 1 }}>\n                                                        <span style={{ fontSize: \"17px\", color: \"#333\", fontWeight: \"500\", lineHeight: \"25.5px\" }}>{mintbox.MintboxName}</span>\n                                                        <span className=\"\" style={{ fontSize: \"14px\", width: \"90%\", color: \"#6c6c6c\", lineHeight: \"21px\", paddingTop: \"8px\", whiteSpace: 'pre-line' }}>\n                                                            <ReadMoreText onViewChange={(p) => {\n                                                                setShowDownload(p)\n                                                                setcurrentMint(index)\n                                                            }} text={mintbox.About.replaceAll(`\\{\\\"\\\\n\\\"\\}`, '\\n\\n')} />\n                                                        </span>\n                                                    </div>\n\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                                                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                                                            <div style={{ display: \"flex\", flexDirection: \"column\", paddingRight: \"60px\", paddingLeft: \"50px\" }} >\n                                                                <span style={{ fontSize: \"14px\" }}>Min SIP</span>\n                                                                <span>{CurrencyFormat(mintbox.MinSIPAmount)}</span>\n                                                            </div>\n\n                                                            <div style={{ display: \"flex\", flexDirection: \"column\", paddingRight: \"20px\" }} >\n                                                                <span style={{ fontSize: \"14px\" }}><FaChartLine size={20} style={{ color: \"#C2DC55\", paddingRight: \"5px\" }} />CAGR</span>\n                                                                <span style={{ color: \"#285e4d\" }} >{parseFloat(mintbox.XIRR || 0).toFixed(2)} %</span>\n                                                            </div>\n                                                        </div>\n                                                        {showDownload && currentMint === index ? <div style={{ display: \"flex\", flexDirection: \"row\", paddingLeft: \"50px\" }}>\n                                                            <div style={{ flex: 1, justifyContent: \"center\" }}>\n                                                                <MxButton\n                                                                    name=\"Install app to invest\"\n                                                                    onPress={handleClickToOpen}\n                                                                    style={{\n                                                                        borderColor: \"#F7D749\",\n                                                                        backgroundColor: \"#F7D749\",\n                                                                        marginTop: 30,\n                                                                        fontSize: \"14px\"\n                                                                    }}\n                                                                />\n                                                                <MxDialog props={props} open={open} handleToClose={handleToClose} />\n                                                            </div>\n                                                        </div> : null}\n                                                    </div>\n\n                                                </div>\n                                            )\n                                        }\n                                        {data.length === 0 ? <span className=\"mxTopSubHead\" style={{ color: \"#333\", fontWeight: \"400\", paddingTop: \"100px\", fontSize: \"18px\", letterSpacing: \"-0.36px\", textAlign: \"center\" }}>\n                                            No result found!\n                                        </span> : null}\n                                    </InfiniteScroll>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n\n\n                <section>\n                    <div className=\"mxContainerData mxDesktopHidden\" style={{ backgroundImage: \"linear-gradient(to right,#F5F5F5, #F5F5F5)\", height: \"25vh\", }} >\n\n                        <div style={{}}>\n                            <span className=\"mxTopSubHead\" style={{ color: \"#333\", fontWeight: \"700\", marginTop: 0, fontSize: \"18px\", letterSpacing: \"-0.36px\" }}>\n                                Ready to invest in mintboxes and grow your money?\n                            </span>\n                            <div style={{}}>\n\n                                <MxButtonGroup\n                                    name1=\"Get started\"\n                                    name2=\"Schedule a call\"\n                                    style1={{\n                                        borderColor: \"#333\",\n                                        backgroundColor: \"#333\",\n                                        color: \"#fff\",\n                                    }}\n                                    style2={{\n                                        borderColor: \"#6c6c6c\",\n                                        backgroundColor: \"transparent\",\n                                        color: \"#6c6c6c\",\n                                    }}\n                                />\n\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\"mxContainerData mxDesktopVisible\" style={{ alignItems: \"center\", backgroundImage: \"linear-gradient(to right,#1B5240, #288A6B)\", paddingTop: \"0px\", paddingBottom: \"0px\", height: \"30vh\", }} >\n\n                        <div style={{ flex: 1, }}>\n                            <span className=\"mxHead\" style={{ color: \"#fff\", textAlign: \"right\", float: \"right\" }}>\n                                Ready to invest in diversified investment portfolios?\n                            </span>\n                        </div>\n                        <div style={{ flex: 1, }}>\n                            <MxButton\n                                name=\"Download the app\"\n                                onPress={handleClickToOpen}\n                                style={{\n                                    borderColor: \"#F7D749\",\n                                    backgroundColor: \"#F7D749\",\n                                    marginTop: 0,\n                                    marginLeft: \"25%\",\n                                }}\n                            />\n                            <MxDialog props={props} open={open} handleToClose={handleToClose} />\n                        </div>\n                    </div>\n                </section>\n\n                <section>\n                    <MarketingFooter props={props} faq={false} clickPricing=\"/#section6\" clickFeatures=\"/#section5\" />\n                </section>\n\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // const ETF = () => {\n    //     return (\n    //         <div className=\"mxSubContainer\">\n    //             <div style={{ width: \"25%\", maxWidth: \"25%\" }}>\n    //                 <FilterModal />\n    //             </div>\n    //             <div style={{ width: \"75%\", maxWidth: \"75%\", paddingRight: \"25px\" }}>\n    //                 <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n    //                     <div style={{ padding: \"4px\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\", border: \"1px solid #E5E5E5 \" + cssVar.getPropertyValue(\"--divider\"), borderRadius: '4px', height: \"35px\", width: \"40%\", backgroundColor: \"#FAFAFA\" }}>\n    //                         <FiSearch size={20} style={{ margin: \"0 4%\", color: \"#294C88\" }} />\n    //                         <input\n    //                             placeholder={type === 1 ? 'Search by ETF name' : type === 2 ? 'Search by mutual fund name' : 'Search by mintbox name'}\n    //                             style={{ fontSize: 15, color: cssVar.getPropertyValue(\"--text\"), border: \"none\", outline: \"none\", width: \"100%\", marginTop: 2, backgroundColor: \"#FAFAFA\" }} value={searchText}\n    //                             onChange={(e) => { setSearchText(e.target.value) }}\n    //                         />\n    //                     </div>\n    //                     <div>\n    //                         <span className=\"mx-5\" style={{ fontSize: cssVar.getPropertyValue('--font-head'), color: cssVar.getPropertyValue('--textLight') }}>Sort by</span>\n    //                         <span className=\"mx-3\" style={{ fontSize: cssVar.getPropertyValue('--font-head'), color: \"#285E4D\" }}>1 Y return</span><FiChevronDown size={20} style={{ color: \"#C2DC55\" }} />\n    //                     </div>\n\n    //                 </div>\n\n    //                 <InfiniteScroll\n    //                     dataLength={searchResult.length} //This is important field to render the next data\n    //                     next={() => loadMoreFunds()}\n    //                     hasMore={data.length < searchResult.length}\n    //                     loader={<center>\n    //                         <Spinner\n    //                             as=\"span\"\n    //                             animation=\"grow\"\n    //                             size=\"sm\"\n    //                             role=\"status\"\n    //                             aria-hidden=\"true\" />\n    //                     </center>}\n    //                 >\n    //                     {\n    //                         data.map((fund, i) =>\n    //                             <div key={i}\n    //                                 onClick={() => props.history.push(\"/etf-description/\" + fund.Symbol)}\n    //                                 className=\"py-4\" style={{ display: \"flex\", flexDirection: \"row\", borderBottom: \"1px solid #E5E5E5\" }}>\n    //                                 <AMCIcon amcName={fund.AMCName} height=\"45px\" width=\"45px\" />\n    //                                 <div className=\"mx-4\" style={{ display: \"flex\", flexDirection: \"column\", minWidth: \"30%\", flex: 1 }}>\n    //                                     <span style={{ fontSize: \"17px\", color: \"#333\", fontWeight: \"500\", lineHeight: \"25.5px\" }}>{fund.ETFName}</span>\n    //                                     <span style={{ fontSize: \"14px\", color: \"#6c6c6c\", lineHeight: \"21px\", paddingTop: \"8px\" }}>{fund.Symbol}</span>\n    //                                 </div>\n\n    //                                 <div style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"30px\" }} >\n    //                                     <span style={{ fontSize: \"14px\" }}><FaChartLine size={20} style={{ color: \"#C2DC55\", paddingRight: \"5px\" }} />1 Y return</span>\n    //                                     {\n    //                                         fund.OneYrReturn > 0 ?\n    //                                             <span style={{ color: \"#285e4d\" }} >{parseFloat(fund.OneYrReturn || 0).toFixed(2)} %</span>\n    //                                             :\n    //                                             fund.OneYrReturn < 0 ?\n    //                                                 <span style={{ color: \"red\" }} >{parseFloat(fund.OneYrReturn || 0).toFixed(2)} %</span>\n    //                                                 :\n    //                                                 <span style={{ color: \"#6c6c6c\" }} >{parseFloat(fund.OneYrReturn || 0).toFixed(2)} %</span>\n    //                                     }\n    //                                 </div>\n    //                                 <div style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"30px\" }} >\n    //                                     <span style={{ fontSize: \"14px\" }}><FaChartLine size={20} style={{ color: \"#C2DC55\", paddingRight: \"5px\" }} />3 Y return</span>\n    //                                     {\n    //                                         fund.ThreeYrReturn > 0 ?\n    //                                             <span style={{ color: \"#285e4d\" }} >{parseFloat(fund.ThreeYrReturn || 0).toFixed(2)} %</span>\n    //                                             :\n    //                                             fund.ThreeYrReturn < 0 ?\n    //                                                 <span style={{ color: \"red\" }} >{parseFloat(fund.ThreeYrReturn || 0).toFixed(2)} %</span>\n    //                                                 :\n    //                                                 <span style={{ color: \"#6c6c6c\" }} >{parseFloat(fund.ThreeYrReturn || 0).toFixed(2)} %</span>\n    //                                     }\n    //                                 </div>\n    //                                 <div style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"30px\" }} >\n    //                                     <span style={{ fontSize: \"14px\" }}><FaChartLine size={20} style={{ color: \"#C2DC55\", paddingRight: \"5px\" }} />5 Y return</span>\n    //                                     {\n    //                                         fund.FiveYrReturn > 0 ?\n    //                                             <span style={{ color: \"#285e4d\" }} >{parseFloat(fund.FiveYrReturn || 0).toFixed(2)} %</span>\n    //                                             :\n    //                                             fund.FiveYrReturn < 0 ?\n    //                                                 <span style={{ color: \"red\" }} >{parseFloat(fund.FiveYrReturn || 0).toFixed(2)} %</span>\n    //                                                 :\n    //                                                 <span style={{ color: \"#6c6c6c\" }} >{parseFloat(fund.FiveYrReturn || 0).toFixed(2)} %</span>\n    //                                     }\n    //                                 </div>\n    //                             </div>\n    //                         )\n    //                     }\n    //                 </InfiniteScroll>\n    //             </div>\n    //         </div>\n    //     )\n    // }\n\n    // const MF = () => {\n    //     return (\n    //         <div className=\"mxSubContainer\">\n    //             <div style={{ width: \"25%\", maxWidth: \"25%\" }}>\n    //                 <FilterModal />\n    //             </div>\n    //             <div style={{ width: \"75%\", maxWidth: \"75%\", paddingRight: \"25px\" }}>\n    //                 <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n    //                     <div style={{ padding: \"4px\", display: \"flex\", flexDirection: \"row\", alignItems: \"center\", border: \"1px solid #E5E5E5 \" + cssVar.getPropertyValue(\"--divider\"), borderRadius: '4px', height: \"35px\", width: \"40%\", backgroundColor: \"#FAFAFA\" }}>\n    //                         <FiSearch size={20} style={{ margin: \"0 4%\", color: \"#294C88\" }} />\n    //                         <input\n    //                             placeholder={type === 1 ? 'Search by ETF name' : type === 2 ? 'Search by mutual fund name' : 'Search by mintbox name'}\n    //                             style={{ fontSize: 15, color: cssVar.getPropertyValue(\"--text\"), border: \"none\", outline: \"none\", width: \"100%\", marginTop: 2, backgroundColor: \"#FAFAFA\" }} value={searchText}\n    //                             onChange={(e) => { setSearchText(e.target.value) }}\n    //                         />\n    //                     </div>\n    //                     <div style={{}}>\n    //                         <span className=\"mx-5\" style={{ fontSize: cssVar.getPropertyValue('--font-head'), color: cssVar.getPropertyValue('--textLight') }}>Sort by</span>\n    //                         <span className=\"mx-3\" style={{ fontSize: cssVar.getPropertyValue('--font-head'), color: \"#285E4D\" }}>1 Y return</span><FiChevronDown size={20} style={{ color: \"#C2DC55\" }} />\n    //                     </div>\n\n    //                 </div>\n\n    //                 <InfiniteScroll\n    //                     dataLength={searchResult.length} //This is important field to render the next data\n    //                     next={() => loadMoreFunds()}\n    //                     hasMore={data.length < searchResult.length}\n    //                     loader={<center>\n    //                         <Spinner\n    //                             as=\"span\"\n    //                             animation=\"grow\"\n    //                             size=\"sm\"\n    //                             role=\"status\"\n    //                             aria-hidden=\"true\" />\n    //                     </center>}\n    //                 >\n\n    //                     {\n    //                         data.map((fund, i) =>\n\n    //                             <div key={i}\n    //                                 onClick={() => props.history.push(\"/mf-description/\" + fund.FundCode)}\n    //                                 className=\"py-4\" style={{ display: \"flex\", flexDirection: \"row\", borderBottom: \"1px solid #E5E5E5\" }}>\n\n    //                                 <AMCIcon amcName={fund.AMCName} height=\"45px\" width=\"45px\" />\n    //                                 <div className=\"mx-4\" style={{ display: \"flex\", flexDirection: \"column\", minWidth: \"30%\", flex: 1 }}>\n    //                                     <span style={{ fontSize: \"17px\", color: \"#333\", fontWeight: \"500\", lineHeight: \"25.5px\" }}>{fund.FundName}</span>\n    //                                     <span style={{ fontSize: \"14px\", color: \"#6c6c6c\", lineHeight: \"21px\", paddingTop: \"8px\" }}>{fund.SchemeType}</span>\n    //                                 </div>\n\n    //                                 <div style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"30px\" }} >\n    //                                     <span style={{ fontSize: \"14px\" }}><FaChartLine size={20} style={{ color: \"#C2DC55\", paddingRight: \"5px\" }} />1 Y return</span>\n    //                                     {\n    //                                         fund.OneYrReturn > 0 ?\n    //                                             <span style={{ color: \"#285e4d\" }} >{parseFloat(fund.OneYrReturn || 0).toFixed(2)} %</span>\n    //                                             :\n    //                                             fund.OneYrReturn < 0 ?\n    //                                                 <span style={{ color: \"red\" }} >{parseFloat(fund.OneYrReturn || 0).toFixed(2)} %</span>\n    //                                                 :\n    //                                                 <span style={{ color: \"#6c6c6c\" }} >{parseFloat(fund.OneYrReturn || 0).toFixed(2)} %</span>\n    //                                     }\n    //                                 </div>\n    //                                 <div style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"30px\" }} >\n    //                                     <span style={{ fontSize: \"14px\" }}><FaChartLine size={20} style={{ color: \"#C2DC55\", paddingRight: \"5px\" }} />3 Y return</span>\n    //                                     {\n    //                                         fund.ThreeYrReturn > 0 ?\n    //                                             <span style={{ color: \"#285e4d\" }} >{parseFloat(fund.ThreeYrReturn || 0).toFixed(2)} %</span>\n    //                                             :\n    //                                             fund.ThreeYrReturn < 0 ?\n    //                                                 <span style={{ color: \"red\" }} >{parseFloat(fund.ThreeYrReturn || 0).toFixed(2)} %</span>\n    //                                                 :\n    //                                                 <span style={{ color: \"#6c6c6c\" }} >{parseFloat(fund.ThreeYrReturn || 0).toFixed(2)} %</span>\n    //                                     }\n    //                                 </div>\n    //                                 <div style={{ display: \"flex\", flexDirection: \"column\", paddingLeft: \"30px\" }} >\n    //                                     <span style={{ fontSize: \"14px\" }}><FaChartLine size={20} style={{ color: \"#C2DC55\", paddingRight: \"5px\" }} />5 Y return</span>\n    //                                     {\n    //                                         fund.FiveYrReturn > 0 ?\n    //                                             <span style={{ color: \"#285e4d\" }} >{parseFloat(fund.FiveYrReturn || 0).toFixed(2)} %</span>\n    //                                             :\n    //                                             fund.FiveYrReturn < 0 ?\n    //                                                 <span style={{ color: \"red\" }} >{parseFloat(fund.FiveYrReturn || 0).toFixed(2)} %</span>\n    //                                                 :\n    //                                                 <span style={{ color: \"#6c6c6c\" }} >{parseFloat(fund.FiveYrReturn || 0).toFixed(2)} %</span>\n    //                                     }\n    //                                 </div>\n    //                             </div>\n    //                         )\n    //                     }\n    //                 </InfiniteScroll>\n    //             </div>\n    //         </div>\n    //     )\n    // }\n\n    // const keyTitles = [\n    //     { title: \"mintboxes\", view: mintboxes(), key: 3 },\n    //     { title: \"ETFs (Exchange Traded Funds)\", view: ETF(), key: 1 },\n    //     { title: \"Direct mutual funds (MFs)\", view: MF(), key: 2 },\n    // ];","function kFormatter(val) {\n  if (val >= 10000000) {val = `₹ ${(val / 10000000).toFixed(2)} cr`}\n  else if (val >= 100000) {val = `₹ ${(val / 100000).toFixed(2)} lac`}\n  else if (val >= 1000) {val = `₹ ${(val / 1000).toFixed(2)} k`}\n  else {val = normalFormatter(val)}\n  return val.replace('-', '');\n}\n\nfunction normalFormatter(num,fractionDigits=0) {\n  const a = new Intl.NumberFormat(\"en-IN\", {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: fractionDigits,\n  }).format(num);\n  return `₹ ${a}`;\n}\n\nexport function CurrencyFormat(num=0, type=\"long\",fractionDigits=0) {\n  return type === \"short\" ? kFormatter(Number(num),fractionDigits) : normalFormatter(Number(num),fractionDigits)\n}\n","import React from 'react'\nimport cssVar from \"views/mobileView/styles\";\nimport { RiskColor } from './RiskFunctions';\n\nexport default function MintboxIcon({risk,height,width}) {\n  return(\n    <div style={{ display:'flex', border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),padding:`calc(${height}*10/100) 0`, borderRadius: '4px', height, width, backgroundColor: RiskColor(risk)}}>\n        <img src='https://d3etfstcuyoos5.cloudfront.net/app-images/wealth-creators.png' style={{height: `calc(${height}*80/100)`,margin:'auto'}}/>\n    </div>\n  )\n}","import React from 'react'\nimport { BsChevronDown, BsChevronUp } from 'react-icons/bs';\nimport cssVar from \"views/mobileView/styles\";\n\nexport default function ReadMoreText({ text, onViewChange = () => { } }) {\n\n  const [isReadMore, setIsReadMore] = React.useState(true);\n\n  React.useEffect(() => {\n    onViewChange(!isReadMore)\n  },[isReadMore])\n\n  if (!text) {\n    return ''\n  }\n  if (text.length < 100) {\n    return text\n  }\n  else return <>\n    {isReadMore ? text?.slice(0, 80) + \"...\" : text}\n    <span onClick={(e) => { e.stopPropagation(); setIsReadMore(!isReadMore) }} style={{ color: cssVar.getPropertyValue('--darkGreen'), fontWeight: \"500\", whiteSpace: \"nowrap\" }}>\n      {isReadMore ? \" Read More \" : \" Read Less \"}{isReadMore ? <BsChevronDown size={12} /> : <BsChevronUp size={12} />}\n    </span>\n  </>\n} ","import cssVar from \"views/mobileView/styles\"\n\nconst RiskFormat = (riskID) => {\n    switch(riskID){\n        case 1 : return'Super conservative'\n        case 2 : return'Conservative'\n        case 3 : return'Moderate'\n        case 4 : return'Aggressive'\n        case 5 : return'Super aggressive'\n        case 6 : return'Very aggressive'\n        default: return ''\n    }\n}\n\nconst RiskColor = (riskID) => {\n    switch(riskID){\n        case 1 : return cssVar.getPropertyValue('--lowestRisk')\n        case 2 : return cssVar.getPropertyValue('--conservativeRisk')\n        case 3 : return cssVar.getPropertyValue('--moderateRisk')\n        case 4 : return cssVar.getPropertyValue('--secondHeighestRisk')\n        case 5 : return cssVar.getPropertyValue('--highestRisk')\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\n\nconst RiskTextColor = (riskID) => {\n    switch(riskID){\n        case 1 : return '#3395FF'\n        case 2 : return cssVar.getPropertyValue('--darkGreen')\n        case 3 : return cssVar.getPropertyValue('--gold')\n        case 4 : return cssVar.getPropertyValue('--internationalEquity')\n        case 5 : return '#FF5A5F'\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\nexport {RiskFormat,RiskColor,RiskTextColor}"],"names":["AllFunds","props","React","showDownload","setShowDownload","currentMint","setcurrentMint","open","setOpen","handleClickToOpen","isMobileOnly","window","focus","handleToClose","loading","setLoading","searchText","setSearchText","mintFunds","setMintFunds","filteredFunds","setFilteredFunds","searchResult","setSearchResult","data","setData","allSelected","setAllSelected","riskSelected","setRiskSelected","durationSelected","setDurationSelected","type","location","state","riskChipset","RiskFormat","loadData","query","filterFunds","onSearch","slice","isAll","riskScore","durationId","console","log","filter","m","RiskLevel","Number","DurationId","res","concat","length","textArray","split","fund","every","text","ETFName","toLowerCase","indexOf","FundName","MintboxName","db","then","u","AdminServices","res3","JSON","stringify","toast","style","flex","justifyContent","alignContent","as","animation","size","role","id","backgroundColor","className","paddingBottom","height","width","display","flexDirection","minWidth","paddingTop","name","checked","onChange","htmlFor","margin","map","r","marginTop","value","key","e","target","maxWidth","position","top","alignItems","marginBottom","padding","border","cssVar","borderRadius","color","placeholder","fontSize","outline","dataLength","next","hasMore","loader","mintbox","index","borderBottom","cursor","risk","overflow","fontWeight","lineHeight","whiteSpace","onViewChange","p","About","replaceAll","paddingRight","paddingLeft","CurrencyFormat","MinSIPAmount","parseFloat","XIRR","toFixed","onPress","borderColor","MintboxId","letterSpacing","textAlign","backgroundImage","name1","name2","style1","style2","float","marginLeft","faq","clickPricing","clickFeatures","kFormatter","val","normalFormatter","replace","num","fractionDigits","a","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","MintboxIcon","RiskColor","src","ReadMoreText","isReadMore","setIsReadMore","onClick","stopPropagation","riskID","RiskTextColor"],"sourceRoot":""}
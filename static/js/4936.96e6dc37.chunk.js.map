{"version":3,"file":"static/js/4936.96e6dc37.chunk.js","mappings":"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","sources":["libs/validators.js","views/mobileView/screens/mintboxpro/AuthScreen/OtherDetail.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/react-bootstrap/esm/ThemeProvider.js"],"sourcesContent":["const EMAIL_REGX = /^[_a-z0-9-+]+(\\.[_a-z0-9-+]+)*(\\+[a-z0-9-]+)?\\u0040[a-z0-9-.]+(\\.[a-z0-9]+)$/;\nconst PAN_REGX = /([A-Z]){5}([0-9]){4}([A-Z]){1}$/;\nconst IFSC_REGX = /^[A-Z]{4}0[A-Z0-9]{6}$/;\n\nconst emailValidator = (email) => {\n  email = email.toLowerCase();\n  if (EMAIL_REGX.test(email) === false) {\n    return { isValid: false, email }; // In-Valid Email\n  }\n\n  return { isValid: true, email }; // Valid Email\n};\n\nconst panValidator = (pan) => {\n  pan = pan.toUpperCase();\n  if (PAN_REGX.test(pan) === false) {\n    return { isValid: false, pan }; // In-Valid PAN\n  }\n\n  return { isValid: true, pan }; // Valid PAN\n};\nconst ifscValidator = (ifsc) => {\n  ifsc = ifsc.toUpperCase();\n  if (IFSC_REGX.test(ifsc) === false) {\n    return { isValid: false, ifsc }; // In-Valid IFSC\n  }\n\n  return { isValid: true, ifsc }; // Valid IFSC\n};\nexport { emailValidator, panValidator,ifscValidator };\n","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { AiOutlineRight } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport FloatingTextInput from 'views/mobileView/components/atoms/FloatingTextInput';\nimport { emailValidator } from \"libs/validators\";\nimport AdminServices from 'services/api/AdminServices';\nimport AuthHeader from 'views/mobileView/components/molecules/Headers/AuthHeader';\nimport { browserName, deviceType, mobileModel, osName, osVersion } from 'react-device-detect';\nimport db from 'libs/db';\nexport default function OtherDetail(props) {\n\n    const [email, setEmail] = React.useState('');\n    const [mobile, setMobile] = React.useState('');\n    const [verify, setVerify] = React.useState('');\n    const [skipPressed, setSkipPressed] = React.useState(false);\n    const { state } = props.location;\n\n    React.useEffect(() => {\n        if (state === null || state === undefined) {\n            props.history.push('/signup')\n        }\n        else {\n            setVerify(state.verify === 'EMAIL' ? 'MOBILE' : 'EMAIL')\n        }\n    }, [])\n\n    const validateInput = () => {\n        if (verify == 'EMAIL') {\n            return emailValidator(email).isValid\n        }\n        else {\n            return mobile.length === 10\n        }\n    }\n\n    const onNextBtnPressed = async () => {\n        if (verify === 'EMAIL') {\n            props.history.push({\n                pathname: '/verify-otp2',\n                state: { ...state, email, verify }\n            })\n        }\n        else {\n            props.history.push({\n                pathname: '/verify-otp2',\n                state: { ...state, mobile, verify }\n            })\n        }\n    };\n\n    const createUser = async () => {\n        setSkipPressed(true);\n        const data = {\n            email: state.email,\n            clientName: state.name,\n            source: deviceType + \":\" + browserName + \":\" + (mobileModel === \"none\" ? osName : mobileModel) + \":\" + osVersion\n        }\n        try {\n            const res = await AdminServices.createUser(data).then((res) => res)\n            if (res.type) {\n                if (res.data.Result === 'success') {\n                    const userData = {\n                        name: state.name,\n                        email: state.email,\n                        id: res.data.ClientId,\n                        isLogged: true,\n                    };\n                    db.set(db.model.user, JSON.stringify({ userData }));\n                    props.history.push({\n                        pathname: '/dashboard',\n                        state: { ...state }\n                    })\n                    setSkipPressed(false);\n                } else {\n                    toast.error(\"Try again ...\");\n                    setSkipPressed(false);\n                }\n            } else {\n                toast.error(\"Try again ...\");\n                setSkipPressed(false);\n            }\n        } catch (error) {\n            toast.error(\"Try again ...\");\n            setSkipPressed(false);\n        }\n    }\n\n    return (\n        <div className=\"mainContainer\">\n            {\n                verify === 'EMAIL' ?\n                    <AuthHeader navigation={props.history} left='login' />\n                    :\n                    <AuthHeader navigation={props.history} left='login' right=\"skip\" onSkip={createUser} />\n            }\n            <div className=\"dataContainer\">\n                <div className=\"login-header\">\n                    <div className=\"bigHeader\">{verify === 'EMAIL' ? \"Let’s verify your email address\" : \"Let’s verify your mobile number\"}</div>\n                    {verify === 'EMAIL' ?\n                        <div className='bodyTextDark' style={{ marginTop: \"6px\" }}>\n                            Please enter your email address<br /> No spam ever!\n                        </div>\n                        :\n                        <div className='bodyTextDark' style={{ marginTop: \"6px\" }}>\n                            Please enter your 10 digit Indian mobile number <br /> No unsolicited calls ever!\n                        </div>\n                    }\n                </div>\n                {verify === 'EMAIL' ?\n                    <FloatingTextInput\n                        type=\"email\"\n                        label=\"Email address\"\n                        autoFocus\n                        onChange={(p) => setEmail(p.target.value)}\n                        value={email}\n                    /> :\n                    <FloatingTextInput\n                        type=\"tel\"\n                        label=\"Mobile number\"\n                        autoFocus\n                        id=\"Mobile-number\"\n                        placeholder=\" \"\n                        maxLength={10}\n                        value={mobile}\n                        onChange={(num) => {\n                            const n = num.target.value.replace(/\\D/g, '');\n                            setMobile(n);\n                        }}\n                    />\n                }\n            </div>\n            <div className=\"login-footer\">\n                {\n                    skipPressed ?\n                        <button className=\"solidButton\" style={{ opacity: 0.4 }}>\n                            <Spinner\n                                style={{ color: \"#fff\" }}\n                                as=\"span\"\n                                animation=\"border\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                        </button>\n                        :\n                        <button className=\"solidButton\" style={{ opacity: validateInput() ? 1 : 0.4 }}\n                            onClick={() => { validateInput() && onNextBtnPressed() }}>\n                            Get OTP <AiOutlineRight size={12} />\n                        </button>\n                }\n            </div>\n        </div>\n    )\n}\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    breakpoints,\n    dir\n  }), [prefixes, breakpoints, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;"],"names":["EMAIL_REGX","PAN_REGX","IFSC_REGX","emailValidator","email","toLowerCase","test","isValid","panValidator","pan","toUpperCase","ifscValidator","ifsc","OtherDetail","props","React","setEmail","mobile","setMobile","verify","setVerify","skipPressed","setSkipPressed","state","location","undefined","history","push","validateInput","length","onNextBtnPressed","pathname","createUser","data","clientName","name","source","deviceType","browserName","mobileModel","osName","osVersion","AdminServices","then","res","type","Result","userData","id","ClientId","isLogged","db","JSON","stringify","toast","className","navigation","left","right","onSkip","style","marginTop","label","autoFocus","onChange","p","target","value","placeholder","maxLength","num","n","replace","opacity","color","as","animation","size","role","onClick","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","Spinner","ref","bsPrefix","variant","Component","useBootstrapPrefix","bsSpinnerPrefix","_jsx","displayName","DEFAULT_BREAKPOINTS","ThemeContext","prefixes","breakpoints","Consumer","Provider","prefix","defaultPrefix","useContext","useIsRTL","dir"],"sourceRoot":""}
{"version":3,"file":"static/js/199.0d8d6f8f.chunk.js","mappings":"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","sources":["views/mobileView/components/atoms/MintboxIcon.js","views/mobileView/components/atoms/RiskFunctions.js","views/mobileView/components/molecules/Cards/FundConstituents.js","views/mobileView/screens/mintboxpro/PortfolioScreen/MintboxScreen.js","views/mobileView/screens/mintboxpro/PortfolioScreen/cards/FundCard.js"],"sourcesContent":["import { baseImgURL } from 'assets/Constant';\nimport React from 'react'\nimport cssVar from \"views/mobileView/styles\";\nimport { RiskColor } from './RiskFunctions';\n\nfunction MintboxIcon({risk,height,width}) {\n  return(\n    <div style={{ display:'flex', border: \"1px solid \" + cssVar.getPropertyValue(\"--light\"),padding:`calc(${height}*10/100) 0`, borderRadius: '4px', height, width, backgroundColor: RiskColor(risk)}}>\n        <img src={baseImgURL+'wealth-creators.webp'} style={{height: `calc(${height}*80/100)`,margin:'auto'}}/>\n    </div>\n  )\n}\n\nexport default React.memo(MintboxIcon)","import cssVar from \"views/mobileView/styles\"\n\nconst RiskFormat = (riskID) => {\n    switch(riskID){\n        case 1 : return'Super conservative'\n        case 2 : return'Conservative'\n        case 3 : return'Moderate'\n        case 4 : return'Aggressive'\n        case 5 : return'Super aggressive'\n        case 6 : return'Very aggressive'\n        default: return ''\n    }\n}\n\nconst RiskColor = (riskID) => {\n    switch(riskID){\n        case 1 : return cssVar.getPropertyValue('--lowestRisk')\n        case 2 : return cssVar.getPropertyValue('--conservativeRisk')\n        case 3 : return cssVar.getPropertyValue('--moderateRisk')\n        case 4 : return cssVar.getPropertyValue('--secondHeighestRisk')\n        case 5 : return cssVar.getPropertyValue('--highestRisk')\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\n\nconst RiskTextColor = (riskID) => {\n    switch(riskID){\n        case 1 : return '#3395FF'\n        case 2 : return cssVar.getPropertyValue('--darkGreen')\n        case 3 : return cssVar.getPropertyValue('--gold')\n        case 4 : return cssVar.getPropertyValue('--internationalEquity')\n        case 5 : return '#FF5A5F'\n        case 6 : return cssVar.getPropertyValue('--highestRisk')\n        default: return ''\n    }\n}\nexport {RiskFormat,RiskColor,RiskTextColor}","import React from 'react';\nimport cssVar from 'views/mobileView/styles';\nimport AMCIcon from '../../atoms/AMCIcon';\n\nfunction FundConstituents({ fundConstituents, type=''}) {\n\n  const displayAssetClass = (id) => {\n    const assetClasses = [\n      {\n        name: 'Indian Equity',\n        color: cssVar.getPropertyValue('--indianEquity')\n      },\n      {\n        name: 'Gold',\n        color: cssVar.getPropertyValue('--gold')\n      },\n      {\n        name: 'Foreign Equity',\n        color: cssVar.getPropertyValue('--internationalEquity')\n      },\n      {\n        name: 'Debt',\n        color: cssVar.getPropertyValue('--debt')\n      },\n      {\n        name: 'Cash',\n        color: cssVar.getPropertyValue('--cash')\n      },\n      {\n        name: 'Silver',\n        color: cssVar.getPropertyValue('--silver')\n      }\n    ];\n    if (fundConstituents) {\n      const fundsArray = fundConstituents.filter(fund => fund.AssetClassId === id)\n      const totalAllocation = fundsArray.reduce((total, fund) => Number(fund.CurrentWeightage) + total, 0);\n      const assetClassName = assetClasses[id - 1].name\n      const assetColor = assetClasses[id - 1].color\n\n      if (fundsArray.length === 0) { return <></> }\n      else return (\n        <>\n          {\n            type === 'only-constituents'?\n            <></>\n            :\n          <div className='header1dark' style={{ display: \"flex\",gap:'4%',alignItems:'center',padding: type==='goal-recom'?'3% 0':'5% 0 1% 0',  margin:'0 4%',borderBottom: type === 'goal-recom'? '1px solid '+cssVar.getPropertyValue('--light') : 'none' }}>\n            {\n              type === 'goal-recom'?\n                <div style={{width:'12px',height:'12px',borderRadius:'50%',backgroundColor: assetColor}}></div>\n                :\n                <></>\n            }\n            <div style={{ flex: 1, color: assetColor }} className='header1dark'>{assetClassName}</div>\n            <div style={{ padding: \"0 4%\",color: assetColor }}>{Number(totalAllocation).toFixed(1)}%</div>\n          </div>\n          }\n          {\n            type ==='goal-recom'? \n              <></>\n              :\n              fundsArray.map((fund,i) => {\n                return (\n                  <div key={i} style={{ display: \"flex\", padding: \"3% 4%\",borderBottom:\"1px solid \"+cssVar.getPropertyValue('--light') }}>\n                    <div style={{ flex: 1, display: 'flex', gap: \"4%\" }}>\n                      <AMCIcon amcName={fund.AMCName} height='24px' width='24px' />\n                      <div className='bodyTextDark' style={{ flex: 1 }}>{fund.ETFName}</div>\n                    </div>\n                    <div className='header1dark' style={{ padding: \"0 4%\" }}>{Number(fund.CurrentWeightage).toFixed(1)}%</div>\n                  </div>\n                )\n              })\n          }\n        </>\n      )\n    }\n  }\n  return (\n    <>\n      <div style={{ display: \"flex\" , padding:\"6% 4% 1% 4%\"}}>\n        <div className='bodyTextLight' style={{ flex: 1 }}>Asset class/ETF</div>\n        <div className='bodyTextLight'>Allocation{type==='portfolio'?'':'*'}</div>\n      </div>\n      {displayAssetClass(1)}\n      {displayAssetClass(2)}\n      {displayAssetClass(3)}\n      {displayAssetClass(4)}\n      {displayAssetClass(5)}\n      {displayAssetClass(6)}\n      {\n        type==='portfolio'?\n          <></>\n          :\n          type === 'goal-recom'?\n          <div className='bodyTextLight' style={{ padding: \"4%\" }}>* Allocations are reviewed periodically to\n          maximize the chances of achieving this goal.</div>\n          :\n          <div className='bodyTextLight' style={{ padding: \"4%\" }}>* Allocation will change in the future to adjust portfolio risk as per our proprietary investment logic.</div>\n      }\n    </>\n  )\n}\n\nexport default FundConstituents","import db from 'libs/db';\nimport React from 'react';\nimport { toast } from \"react-toastify\";\nimport AdminServices from 'services/api/AdminServices';\nimport MainHeader from 'views/mobileView/components/molecules/Headers/MainHeader';\nimport cssVar from 'views/mobileView/styles';\nimport Tabs from 'views/mobileView/components/atoms/Tabs';\nimport HomePortfolioCard from \"views/mobileView/components/molecules/Cards/HomePortfolioCard\";\nimport { HiOutlineExternalLink, HiOutlineHome } from 'react-icons/hi';\nimport { IoEllipsisVerticalCircleOutline } from 'react-icons/io5';\nimport FundCard from \"views/mobileView/screens/mintboxpro/PortfolioScreen/cards/FundCard\";\nimport ActivityLoaderMintbox from 'views/mobileView/components/atoms/ActivityLoaderMintbox';\nimport MintboxIcon from 'views/mobileView/components/atoms/MintboxIcon';\nimport FundConstituents from 'views/mobileView/components/molecules/Cards/FundConstituents';\nimport TransactionCard from './cards/TransactionCard';\nimport Modal from 'react-bootstrap/Modal';\nimport SIPs from './cards/SIPs';\n\nexport default function MintboxScreen(props) {\n\n  const [loading, setLoading] = React.useState(true);\n  const [showMainModal, setShowMainModal] = React.useState(false)\n\n  const [portfolio, setPortfolio] = React.useState({});\n  const [portfolioPerformance, setPortfolioPerformance] = React.useState({});\n  const [assetAllocation, setAssetAllocation] = React.useState([]);\n  const [portfolioXIRR, setPortfolioXIRR] = React.useState({});\n  const [transactions, setTransactions] = React.useState([]);\n  const [user, setUser] = React.useState({});\n\n  const MINTBOXID = props.location.state.MINTBOXID;\n  // const FUNDDATA = portfolio?.MintboxConsolidated?.find(f => f.MintboxId === MINTBOXID && f.GoalId === 0);\n  const FUNDDATA = props.location.state.FUNDDATA;\n  const CONSTITUENTS = portfolio?.MintboxETF?.filter(f => f.MintboxId === MINTBOXID && f.GoalId === 0 && f.MintboxETFBalance !==0).map((item) => {\n    item.CurrentWeightage = item.MintboxETFBalance * 100 / FUNDDATA.MintboxBalance\n    return item\n})\n  \n  React.useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    setLoading(true)\n    try {\n      db.get(db.model.user).then(async (p) => {\n        setUser(p.userData);\n        await getPortfolio(p.userData.id)\n        await getAssetAllocation(p.userData.id)\n        await getPortfolioXIRR(p.userData.id)\n        await getPortfolioPerformance(p.userData.id)\n        await getTransactions(p.userData.id)\n        // await getMintboxConstituentsById()\n        setLoading(false)\n      })\n    } catch (error) {\n      toast.error(error);\n      setLoading(false)\n    }\n  };\n\n  // const getMintboxConstituentsById = async () => {\n  //   let res = await AdminServices.getMintboxConstituentsById(MINTBOXID).then(res => res)\n  //   if (res.type) {\n  //     console.log(\"Get mintbox constituents API\", res.data)\n  //     setMintboxConstituents(res.data)\n  //   } else {\n  //     toast.error(\"Error\")\n  //   }\n  // }\n\n  const getPortfolio = async (id) => {\n    db.get(db.model.portfolio).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolio(id).then(res => res);\n        if (res.type === true) {\n          const a = await JSON.parse(res.data);\n          let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n          console.log(\"Get portfolio API :\", aa)\n          setPortfolio(aa)\n          await (db.model.portfolio, JSON.stringify(aa))\n        }\n      } else {\n        setPortfolio(p)\n      }\n    })\n  }\n\n  const getPortfolioPerformance = async (id) => {\n    db.get(db.model.portfolioPerformance).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolioPerformance(id).then(res => res);\n        if (res.type === true) {\n          const a = await JSON.parse(res.data);\n          let aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n          console.log(\"Get portfolioPerformance API :\", aa)\n          setPortfolioPerformance(aa)\n          await db.set(db.model.portfolioPerformance, JSON.stringify(aa))\n        }\n      } else {\n        setPortfolioPerformance(p)\n      }\n    })\n  }\n\n  const getAssetAllocation = async (id) => {\n    db.get(db.model.assetAllocation).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolioAssetAllocation(id).then(res => res);\n        if (res.type === true) {\n          const aa = res.data;\n          console.log(\"Get portfolio asset allocation API :\", aa)\n          formatAssetAllo(aa)\n          await db.set(db.model.assetAllocation, JSON.stringify(aa))\n        }\n      } else {\n        formatAssetAllo(p)\n      }\n    })\n  }\n  const formatAssetAllo = (aa) => {\n    const assetClasses = [\n      {\n        name: 'Indian Equity',\n        color: cssVar.getPropertyValue('--indianEquity')\n      },\n      {\n        name: 'Gold',\n        color: cssVar.getPropertyValue('--gold')\n      },\n      {\n        name: 'US Equity',\n        color: cssVar.getPropertyValue('--internationalEquity')\n      },\n      {\n        name: 'Debt',\n        color: cssVar.getPropertyValue('--debt')\n      },\n      {\n        name: 'Cash',\n        color: cssVar.getPropertyValue('--cash')\n      },\n      {\n        name: 'Silver',\n        color: cssVar.getPropertyValue('--silver')\n      }\n    ];\n    aa = aa.filter(f => f.MintboxId === MINTBOXID)\n    let percentArr = []\n    const totalAllocation = aa.reduce((total, r) => total + r.AssetBalance, 0)\n    if (aa.length !== 0) {\n      assetClasses.forEach(a => {\n        const subTotal = aa.filter(f => f.AssetClass === a.name).reduce((total, r) => total + r.AssetBalance, 0) * 100 / totalAllocation\n        if (subTotal) {\n          percentArr.push({ ...a, y: Number(subTotal.toFixed(2)) })\n        }\n      })\n    }\n    setAssetAllocation(percentArr)\n  }\n\n  const getPortfolioXIRR = async (id) => {\n    db.get(db.model.portfolioXirr).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getPortfolioXIRR(id).then(res => res);\n        if (res.type === true) {\n          const a = await JSON.parse(res.data);\n          const aa = a.reduce((aa, f) => { return { ...aa, ...f } }, {})\n          console.log(\"Get portfolio XIRR API :\", aa)\n          setPortfolioXIRR(aa)\n          await db.set(db.model.portfolioXirr, JSON.stringify(aa))\n        }\n      } else {\n        setPortfolioXIRR(p)\n      }\n    })\n  }\n\n  const getTransactions = async (id) => {\n    db.get(db.model.transactions).then(async (p) => {\n      if (p === null) {\n        let res = await AdminServices.getTransactions(id).then(res => res);\n        if (res.type === true) {\n          const aa = res.data;\n          console.log(\"Get transactions API :\", aa)\n          setTransactions(aa)\n          await db.set(db.model.transactions, JSON.stringify(aa))\n        }\n      } else {\n        setTransactions(p)\n      }\n    })\n  }\n\n  const onPortfolioRefresh = async () => {\n    await db.remove(db.model.portfolio);\n    await db.remove(db.model.portfolioXirr);\n    await db.remove(db.model.portfolioPerformance);\n    await db.remove(db.model.assetAllocation);\n    await db.remove(db.model.transactions)\n    loadData();\n  }\n\n  const Funds = () => {\n    return (\n      <div style={{ marginTop: \"2%\" }}>\n        {portfolio?.MintboxETF?.filter(f => f.MintboxId === MINTBOXID && f.GoalId === 0 && f.MintboxETFBalance !==0)?.map((data) => (\n          <FundCard key={data.FundCode}\n            onClick={() => props.history.push({\n              pathname: '/portfolio/etfScreen',\n              state: { FUNDCODE: data.FundCode, MINTBOXID: MINTBOXID, TYPE: 'MintboxETF', FUNDDATA:data }\n            })}\n            fundName={data.ETFName}\n            AMCName = {data.AMCName}\n            balance={data.MintboxETFBalance}\n            previousBalance={portfolio?.PrevMintboxETF?.find(m => m.MintboxId === MINTBOXID && m.FundCode === data.FundCode)?.PrevMintboxETFBalance}\n            xirr={Object.values(portfolioXIRR?.MintboxETFXIRR || {}).find(m => m.MintboxId === MINTBOXID && m.FundCode === data.FundCode)?.XIRR}\n            type = {1}\n          />\n        ))}\n      </div>\n    )\n  }\n\n  // const AssetAllocation = () => {\n  //   var options = {\n  //     chart: {\n  //       type: 'pie',\n  //       style: {\n  //         fontFamily: 'DMSans-Regular',\n  //         color: '#333',\n  //         fontWeight: 'normal'\n  //       },\n  //       backgroundColor: \"transparent\",\n  //       plotBackgroundColor: null,\n  //       plotBorderWidth: null,\n  //       plotShadow: false,\n  //       height: 220\n  //     },\n  //     title: {\n  //       text: ''\n  //     },\n  //     scrollbar: {\n  //       enabled: false\n  //     },\n  //     exporting: {\n  //       enabled: false\n  //     },\n  //     legend: {\n  //       itemStyle: {\n  //         color: \"#6c6c6c\",\n  //         fontSize: 14,\n  //         fontWeight: 'normal',\n  //         fontFamily: 'DMSans-Regular'\n  //       }\n  //     },\n\n  //     plotOptions: {\n  //       pie: {\n  //         allowPointSelect: true,\n  //         cursor: 'pointer',\n  //         dataLabels: {\n  //           enabled: false\n  //         },\n\n  //         showInLegend: true,\n  //         size: 150,\n  //       }\n  //     },\n  //     credits: {\n  //       enabled: false\n  //     },\n  //     tooltip: {\n  //       valueSuffix: '%'\n  //     },\n  //     legend: {\n  //       enabled: true,\n  //       align: 'right',\n  //       verticalAlign: 'top',\n  //       layout: 'vertical',\n  //       x: -30,\n  //       y: 30,\n  //       itemMarginBottom: 10\n  //     },\n  //     series: [\n  //       {\n  //         data: assetAllocation\n  //       }\n  //     ]\n  //   };\n  //   return (\n  //     <div style={{ margin: \"4%\" }}>\n  //       <HighchartsReact\n  //         highcharts={Highcharts}\n  //         options={options}\n  //       />\n  //       <div style={{ fontSize: '14px', fontWeight: \"400\", color: \"#6c6c6c\", marginTop: '2%' }}>Last reviewed: 1st March, 2022</div>\n  //       <div style={{ fontSize: '14px', fontWeight: \"400\", color: \"#6c6c6c\", marginTop: '2%' }}>Next review: 1st September, 2021</div>\n  //       <div style={{ fontSize: '14px', fontWeight: \"500\", color: \"#294C88\", marginTop: '4%' }}>Understand review and rebalancing <AiOutlineRight size={14} /></div>\n  //     </div>\n  //   )\n  // }\n\n  const Allocation = () => {\n    return <FundConstituents fundConstituents={CONSTITUENTS} type='portfolio' />\n  }\n\n  const Transactions = () => {\n    return (\n      <div style={{ marginTop: \"2%\" }}>\n        {\n          transactions.filter(t => t.FundType === 1 && t.MintboxId === MINTBOXID).reverse().map((trx,i) => {\n            return <TransactionCard trx={trx} i={i} type={3}/>\n          })\n        }\n      </div>\n    )\n  }\n\n  const keyTitles = [\n    { title: 'Funds', view: Funds() },\n    // { title: 'Asset allocation', view: AssetAllocation() },\n    { title: 'Allocation', view: Allocation() },\n    { title: 'SIPs', view: SIPs({navigation:props.history,TYPE:3, FUNDCODE:MINTBOXID, FUNDDATA: FUNDDATA}) },\n    { title: 'Transactions', view: Transactions() }\n  ];\n\n  const MainModal = () => {\n    const [selectedOption, setSelectedOption] = React.useState()\n\n    const onConfirm = () => {\n      switch (selectedOption) {\n        case 'redeem': {\n          props.history.push({\n            pathname: '/portfolio/redeem-mintbox',\n            state: { fundData: FUNDDATA, constituents: CONSTITUENTS }\n          })\n          setShowMainModal(false);\n          break;\n        }\n        case 'sip': {\n          setShowMainModal(false);\n          props.history.push({\n            pathname: '/portfolio/confirm-invest',\n            state: { fundData: FUNDDATA, type: 3, sip: true }\n          })\n          break;\n        }\n        default: setShowMainModal(false)\n      }\n    }\n    return (\n      <Modal\n        className=\"bottom-drawer\"\n        show={showMainModal}\n        onHide={() => setShowMainModal(false)}\n        keyboard={false}\n      >\n        <Modal.Body>\n          <div className=\"radio-item\" style={{ marginTop: \"6%\" }}>\n            <input type=\"radio\" name=\"fund\" onChange={(e) => { setSelectedOption(e.target.value) }} value=\"sip\" id=\"sip\" />\n            <label className=\"bodyTextDark radio-label\" htmlFor=\"sip\">Start a SIP</label>\n          </div>\n          <div className=\"radio-item\" style={{ marginTop: \"6%\" }}>\n            <input type=\"radio\" name=\"fund\" onChange={(e) => { setSelectedOption(e.target.value) }} value=\"redeem\" id=\"redeem\" />\n            <label className=\"bodyTextDark radio-label\" htmlFor=\"redeem\" style={{ color: cssVar.getPropertyValue('--peach') }}>Redeem</label>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"outlineButton\" onClick={() => setShowMainModal(false)}>\n            Close\n          </button>\n          <button className=\"solidButton\" onClick={() => onConfirm()}>\n            Confirm\n          </button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n\n  if (loading) {\n    return (\n      <ActivityLoaderMintbox />\n    );\n  }\n\n  return (\n    <div className='mainContainer'>\n      <MainHeader\n        navigation={props.history}\n        header=\"mintbox\"\n      />\n      <div className=\"dataContainer px-0\">\n        <div style={{ margin: \"4% 4% 2%\" }}>\n          <div style={{ display: \"flex\", gap: \"4%\" }}>\n            <MintboxIcon risk={portfolio.MintboxConsolidated?.find(f => f.MintboxId === MINTBOXID)?.RiskLevel} width='40px' height='40px' />\n            <div className='header1dark' style={{ flex: 1 }}>\n              {FUNDDATA?.MintboxName}\n            </div>\n            <HiOutlineExternalLink size={24} className='secondaryGreen' onClick={() => props.history.push(\"/mintbox-detail/\" + MINTBOXID)} style={{alignSelf:'center'}}/>\n          </div>\n        </div>\n        <HomePortfolioCard\n          navigation={props.history}\n          balance={portfolio.MintboxConsolidated?.find(f => f.MintboxId === MINTBOXID && f.GoalId === 0)?.MintboxBalance}\n          previousBalance={portfolio.PrevMintboxConsolidated?.find(f => f.MintboxId === MINTBOXID && f.GoalId === 0)?.PrevMintboxBalance}\n          // xirr={portfolioXIRR.MintboxXIRR[MINTBOXID]?.XIRR}\n          xirr={Object.values(portfolioXIRR?.MintboxXIRR || {}).find(m => m.MintboxId === MINTBOXID && m.GoalId === 0)?.XIRR}\n          onRefresh={() => { onPortfolioRefresh() }}\n          growthChartData={portfolioPerformance?.Mintbox?.filter(f => f.MintboxId === MINTBOXID)?.map(d => [new Date(d[\"NavDateStr\"]).getTime(), d[\"Balance\"]])}\n        />\n        <Tabs tabsObject={keyTitles} color={cssVar.getPropertyValue('--darkGreen')} />\n      </div>\n      <div className='bottom-nav'>\n        <div className='bn-tab' onClick={() => { props.history.push('/dashboard') }}>\n          <HiOutlineHome size={20} className='footerIcon' />\n          <div className='footerText'>Home</div>\n        </div>\n        <div className='bn-tab' style={{ flex: 3 }}>\n          <button\n            className='solidButton'\n            onClick={() => props.history.push({\n              pathname: '/portfolio/confirm-invest',\n              state: {\n                fundData: FUNDDATA,\n                type: 3\n              }\n            })}>\n            Invest more\n          </button>\n        </div>\n        <div className='bn-tab'>\n          <IoEllipsisVerticalCircleOutline\n            size='48'\n            color={cssVar.getPropertyValue('--secondaryGreen')}\n            onClick={() => setShowMainModal(true)} />\n        </div>\n      </div>\n      <MainModal />\n    </div>\n  );\n}\n","import React from 'react';\nimport { CurrencyFormat } from '../../../../components/atoms/CurrencyFormat';\nimport { AiFillCaretDown, AiFillCaretUp,AiOutlineRight } from \"react-icons/ai\";\nimport MintboxIcon from 'views/mobileView/components/atoms/MintboxIcon';\nimport RedGreenText from 'views/mobileView/components/atoms/RedGreenText';\nimport cssVar from 'views/mobileView/styles';\nimport AMCIcon from 'views/mobileView/components/atoms/AMCIcon';\n\nconst FundCard = ({ fundName,risk=0,AMCName, balance=0, previousBalance=0 , xirr=0, goalName = '',onClick, type=3 }) => {\n  \n  let change = 0;\n  let changePercentage = 0;\n  if(previousBalance !== 0){\n    change = balance-previousBalance;\n    changePercentage = change*100/previousBalance;\n  }\n  return (\n    <div style={{padding:\"4%\",borderBottom:\"1px solid \"+cssVar.getPropertyValue('--light'),display:\"flex\",gap:\"4%\"}} onClick={()=>onClick()}>\n      {\n        type === 1 || type === 2 ?\n          <AMCIcon amcName={AMCName} height='40px' width='40px' />\n          :\n          <MintboxIcon risk={risk} height='40px' width='40px' />\n      }\n      <div style={{flex:\"1\"}}>\n        <div className='header2dark' style={{marginBottom:\"2%\"}}>{fundName}</div>\n        <div className='smallTextLight'>\n          <span>1 Day </span>\n          {\n            change >0?\n              <span style={{color:cssVar.getPropertyValue('--secondaryGreen')}}><AiFillCaretUp size={20} style={{verticalAlign:\"bottom\"}}/> {CurrencyFormat(change,\"long\",2)} ({changePercentage.toFixed(2)}%)</span>\n              :\n            change < 0?\n              <span style={{color:cssVar.getPropertyValue('--red')}}><AiFillCaretDown size={20} style={{verticalAlign:\"bottom\"}}/> {CurrencyFormat(change,\"long\",2)} ({changePercentage.toFixed(2)}%)</span>\n              :\n              <span> {CurrencyFormat(change,\"long\",2)} ({changePercentage}%)</span>\n          }\n        </div>\n        {/* {\n          goalName !== ''?\n          <div className='smallTextLight' style={{marginTop:'2%'}}><HiLink size={14} className=\"secondaryGreen\"/> {goalName}</div>\n          : ''\n        } */}\n      </div>\n      <div>\n        <div className='header2dark' style={{marginBottom:\"4px\"}}>\n          {CurrencyFormat(balance,\"short\")}<AiOutlineRight size={14} className='secondaryGreen' style={{marginLeft:\"4px\"}}/>\n        </div>\n        <div className='bodyTextLight'>\n          <RedGreenText text={xirr.toFixed(2)+'%'} value={xirr}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FundCard;\n"],"names":["MintboxIcon","risk","height","width","style","display","border","cssVar","padding","borderRadius","backgroundColor","RiskColor","src","baseImgURL","margin","React","RiskFormat","riskID","RiskTextColor","fundConstituents","type","displayAssetClass","id","assetClasses","name","color","fundsArray","filter","fund","AssetClassId","totalAllocation","reduce","total","Number","CurrentWeightage","assetClassName","assetColor","length","className","gap","alignItems","borderBottom","flex","toFixed","map","i","amcName","AMCName","ETFName","MintboxScreen","props","loading","setLoading","showMainModal","setShowMainModal","portfolio","setPortfolio","portfolioPerformance","setPortfolioPerformance","setAssetAllocation","portfolioXIRR","setPortfolioXIRR","transactions","setTransactions","setUser","MINTBOXID","location","state","FUNDDATA","CONSTITUENTS","MintboxETF","f","MintboxId","GoalId","MintboxETFBalance","item","MintboxBalance","loadData","db","then","p","userData","getPortfolio","getAssetAllocation","getPortfolioXIRR","getPortfolioPerformance","getTransactions","error","toast","a","AdminServices","res","JSON","parse","data","aa","console","log","stringify","formatAssetAllo","percentArr","r","AssetBalance","forEach","subTotal","AssetClass","push","y","onPortfolioRefresh","keyTitles","title","view","marginTop","onClick","history","pathname","FUNDCODE","FundCode","TYPE","fundName","balance","previousBalance","PrevMintboxETF","find","m","PrevMintboxETFBalance","xirr","Object","values","MintboxETFXIRR","XIRR","Funds","SIPs","navigation","t","FundType","reverse","trx","MainModal","selectedOption","setSelectedOption","show","onHide","keyboard","onChange","e","target","value","htmlFor","fundData","constituents","sip","onConfirm","header","MintboxConsolidated","RiskLevel","MintboxName","size","alignSelf","PrevMintboxConsolidated","PrevMintboxBalance","MintboxXIRR","onRefresh","growthChartData","Mintbox","d","Date","getTime","tabsObject","goalName","change","changePercentage","marginBottom","verticalAlign","CurrencyFormat","marginLeft","text"],"sourceRoot":""}